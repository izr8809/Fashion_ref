{"version":3,"file":"5.js","mappings":"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","sources":["webpack://fashion_ref/./reducers/post.js","webpack://fashion_ref/./reducers/user.js"],"sourcesContent":["export const initialState ={\r\n    postArray :[{\r\n    id: 0,\r\n    name :\"\",\r\n    category:\"\",\r\n    brand:\"\",\r\n    Images: [{\r\n      src :\"\",\r\n    }],\r\n    Hashtags : [{ //어떻게 오는지 모르겠네\r\n      PostHashtag:{\r\n        HashtagId:1,\r\n      },\r\n      name:\"\",\r\n\r\n    }],\r\n    reason:\"\",\r\n    season:\"\",\r\n    link:\"\",\r\n  },],\r\n  pagecount :0,\r\n  postAdded : false,\r\n};\r\n\r\n\r\nconst ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\n\r\n\r\nconst LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\n\r\n\r\nexport const addPost = (data) => {\r\n  return{\r\n    type: ADD_POST_REQUEST,\r\n    data,\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const loadPost = (data) =>{\r\n  return {\r\n    type : LOAD_POST_REQUEST,\r\n    data,\r\n  }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type){\r\n      \r\n    case LOAD_POST_REQUEST:\r\n      console.log(\"action.data\" + action.data)\r\n      return{\r\n          ...state,\r\n          postArray: action.data,\r\n      }\r\n    case ADD_POST_REQUEST:\r\n      return{\r\n        ...state,\r\n        postArray: [action.data, ...state.postArray],\r\n        postadded : true,\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","export const initialState = {\r\n  isLoggedIn: false,\r\n  isLoggingIn: false,\r\n  isLoggingOut: false,\r\n  user: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nconst LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nconst LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nconst LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nconst LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nconst LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nconst LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const loginSuccessAction = (data) => {\r\n  return {\r\n    type: LOG_IN_SUCCESS,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const loginFailureAction = (data) => {\r\n  return {\r\n    type: LOG_IN_FAILURE,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutRequestAction = (data) => {\r\n  return {\r\n    type: LOG_OUT_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutSuccessAction = (data) => {\r\n  return {\r\n    type: LOG_OUT_SUCCESS,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutFailureAction = (data) => {\r\n  return {\r\n    type: LOG_OUT_FAILURE,\r\n    data,\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        isLoggingIn: true,\r\n        user: action.data,\r\n      };\r\n    case LOG_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        isLoggingIn: false,\r\n        user: action.data,\r\n      };\r\n      \r\n    case LOG_IN_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        isLoggingIn: false,\r\n        user: null,\r\n      };\r\n\r\n    case LOG_OUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n      };\r\n      \r\n    case LOG_OUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        isLoggedIn:false,\r\n      };\r\n      \r\n    case LOG_OUT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"names":["initialState","postArray","id","name","category","brand","Images","src","Hashtags","PostHashtag","HashtagId","reason","season","link","pagecount","postAdded","ADD_POST_REQUEST","LOAD_POST_REQUEST","addPost","data","type","loadPost","reducer","state","action","console","log","postadded","isLoggedIn","isLoggingIn","isLoggingOut","user","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","loginRequestAction","loginSuccessAction","loginFailureAction","logoutRequestAction","logoutSuccessAction","logoutFailureAction"],"sourceRoot":""}