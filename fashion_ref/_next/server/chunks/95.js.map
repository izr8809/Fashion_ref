{"version":3,"file":"95.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOe;AACiC;AACE;AACV;AACJ;AACM;AACD;AAMzC,MAAMQ,QAAQ;IACZC,UAAU;IACVC,KAAK;IACLC,MAAM;IACNC,WAAW;IACXC,OAAO;IACPC,SAAS;IACTC,QAAQ;IACRC,WAAW;IACXC,GAAG;AACL;AAMe,SAASC,OAAO,EAAEC,mBAAkB,EAAe,EAAE;IAClE,MAAM,CAACC,UAAUC,iBAAiB,GAAGd,oEAAQA,CAAC;IAC9C,MAAM,CAACe,OAAOC,cAAc,GAAGhB,oEAAQA,CAAC;IACxC,MAAM,CAACiB,MAAMC,aAAa,GAAGlB,oEAAQA,CAAC;IACtC,MAAMmB,aAAa,IAAM;QACvBP,mBAAmB,KAAK;IAC1B;IACA,MAAMQ,WAAW1B,kDAAWA,CAAC,IAAM,CAAC,GAAG,EAAE;IACzC,qBACE,mDAACG,4DAAKA;QACJwB,MAAM,IAAI;QACVC,SAASH;QACTI,mBAAgB;QAChBC,oBAAiB;kBAEjB,sEAAC1B,0DAAGA;YACF2B,WAAU;YACVC,UAAU;YACVC,cAAa;YACbP,UAAUA;YACVQ,IAAI3B;;8BAGJ,mDAACL,iEAAUA;oBAAC6B,WAAU;oBAAKI,SAAQ;8BAAK;;8BAGxC,mDAAClC,gEAASA;oBACRmC,OAAM;oBACNC,MAAK;oBACLC,SAAS;oBACTC,MAAK;oBACLC,OAAOrB;oBACPsB,QAAQ;oBACRN,SAAQ;oBACRO,UAAU,CAACC,IAAM;wBACfvB,iBAAiBuB,EAAEC,MAAM,CAACJ,KAAK;oBACjC;;8BAEF,mDAACvC,gEAASA;oBACRmC,OAAM;oBACNC,MAAK;oBACLC,SAAS;oBACTE,OAAOrB;oBACPsB,QAAQ;oBACRN,SAAQ;oBACRO,UAAU,CAACC,IAAM;wBACfvB,iBAAiBuB,EAAEC,MAAM,CAACJ,KAAK;oBACjC;;8BAEF,mDAACvC,gEAASA;oBACRmC,OAAM;oBACNE,SAAS;oBACTD,MAAK;oBACLE,MAAK;oBACLC,OAAOnB;oBACPoB,QAAQ;oBACRN,SAAQ;oBACRO,UAAU,CAACC,IAAM;wBACfrB,cAAcqB,EAAEC,MAAM,CAACJ,KAAK;oBAC9B;;8BAEF,mDAACvC,gEAASA;oBACRmC,OAAM;oBACNE,SAAS;oBACTD,MAAK;oBACLE,MAAK;oBACLC,OAAOjB;oBACPkB,QAAQ;oBACRN,SAAQ;oBACRO,UAAU,CAACC,IAAM;wBACfnB,aAAamB,EAAEC,MAAM,CAACJ,KAAK;oBAC7B;;8BAEF,mDAACnC,6DAAMA;oBACLkC,MAAK;oBACLD,SAAS;oBACTH,SAAQ;oBACRD,IAAI;wBAAEW,IAAI;wBAAGC,IAAI;oBAAE;oBACnBC,MAAK;8BACN;;;;;AAQT,CAAC","sources":["webpack://fashion_ref/./pages/upload.tsx"],"sourcesContent":["import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\n\r\ntype SignupProps = {\r\n  setuploadModalOpen: any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload({ setuploadModalOpen }: SignupProps) {\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [brand, onChangeBrand] = useInput(\"\");\r\n  const [link, onChangeLink] = useInput(\"\");\r\n  const closeModal = () => {\r\n    setuploadModalOpen(false);\r\n  };\r\n  const onSubmit = useCallback(() => {}, []);\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          업로드\r\n        </Typography>\r\n        <TextField\r\n          label=\"nickname\"\r\n          name=\"user-nickname\"\r\n          fullWidth\r\n          type=\"text\"\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={(e) => {\r\n            onChangeNickname(e.target.value);\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"이름\"\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={(e) => {\r\n            onChangeNickname(e.target.value);\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          fullWidth\r\n          name=\"user-brand\"\r\n          type=\"text\"\r\n          value={brand}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={(e) => {\r\n            onChangeBrand(e.target.value);\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"link\"\r\n          fullWidth\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={link}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={(e) => {\r\n            onChangeLink(e.target.value);\r\n          }}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n  );\r\n}\r\n"],"names":["React","useCallback","TextField","Typography","Modal","Box","Button","useInput","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Upload","setuploadModalOpen","nickname","onChangeNickname","brand","onChangeBrand","link","onChangeLink","closeModal","onSubmit","open","onClose","aria-labelledby","aria-describedby","component","noValidate","autoComplete","sx","variant","label","name","fullWidth","type","value","required","onChange","e","target","mt","mb","size"],"sourceRoot":""}