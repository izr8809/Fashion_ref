{"version":3,"file":"../pages/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA+B;AACO;AACc;AACJ;AACE;AACE;AACJ;AACoB;AACvB;AACnB;AAgB1B,MAAMW,WAAW;IACfC,IAAI;IACJC,IAAI;IACJC,KAAK;IACLC,KAAK;IACLC,KAAK;IACLC,MAAM;AACR;AAEA,MAAMC,SAAS;IACb,QAAQ;IACR,QAAQ;AACV;AACe,SAASC,eAAeC,KAA0B,EAAE;IACjE,MAAMC,SAAS,CAAC,gCAAgC,EAAED,MAAME,EAAE,CAAC,CAAC;IAC5D,MAAMC,YAAYd,kDAAWA,CAAC,IAAI;QAChCe,MAAM;IACR,GAAE,EAAE;IACJ,MAAMC,WAAWhB,kDAAWA,CAAC,IAAI;QAC/BC,kDAAU,CAACW,QAAO,CAClB,GAAGM,IAAI,CAAC,CAACC,SAAS;YAChBC,QAAQC,GAAG,CAACV,MAAME,EAAE;YACpB,MAAMS,QAAQX,MAAMY,KAAK,CAACC,MAAM,CAAC,CAACP,OAAQA,KAAKJ,EAAE,KAAKF,MAAME,EAAE;YAC9DF,MAAMc,OAAO,CAACH;YACdF,QAAQC,GAAG,CAACC;QACd,GACCI,KAAK,CAAC,CAACC,MAAM;YAEZP,QAAQC,GAAG,CAACM;QACd;IACF,GAAE,EAAE;IAEJ,qBACE,wDAACnC,2DAAIA;QACHoC,IAAI;YACFC,UAAU;YACVC,WAAW;QAGb;;0BAEA,wDAAChC,yDAAcA;;kCACb,mDAACJ,gEAASA;wBACRqC,WAAU;wBACV,eAAe;wBACfC,OAAO,CAAC,GAAG,EAAErB,MAAMsB,IAAI,CAAC,CAAC;wBACzBC,KAAI;;kCAEN,wDAACzC,kEAAWA;;0CACV,wDAAC0C;gCAAKC,OAAO;oCAACC,YAAY;oCAAKC,UAAU;gCAAM;;oCAC5C3B,MAAM4B,IAAI;oCAAC;oCAAE,CAAC,EAAE5B,MAAM6B,KAAK,CAAC,CAAC;;;0CAGhC,wDAAC7C,iEAAUA;gCAAC8C,SAAQ;gCAAQC,OAAM;;oCAAiB;oCAC3C/B,MAAMgC,MAAM;;;;;;;0BAIxB,wDAAC5C,sDAAWA;;kCACV,wDAAC6C;wBAAIR,OAAO;4BAACS,OAAM;wBAAM;;0CACvB,mDAAChD,iEAAQA;gCAACgB,IAAG;gCAAWiC,SAAShC;;0CACjC,mDAAClB,mEAAUA;gCAACiB,IAAG;gCAAUiC,SAAS9B;;;;kCAKpC,wDAAC4B;wBAAIR,OAAO;4BAAEW,QAAQ;wBAAM;;0CAC1B,mDAACH;gCACCI,WAAW,CAAC,GAAG,EAAErC,MAAMT,QAAQ,GAAG,GAAG,IAAI,CAAC;gCAC1CkC,OAAO;oCAAEa,SAAS;oCAAgBF,QAAQ;gCAAM;0CAEhD,sEAACG;oCAAEC,MAAK;;wCAAG;wCAAExC,MAAMF,MAAM;;;;4BACpB;4BAAI;;;kCAGb,wDAACmC;wBAAIR,OAAO;4BAAEW,QAAQ;wBAAM;;0CAC1B,mDAACH;gCACCI,WAAU;gCACVZ,OAAO;oCAAEa,SAAS;oCAAgBF,QAAQ;gCAAM;0CAEhD,sEAACG;oCAAEC,MAAK;;wCAAG;wCAAExC,MAAMT,QAAQ;;;;4BACtB;4BAAI;;;oBAGZS,MAAMyC,QAAQ,CAACC,GAAG,CAAC,CAACC,SAASC,sBAC5B,wDAACX;4BAAIR,OAAO;gCAAEW,QAAQ;4BAAM;;8CAC1B,mDAACH;oCACCI,WAAW,CAAC,GAAG,EAAEQ,SAASF,QAAQzC,EAAE,IAAI,EAAE,IAAI,CAAC;oCAC/CuB,OAAO;wCAAEa,SAAS;wCAAgBF,QAAQ;oCAAM;8CAEhD,sEAACG;wCAAEC,MAAK;;4CAAG;4CAAEG,QAAQf,IAAI;;;;gCACpB;gCAAI;;2BANuBgB;;;;;AAa9C,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3H+D;AACR;AACf;AACf;AACc;AACE;AACN;AACY;AACE;AAOlD,MAAMnB,QAAQ;IACZ2B,UAAU;IACVC,KAAK;IACLC,MAAM;IACNC,WAAW;IACXrB,OAAO;IACPsB,SAAS;IACTC,QAAQ;IACRC,WAAW;IACXC,GAAG;AACL;AACe,SAASC,UAAU,EAAEC,cAAa,EAAEC,kBAAiB,EAAkB,EAAgB;IAEpG,MAAMC,MAAM;IACZ,MAAM,CAACC,OAAOC,cAAc,GAAGlB,oEAAQA,CAAC;IACxC,MAAM,CAACmB,UAAUC,iBAAiB,GAAGpB,oEAAQA,CAAC;IAC9C,MAAMqB,WAAW,CAACC,SAAqB,CAAC;IACxC,MAAM,CAACC,MAAMC,QAAQ,GAAGzB,+CAAQA,CAAC;QAC/B5C,IAAK;QACL0B,MAAO,IAAI;IACb;IAEA,MAAM4C,aAAa,IAAM;QACvBV,kBAAkB,KAAK;IACzB;IACA,MAAMW,eAAepF,kDAAWA,CAAC,CAACqF,QAAgB;QAChDA,MAAMC,cAAc;QACpBlE,QAAQC,GAAG,CAAC;QACZD,QAAQC,GAAG,CAACwD;QACZzD,QAAQC,GAAG,CAACsD;QACZ1E,kDAAU,CAACyE,KACT,qCAAqC;QACrC,0BAA0B;QAC1B;YACEC,OAAOA;YACPE,UAAUA;QACZ,GACA;YACEU,SAAS;gBACP,gBAAgB;YAElB;QACF,GACCrE,IAAI,CAAC,CAACC,SAAW;YAChBC,QAAQC,GAAG,CAACF;YACZC,QAAQC,GAAG,CAAC;YACZD,QAAQC,GAAG,CAACF,OAAOqE,IAAI,CAACA,IAAI;YAC5BN,QAAQ/D,OAAOqE,IAAI,CAACA,IAAI;YACxBhB,cAAc,IAAI;QAClB,0CAA0C;QAC1C,6BAA6B;QAC/B,GACC9C,KAAK,CAAC,CAAC+D,QAAU;YAChB1E,MAAM;YACNK,QAAQC,GAAG,CAACoE;QACd;IACJ,GAAG;QAACd;QAAOE;QAAUL;KAAc;IAEnCpD,QAAQC,GAAG,CAAC4D;IACZ,qBAEE,mDAACtB,4DAAKA;QACN+B,MAAM,IAAI;QACVC,SAASR;QACTS,mBAAgB;QAChBC,oBAAiB;kBAEjB,sEAAChC,0DAAGA;YACA9B,WAAU;YACV+D,UAAU;YACVC,cAAa;YACbC,UAAUZ;YACVxD,IAAIQ;;8BAGJ,mDAACzC,iEAAUA;oBAACoC,WAAU;oBAAKU,SAAQ;8BAAK;;8BAGxC,mDAACqB,gEAASA;oBACRmC,OAAM;oBACN1D,MAAK;oBACL2D,SAAS;oBACTC,MAAK;oBACLC,OAAOzB;oBACP0B,QAAQ;oBACR5D,SAAQ;oBACR6D,UAAU1B;;8BAEZ,mDAACd,gEAASA;oBACRmC,OAAM;oBACN1D,MAAK;oBACL2D,SAAS;oBACTE,OAAOvB;oBACPwB,QAAQ;oBACR5D,SAAQ;oBACR6D,UAAUxB;;8BAEZ,mDAAClB,6DAAMA;oBACLuC,MAAK;oBACLD,SAAS;oBACTzD,SAAQ;oBACRb,IAAI;wBAAE2E,IAAI;wBAAGC,IAAI;oBAAE;oBACnBC,MAAK;8BACN;;;;;AAQT,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtFKC;AAvCyB;AAEsB;AACX;AACN;AACQ;AAClB;AACwB;AACA;AACF;AACR;AACxC,8DAA8D;AACV;AACF;AACe;AACnB;AACR;AACU;AACN;AACD;AACK;AAEM;AACU;AACd;AACkB;AACd;AACX;AACA;AACgB;AAEV;AAE/C,MAAMtE,QAA6B;IACjC2F,YAAY;IACZC,SAAS;IACTjF,QAAQ;IACRkF,QAAQ;AACV;AAGA,MAAMC,SAASvB,4DAAMA,CAAC,OAAO,CAAC,EAAEwB,MAAK,EAAE,GAAM;QAC3CpE,UAAU;QACVqE,cAAcD,MAAME,KAAK,CAACD,YAAY;QACtCE,iBAAiB1B,2DAAKA,CAAC,WAAW;QAClC,WAAW;YACT0B,iBAAiB1B,2DAAKA,CAAC,WAAW;QACpC;QACA2B,aAAaJ,MAAMK,OAAO,CAAC;QAC3BC,YAAY;QACZ5F,OAAO;QACP,CAACsF,MAAMO,WAAW,CAACC,EAAE,CAAC,MAAM,EAAE;YAC5BF,YAAYN,MAAMK,OAAO,CAAC;YAC1B3F,OAAO;QACT;IACF;AAEA,MAAM+F,oBAAoBjC,4DAAMA,CAAC,OAAO,CAAC,EAAEwB,MAAK,EAAE,GAAM;QACtDH,SAASG,MAAMK,OAAO,CAAC,GAAG;QAC1BP,QAAQ;QACRlE,UAAU;QACV8E,eAAe;QACf5F,SAAS;QACT6F,YAAY;QACZC,gBAAgB;IAClB;AAEA,MAAMC,kBAAkBrC,4DAAMA,CAACK,gEAASA,EAAE,CAAC,EAAEmB,MAAK,EAAE,GAAM;QACxDzF,OAAO;QACP,yBAAyB;YACvBsF,SAASG,MAAMK,OAAO,CAAC,GAAG,GAAG,GAAG;YAChC,+CAA+C;YAC/CS,aAAa,CAAC,WAAW,EAAEd,MAAMK,OAAO,CAAC,GAAG,CAAC,CAAC;YAC9CU,YAAYf,MAAMgB,WAAW,CAACC,MAAM,CAAC;YACrCvG,OAAO;YACP,CAACsF,MAAMO,WAAW,CAACC,EAAE,CAAC,MAAM,EAAE;gBAC5B9F,OAAO;YACT;YACAoF,QAAQ;QACV;IACF;AAQe,SAASoB,OAAO,EAC7BC,WAAU,EACV9E,cAAa,EACb/C,QAAO,EACK,EAAgB;IAC5B,kCAAkC;IAClC,MAAM8H,UAAU;IAChB,MAAM7E,MAAM;IACZ,MAAM,CAAC8E,WAAWC,aAAa,GAAGlK,2CAAc,CAAC,KAAK;IACtD,MAAM,CAACmK,iBAAiBC,mBAAmB,GAAGpK,2CAAc,CAAC,KAAK;IAClE,MAAM,CAACqK,gBAAgBnF,kBAAkB,GAAGlF,2CAAc,CAAC,KAAK;IAChE,MAAM,CAAC6G,OAAOyD,cAAc,GAAGnG,qEAAQA,CAAC;IACxC,MAAM,CAACoG,UAAUC,YAAY,GAAGxK,2CAAc,CAAqB,IAAI;IACvE,MAAM,CAACyK,oBAAoBC,sBAAsB,GAC/C1K,2CAAc,CAAqB,IAAI;IAEzC,MAAM,CAACW,UAAUgK,YAAY,GAAG3K,2CAAc,CAAC;IAC/C,MAAM,CAACkB,QAAQ0J,UAAU,GAAG5K,2CAAc,CAAC;IAE3C,MAAM6K,mBAAmB,CAAC/E,QAA6B;QACrD6E,YAAY7E,MAAMgF,MAAM,CAACjE,KAAK;IAChC;IACA,MAAMkE,iBAAiB,CAACjF,QAA6B;QACnD8E,UAAU9E,MAAMgF,MAAM,CAACjE,KAAK;IAC9B;IACA,MAAMmE,YAAY,IAAM;QACtBd,aAAa,IAAI;IACnB;IACA,MAAMe,aAAa,IAAM;IACvB,sCAAsC;IACxC;IACA,MAAMC,iBAAiB,IAAM;QAC3BhG,kBAAkB,IAAI;IACxB;IAEA,MAAMiG,kBAAkB,IAAM;QAC5Bf,mBAAmB,IAAI;IACzB;IACA,MAAMgB,aAAaC,QAAQd;IAC3B,MAAMe,mBAAmBD,QAAQZ;IAEjC,MAAMc,wBAAwB,CAACzF,QAAyC;QACtE0E,YAAY1E,MAAM0F,aAAa;IACjC;IAEA,MAAMC,wBAAwB,IAAM;QAClCf,sBAAsB,IAAI;IAC5B;IAEA,MAAMgB,kBAAkB,IAAM;QAC5BlB,YAAY,IAAI;QAChBiB;IACF;IACA,MAAME,SAASlL,kDAAWA,CAAC,IAAM;QAC/B,MAAMmL,YAAY;QAClBlL,iDACM,CAACkL,WACJjK,IAAI,CAAC,CAACC,SAAW;YAChB,IAAIA,OAAOqE,IAAI,CAAC6F,OAAO,IAAI,MAAM7G,cAAc,KAAK;YACpDC,kBAAkB,KAAK;QACzB,GACC/C,KAAK,CAAC,CAACC,MAAQ,CAAC;IACrB,GAAG;QAAC6C;KAAc;IAElB,MAAM8G,cAActL,kDAAWA,CAAC,IAAM;QACpC,IAAIsJ,YAAY;YACdK,mBAAmB,IAAI;QACzB,OAAO;YACLlF,kBAAkB,IAAI;QACxB,CAAC;IACH,GAAG;QAAC6E;KAAW;IAEf,MAAMiC,uBAAuB,CAAClG,QAAyC;QACrE4E,sBAAsB5E,MAAM0F,aAAa;IAC3C;IAEA,MAAMS,YAAYjM,8CAAiB,CACjC,CAACkM,IAAW;QACV,IAAIrF,SAAS,IAAI;YACfnG,iDACM,CAACyE,KACJxD,IAAI,CAAC,CAACC,SAAW;gBAChBM,QAAQN,OAAOqE,IAAI;YACnB,0CAA0C;YAC1C,6BAA6B;YAC/B,GACC9D,KAAK,CAAC,CAAC+D,QAAU;gBAChB1E,MAAM;gBACNK,QAAQC,GAAG,CAACoE;YACd;QACJ,OAAO,IAAIW,MAAMsF,KAAK,CAAC,KAAKC,MAAM,GAAG,GAAG;YACtC5K,MAAM;QACR,OAAO;YACL0K,EAAEnG,cAAc;YAChBmG,EAAEG,eAAe;YACjB3L,kDACO,CACHsJ,SACA;gBACEnG,UAAUgD;gBACVlG,UAAUA;gBACVO,QAAQA;YACV,GACA;gBACE8E,SAAS;oBACP,gBAAgB;gBAElB;YACF,GAEDrE,IAAI,CAAC,CAACC,SAAW;gBAChBC,QAAQC,GAAG,CAAC;gBACZD,QAAQC,GAAG,CAACF,OAAOqE,IAAI;gBACvB/D,QAAQN,OAAOqE,IAAI;YACnB,0CAA0C;YAC1C,6BAA6B;YAC/B,GACC9D,KAAK,CAAC,CAAC+D,QAAU;gBAChB1E,MAAM;gBACNK,QAAQC,GAAG,CAACoE;YACd;QACJ,CAAC;IACH,GACA;QAACW;QAAO3E;KAAQ;IAGlB,MAAMoK,SAAS;IACf,MAAMC,2BACJ,wDAACxE,4DAAIA;QACHwC,UAAUA;QACViC,cAAc;YACZC,UAAU;YACVC,YAAY;QACd;QACApL,IAAIgL;QACJK,WAAW;QACXC,iBAAiB;YACfH,UAAU;YACVC,YAAY;QACd;QACAvG,MAAMiF;QACNhF,SAASsF;;0BAET,mDAAC5D,gEAAQA;gBAACvE,SAASmI;0BAAiB;;0BACpC,mDAAC5D,gEAAQA;gBAACvE,SAASmI;0BAAiB;;;;IAIxC,MAAMmB,eAAe;IACrB,MAAMC,iCACJ,wDAAC/E,4DAAIA;QACHwC,UAAUE;QACV+B,cAAc;YACZC,UAAU;YACVC,YAAY;QACd;QACApL,IAAIuL;QACJF,WAAW;QACXC,iBAAiB;YACfH,UAAU;YACVC,YAAY;QACd;QACAvG,MAAMmF;QACNlF,SAASqF;;0BAET,wDAAC3D,gEAAQA;;kCACP,mDAACN,iEAAUA;wBAACN,MAAK;wBAAQ6F,cAAW;wBAAmB5J,OAAM;kCAC3D,iEAACuE,6DAAKA;4BAACsF,cAAc;4BAAG7J,OAAM;sCAC5B,iEAACgF,kEAAQA;;;kCAGb,mDAACpD;kCAAE;;;;0BAEL,wDAAC+C,gEAAQA;;kCACP,mDAACN,iEAAUA;wBAACN,MAAK;wBAAQ/D,OAAM;kCAC7B,iEAACuE,6DAAKA;4BAACsF,cAAc;4BAAI7J,OAAM;sCAC7B,iEAACiF,2EAAiBA;;;kCAGtB,mDAACrD;kCAAE;;;;0BAEL,wDAAC+C,gEAAQA;gBAACvE,SAASgI;;kCACjB,mDAAC/D,iEAAUA;wBACTN,MAAK;wBACL6F,cAAW;wBACXE,iBAAc;wBACdC,iBAAc;wBACd/J,OAAM;kCAEN,iEAAC+E,2EAAaA;;kCAEhB,mDAACnD;kCAAE;;;;;;IAKT,qBACE,wDAACT,0DAAGA;QAACjC,IAAI;YAAE8K,UAAU;QAAE;;YACpB,CAACpD,cAAcE,2BACd,mDAAC3B,oEAAMA;gBAACrD,eAAeA;gBAAeiF,cAAcA;;YAErDH,cAAcI,iCACb,mDAAC5B,oEAAMA;gBAAC6B,oBAAoBA;;YAE7B,CAACL,cAAcM,gCACd,mDAACrF,uEAASA;gBACRC,eAAeA;gBACfC,mBAAmBA;;0BAGvB,mDAACoC,6DAAMA;gBACL9C,UAAS;gBACT3B,OAAO;oBAAEkG,iBAAiB;oBAAQ5F,OAAO;gBAAO;0BAEhD,sEAACoE,8DAAOA;;sCAWN,mDAACnH,iEAAUA;4BACTgN,MAAM;4BACN5K,WAAU;4BACVH,IAAI;gCAAEqB,SAAS;oCAAE2J,IAAI;oCAAQC,IAAI;gCAAQ;4BAAE;;sCAmB7C,wDAAC3F,mEAAWA;4BACVzE,SAAQ;4BACRb,IAAI;gCACFkL,GAAG;gCACHC,UAAU;gCACVC,cAAc;gCACdzE,aAAa;gCACbzG,WAAW;4BACb;;8CAEA,mDAACqF,kEAAUA;oCAACtG,IAAG;8CAAoC;;8CAGnD,wDAACuG,8DAAMA;oCACL6F,SAAQ;oCACRpM,IAAG;oCACHe,IAAI;wCAAEqB,SAAS;oCAAe;oCAC9BmD,OAAOlG;oCACP+F,OAAM;oCACNK,UAAU8D;;sDAEV,mDAAC/C,gEAAQA;4CAACjB,OAAO;sDAAM;;sDACvB,mDAACiB,gEAAQA;4CAACjB,OAAO;sDAAM;;sDACvB,mDAACiB,gEAAQA;4CAACjB,OAAO;sDAAO;;sDACxB,mDAACiB,gEAAQA;4CAACjB,OAAO;sDAAO;;sDACxB,mDAACiB,gEAAQA;4CAACjB,OAAO;sDAAO;;sDACxB,mDAACiB,gEAAQA;4CAACjB,OAAO;sDAAQ;;;;;;sCAG7B,wDAACc,mEAAWA;4BACVzE,SAAQ;4BACRb,IAAI;gCACFkL,GAAG;gCACHC,UAAU;gCACVC,cAAc;gCACdzE,aAAa;gCACbzG,WAAW;4BACb;;8CAEA,mDAACqF,kEAAUA;oCAACtG,IAAG;8CAAoC;;8CACnD,wDAACuG,8DAAMA;oCACL6F,SAAQ;oCACRpM,IAAG;oCACHe,IAAI;wCAAEqB,SAAS;oCAAe;oCAC9BmD,OAAO3F;oCACPwF,OAAM;oCACNK,UAAUgE;;sDAEV,mDAACjD,gEAAQA;4CAACjB,OAAO;sDAAQ;;sDACzB,mDAACiB,gEAAQA;4CAACjB,OAAO;sDAAQ;;;;;;sCAG7B,wDAAC8G;4BAAKlH,UAAUwF;4BAAWpJ,OAAO;gCAAES,OAAO;4BAAM;;8CAC/C,mDAACkE,iEAAUA;oCAACZ,MAAK;oCAASmG,cAAW;8CACnC,iEAAC9E,oEAAUA;wCAACpF,OAAO;4CAAE+K,MAAM;wCAAU;;;8CAEvC,mDAACrJ,iEAASA;oCACRjD,IAAG;oCACHmC,WAAU;oCACVpB,IAAI;wCAAEqB,SAAS;wCAAgBJ,OAAO;oCAAM;oCAC5CuD,OAAOA;oCACPE,UAAUuD;oCACV5D,OAAM;oCACNxD,SAAQ;oCACR2K,aAAY;oCACZ3G,MAAK;;;;sCAGT,mDAAC5C,0DAAGA;4BAACjC,IAAI;gCAAE8K,UAAU;4BAAE;;sCAEvB,wDAAC7I,0DAAGA;4BAACjC,IAAI;gCAAEqB,SAAS;oCAAE2J,IAAI;oCAAQS,IAAI;gCAAO;4BAAE;;8CAQ7C,wDAACzJ,8DAAMA;oCACLnB,SAAQ;oCACRb,IAAI;wCACFqG,QAAQ;wCACRpF,OAAO;wCACP0F,aAAa;wCACbD,iBAAiB;wCACjBjG,YAAY;oCACd;oCACAoE,MAAK;oCACL3D,SAASwI;;wCACV;sDACK,mDAAC/D,iEAAOA;;;gCAEb,CAAC+B,2BACA,wDAAC1G;oCAAIR,OAAO;wCAAE6F,QAAQ;wCAAOpF,OAAM;oCAAO;;sDACxC,mDAACe,8DAAMA;4CACLuC,MAAK;4CACLD,SAAS;4CACTzD,SAAQ;4CACRb,IAAI;gDACF,iBAAiB;gDACjBiB,OAAO;gDACP0F,aAAa;gDACblG,YAAY;gDACZY,SAAS;4CACX;4CACAwD,MAAK;4CACL3D,SAAS2H;sDACV;;sDAGD,mDAAC7G,8DAAMA;4CACLuC,MAAK;4CACLD,SAAS;4CACTzD,SAAQ;4CACRb,IAAI;gDACF,iBAAiB;gDACjBiB,OAAO;gDACPR,YAAY;gDACZY,SAAS;4CACX;4CACAH,SAASyH;4CACT9D,MAAK;sDACN;;;mDAKH;;sDACE,mDAAC7D;4CAAIR,OAAO;gDAAE6F,QAAQ;4CAAM;sDAC1B,iEAACrE,8DAAMA;gDACLuC,MAAK;gDACLD,SAAS;gDACTzD,SAAQ;gDACRb,IAAI;oDACF,iBAAiB;oDACjBiB,OAAO;oDACP0F,aAAa;oDACblG,YAAY;oDACZY,SAAS;gDACX;gDACAwD,MAAK;gDACL3D,SAASoI;0DACV;;;sDAIH,mDAACnE,iEAAUA;4CACTN,MAAK;4CACL6G,MAAK;4CACLhB,cAAW;4CACXE,iBAAeX;4CACfY,iBAAc;4CACd/J,OAAM;sDAEN,iEAAC+E,2EAAaA;;;kCAGnB;;;sCAYH,mDAAC5D,0DAAGA;4BAACjC,IAAI;gCAAEqB,SAAS;oCAAE2J,IAAI;oCAAQS,IAAI;gCAAO;4BAAE;sCAC7C,iEAACtG,iEAAUA;gCACTN,MAAK;gCACL6F,cAAW;gCACXE,iBAAeJ;gCACfK,iBAAc;gCACd3J,SAASyI;gCACT7I,OAAM;0CAEN,iEAACkF,sEAAQA;;;;;;YAKhByE;YACAP;;;AAGP,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3gB8B;AACqC;AAEhC;AACI;AACM;AACR;AAKtC,MAAM4B,OAAO/G,wEAAMA,CAAC6G,4DAAKA,EAAE,CAAC,EAAErF,MAAK,EAAE,GAAM;QACzCG,iBAAiBH,MAAMwF,OAAO,CAACC,IAAI,KAAK,SAAS,YAAY,MAAM;QACnE,GAAGzF,MAAM0F,UAAU,CAACC,KAAK;QACzB9F,SAASG,MAAMK,OAAO,CAAC;QACvBuF,WAAW;QACXrL,OAAOyF,MAAMwF,OAAO,CAACK,IAAI,CAACC,SAAS;IACrC;AAQe,SAASC,eAAe,EAAEzM,QAAO,EAAEF,MAAK,EAAuB,EAAE;IAE9E,qBACE,mDAACsC,0DAAGA;QAACjC,IAAI;YAAE8K,UAAU;QAAE;kBACrB,iEAACe,2DAAIA;YAACU,SAAS;YAAC3F,SAAS;gBAAEoE,IAAI;gBAAGS,IAAI;YAAE;YAAGe,SAAS;gBAAExB,IAAI;gBAAGC,IAAI;gBAAGQ,IAAI;YAAG;sBACxE9L,MAAM8B,GAAG,CAAC,CAACpC,MAAMsC,sBAChB,mDAACkK,2DAAIA;oBAACY,IAAI;oBAACzB,IAAI;oBAAGC,IAAI;oBAAGQ,IAAI;oBAAKiB,IAAK;8BACrC,iEAACZ;kCACD,sEAACa;4BACCnM,OAAO;gCACLP,UAAU;gCACVoB,SAAS;4BAIX;;8CAEF,mDAACvC,gEAAcA;oCAAC6B,MAAMtB,KAAKsB,IAAI;oCAAEgB,OAAOA;oCAAO9B,SAASA;oCAASF,OAAOA;oCAAOV,IAAII,KAAKJ,EAAE;oCAAEX,UAAUe,KAAKf,QAAQ;oCAAEsC,OAAOvB,KAAKuB,KAAK;oCAAEP,MAAMhB,KAAKuN,MAAM,CAAC,EAAE,CAACC,GAAG;oCAAEhO,QAAQQ,KAAKR,MAAM;oCAAE2C,UAAWnC,KAAKyN,QAAQ;oCAAE/L,QAAS1B,KAAK0B,MAAM;;gCAAG;;;;mBAX3LY;;;AAkBzD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3Cc;AAC0B;AACf;AACsB;AACE;AACV;AACJ;AACM;AAO1C,MAAMnB,QAAQ;IACZ2B,UAAU;IACVC,KAAK;IACLC,MAAM;IACNC,WAAW;IACXrB,OAAO;IACPsB,SAAS;IACTC,QAAQ;IACRC,WAAW;IACXC,GAAG;AACL;AACe,SAASuD,OAAO,EAAErD,cAAa,EAAEiF,aAAY,EAAe,EAAgB;IACzF,MAAM/E,MAAM;IACZ,MAAM,CAACC,OAAOC,cAAc,GAAGlB,oEAAQA,CAAC;IACxC,MAAM,CAACiL,UAAUC,iBAAiB,GAAGlL,oEAAQA,CAAC;IAC9C,MAAM,CAACmB,UAAUC,iBAAiB,GAAGpB,oEAAQA,CAAC;IAC9C,MAAM,CAACmL,eAAeC,iBAAiB,GAAGpL,oEAAQA,CAAC;IACnD,MAAM,CAACqL,eAAeC,iBAAiB,GAAGvL,+CAAQA,CAAC,KAAK;IACxD,MAAMwL,wBAAwBjP,kDAAWA,CACvC,CAACyL,IAAW;QACVqD,iBAAiBrD,EAAEpB,MAAM,CAACjE,KAAK;QAC/B4I,iBAAiBvD,EAAEpB,MAAM,CAACjE,KAAK,KAAKvB;IACtC,GACA;QAACA;QAASiK;KAAiB;IAG7B,MAAMI,aAAa,CAACvK,QAAgB;QAClC,IAAIwK,MAAM,KAAK;QAEf,IAAI,CAACxK,OAAO;YACVwK,MAAM,KAAK;QACb,OAAO;YACL,MAAMC,QACJ,kFAAkFC,IAAI,CACpF1K;YAEJyK,QAASD,MAAM,IAAI,GAAKA,MAAM,KAAK;QACrC,CAAC;QAED,OAAOA;IACT;IAEA,MAAMhK,aAAa,IAAM;QACvBsE,aAAa,KAAK;IACpB;IAEA,iDAAiD;IACjD,oBAAoB;IACpB,kBAAkB;IAClB,sCAAsC;IACtC,qDAAqD;IACrD,0EAA0E;IAC1E,6BAA6B;IAC7B,QAAQ;IACR,OAAO;IAEP,kBAAkB;IAClB,qDAAqD;IACrD,mEAAmE;IAEnE,mBAAmB;IACnB,oBAAoB;IACpB,0DAA0D;IAC1D,wEAAwE;IACxE,OAAO;IACP,UAAU;IAEV,MAAMzD,WAAWhG,kDAAWA,CAC1B,CAACyL,IAAW;QACV,IAAI5G,aAAagK,eAAe;YAC9B,OAAOG,iBAAiB,IAAI;QAC9B,CAAC;QACDvD,EAAEnG,cAAc;QAChB,eAAe;QACf,+BAA+B;QAC/B,IAAI;QACJlE,QAAQC,GAAG,CAACsD,OAAOgK,UAAU9J;QAC7B5E,kDACO,CACHyE,KACA,qCAAqC;QACrC,0BAA0B;QAC1B;YACEC,OAAOA;YACPpC,MAAMoM;YACN9J,UAAUA;QACZ,GACA;YACEU,SAAS;gBACP,gBAAgB;YAElB;QACF,EAEF,iCAAiC;QACjC,kCAAkC;QAClC,wBAAwB;QACxB,iDAAiD;QACjD,KAAK;SACJrE,IAAI,CAAC,CAACC,SAAW;YAChBC,QAAQC,GAAG,CAACF;YACZC,QAAQC,GAAG,CAAC;YACZD,QAAQC,GAAG,CAACF,OAAOqE,IAAI;YACvBhB,cAAc,IAAI;QAClB,0CAA0C;QAC1C,6BAA6B;QAC/B,GACC9C,KAAK,CAAC,CAAC+D,QAAU;YAChB1E,MAAM;YACNK,QAAQC,GAAG,CAACoE;QACd;IACJ,GACA;QAACd;QAAOE;QAAUgK;QAAcrK;QAAgBmK;KAAS;IAGzD,qBACE,mDAAChL,4DAAKA;QACJ+B,MAAM,IAAI;QACVC,SAASR;QACTS,mBAAgB;QAChBC,oBAAiB;kBAEjB,sEAAChC,0DAAGA;YACJ9B,WAAU;YACV+D,UAAU;YACVC,cAAa;YACbC,UAAUA;YACVpE,IAAIQ;;8BAEF,mDAACzC,iEAAUA;oBAACoC,WAAU;oBAAKU,SAAQ;8BAAK;;8BAGtC,mDAACqB,gEAASA;oBACRmC,OAAM;oBACN1D,MAAK;oBACL2D,SAAS;oBACTC,MAAK;oBACLC,OAAOzB;oBACP0B,QAAQ;oBACRZ,OAAOyJ,WAAWvK;oBAClB2B,UAAU1B;;8BAEZ,mDAACd,gEAASA;oBACRmC,OAAM;oBACN1D,MAAK;oBACL2D,SAAS;oBACTE,OAAOuI;oBACPtI,QAAQ;oBACRC,UAAUsI;;8BAEZ,mDAAC9K,gEAASA;oBACRmC,OAAM;oBACNC,SAAS;oBACT3D,MAAK;oBACL4D,MAAK;oBACLC,OAAOvB;oBACPwB,QAAQ;oBACRC,UAAUxB;;8BAEZ,mDAAChB,gEAASA;oBACRmC,OAAM;oBACNC,SAAS;oBACT3D,MAAK;oBACL4D,MAAK;oBACLC,OAAOyI;oBACPxI,QAAQ;oBACRC,UAAUwI;;gBAEXC,+BAAiB,mDAAC5M;8BAAK;;8BACxB,mDAACyB,6DAAMA;oBACHuC,MAAK;oBACLD,SAAS;oBACTzD,SAAQ;oBACRb,IAAI;wBAAE2E,IAAI;wBAAGC,IAAI;oBAAE;oBACnBC,MAAK;8BACN;;;;;AA0Cf,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrOc;AACW;AAC0B;AACF;AACF;AACE;AACV;AACJ;AAC6B;AACnB;AACJ;AACD;AAEV;AAC/B,MAAM+I,YAAY;IAAC;IAAO;IAAO;IAAO;CAAO;AAK/C,MAAMpN,QAAQ;IACZ2B,UAAU;IACVC,KAAK;IACLC,MAAM;IACNC,WAAW;IACXrB,OAAO;IACPsB,SAAS;IACTC,QAAQ;IACRC,WAAW;IACXC,GAAG;AACL;AAWe,SAASwD,OAAO,EAAE6B,mBAAkB,EAAe,EAAE;IAClE,MAAM,CAAC8F,MAAMC,QAAQ,GAAGjM,+CAAQA,CAAC;QAAElB,MAAM;IAAG;IAC5C,wCAAwC;IACxC,mBAAmB;IACnB,uBAAuB;IACvB,KAAK;IACL,MAAMmC,MAAM;IACZ,MAAM,CAACiL,WAAWC,aAAa,GAAGnM,+CAAQA;IAC1C,MAAM,CAAC2C,OAAOyJ,SAAS,GAAGtQ,qDAAc,CAAC;IACzC,MAAM,CAACuQ,SAASC,WAAW,GAAGtM,+CAAQA,CAAC,KAAK;IAC5C,MAAM,CAACuM,WAAWC,aAAa,GAAGxM,+CAAQA,CAAC,KAAK;IAChD,MAAM,CAACkL,UAAUC,iBAAiB,GAAGlL,qEAAQA,CAAC;IAC9C,MAAM,CAACf,QAAQuN,eAAe,GAAGxM,qEAAQA,CAAC;IAC1C,MAAM,CAAClB,OAAO2N,cAAc,GAAGzM,qEAAQA,CAAC;IACxC,MAAM,CAACzB,MAAMmO,aAAa,GAAG1M,qEAAQA,CAAC;IACtC,MAAM,CAACzC,MAAMQ,QAAQ,GAAGgC,+CAAQA,CAAC;QAC/B4M,OAAO;QACPC,MAAM;QACNC,QAAQ;YAAC,IAAI;SAAC;IAChB;IACA,MAAMpL,aAAa,IAAM;QACvBwE,mBAAmB,KAAK;IAC1B;IACA,MAAM,EAAE0G,MAAK,EAAEC,KAAI,EAAEC,OAAM,EAAE,GAAGtP;IAChC,6BAA6B;IAC7B,cAAc;IACd,eAAe;IACf,uCAAuC;IACvC,OAAO;IACP,IAAI;IAGJ,MAAM,CAACf,UAAUgK,YAAY,GAAG3K,qDAAc,CAAC;IAC/C,MAAM,CAACkB,QAAQ0J,UAAU,GAAG5K,qDAAc,CAAC;IAE3C,MAAM,CAACyO,MAAMwC,cAAcC,QAAQ,GAAG/M,qEAAQA,CAAC;IAC/C,MAAMgN,uBAAuB,CAACrL,QAA6B;QACzD6E,YAAY7E,MAAMgF,MAAM,CAACjE,KAAK;IAChC;IACA,MAAMuK,qBAAqB,CAACtL,QAA6B;QACvD8E,UAAU9E,MAAMgF,MAAM,CAACjE,KAAK;IAC9B;IACA,MAAMwK,mBAAmB,CAACnF,IAAqC;QAC7D,IAAIoF,QAAQpF,EAAEpB,MAAM,CAACwG,KAAK;QAC1BC,UAAUD;IACZ;IACA,MAAMC,YAAY,CAACD,QAA2B;QAC5C,IAAIE,YAAmB,EAAE;QACzB,IAAIF,SAASG,WAAW;YACtB,IAAIH,MAAMlF,MAAM,GAAG,GAAG;gBACpB5K,MAAM;YACR,OAAO;gBACLgP,WAAW,IAAI;gBACf,IAAK,IAAIkB,IAAI,GAAGA,IAAIJ,MAAMlF,MAAM,EAAEsF,IAAK;oBACrC,IAAIxB,OAAOoB,KAAK,CAACI,EAAE;oBACnBrB,aAAaiB,KAAK,CAACI,EAAE;oBACrB7P,QAAQC,GAAG,CAACwP,KAAK,CAACI,EAAE;oBACpB,IAAIC,SAAS,IAAIC;oBACjBD,OAAOE,aAAa,CAAC3B;oBACrByB,OAAOG,gBAAgB,CAAC,QAAQ,IAAM;wBACpC,IAAIC,UAAU;4BACZ/O,MAAMkN,KAAKlN,IAAI;4BACf4D,MAAMsJ,KAAKtJ,IAAI;4BACfM,MAAMgJ,KAAKhJ,IAAI;4BACfgI,KAAKyC,OAAO/P,MAAM;wBACpB;wBACA4P,UAAUQ,IAAI,CAACD;wBACf7P,QAAQ;4BACN,GAAGR,IAAI;4BACPsP,QAAQ;mCAAIA;mCAAWQ;6BAAU;wBACnC;oBACF;gBACF;YACF,CAAC;QACH,CAAC;IACH;IAEA,MAAMS,eAAe,CAAC/F,IAAyC;QAC7D,IAAIpB,SAAS,EAAGA,MAAM,CAAqBoH,aAAa;QACxDrQ,QAAQC,GAAG,CAACgJ,QAAQqH;QACpB,IAAIC,cAAc;QAClBvQ,QAAQC,GAAG,CAACsQ;QACZlQ,QAAQ;YACN,GAAGR,IAAI;YACPsP,QAAQ;mBACHA,OAAOqB,KAAK,CAAC,GAAGD;mBAChBpB,OAAOqB,KAAK,CAACD,cAAc;aAC/B;QACH;QACAvQ,QAAQC,GAAG,CAACkP;QACZR,WAAW,KAAK;IAClB;IACA,MAAM8B,kBAAkB7R,kDAAWA,CAAC,CAACyL,IAAW;QAC9CA,EAAEnG,cAAc;QAChBmG,EAAEG,eAAe;QACjBqE,aAAa,IAAI;IACnB,GAAG,EAAE;IAEL,MAAM6B,oBAAoB9R,kDAAWA,CAAC,CAACyL,IAAW;QAChDA,EAAEnG,cAAc;QAChBmG,EAAEG,eAAe;QACjBxK,QAAQC,GAAG,CAAC;QACZ4O,aAAa,KAAK;IACpB,GAAG,EAAE;IACL,MAAM8B,aAAa,CAACtG,IAAW;QAC7BA,EAAEnG,cAAc;QAChBmG,EAAEG,eAAe;QAEjB,IAAIoG,KAAKvG,EAAEwG,YAAY;QACvB,IAAIpB,QAAQmB,IAAInB;QAChBZ,aAAa,KAAK;QAClBa,UAAUD;IACZ;IAEA,MAAMvF,cAActL,kDAAWA,CAAC,CAACyL,IAAqC;QACpEA,EAAEnG,cAAc;IAClB,GAAG,EAAE;IAEL,MAAM4M,cAAc,CAAC,8BAA8B,CAAC;IACpD,MAAM,CAACC,UAAUC,YAAY,GAAE3O,+CAAQA,CAAC;QAAClB,MAAO;IAAE;IAElD+M,gDAASA,CAAC,IAAI;QACZrP,iDAAS,CAACiS,aAAY,CACtB,GAAGhR,IAAI,CAAC,CAACC,SAAS;YAChBC,QAAQC,GAAG,CAACF,OAAOqE,IAAI;YACvB4M,YAAYjR,OAAOqE,IAAI;QACzB,GACC9D,KAAK,CAAC,CAACC,MAAM;YAEZP,QAAQC,GAAG,CAACM;QACd;IACF,GAAE,EAAE;IAEJ,MAAMqE,WAAWhG,kDAAWA,CAC1B,CAACyL,IAAW;QACVA,EAAEnG,cAAc;QAChBmG,EAAEG,eAAe;QACjBxK,QAAQC,GAAG,CAACsO;QACZ,MAAM0C,WAAW,IAAIC;QACrBD,SAASE,MAAM,CAAC,SAAS5C;QACzB0C,SAASE,MAAM,CAAC,YAAY5D;QAC5B0D,SAASE,MAAM,CAAC,SAAS/P;QACzB6P,SAASE,MAAM,CAAC,QAAQtQ;QACxBoQ,SAASE,MAAM,CAAC,YAAYrS;QAC5BmS,SAASE,MAAM,CAAC,UAAU9R;QAC1B4R,SAASE,MAAM,CAAC,WAAWvE;QAC3B/N,kDAAU,CAACyE,KAAK2N;IAChB,UAAU;IACV,aAAa;IACb,aAAa;IACb,8CAA8C;IAC9C,mCAAmC;IACnC,UAAU;IACV,8BAA8B;IAC9B,wBAAwB;IACxB,mEAAmE;IACnE,2CAA2C;IAC3C,WAAW;IACX,UAAU;IACV,qBAAqB;IACrB,gDAAgD;IAChD,6CAA6C;IAC7C,aAAa;IACb,UAAU;IACV,QAAQ;IACR,wCAAwC;IACxC,yCAAyC;IACzC,+BAA+B;IAC/B,wDAAwD;IACxD,YAAY;IACZ,0BAA0B;IAC1B,6BAA6B;IAC7B,mDAAmD;IACnD,sCAAsC;IACtC,SAAS;IACT,0BAA0B;IAC1B,wCAAwC;IACxC,4BAA4B;IAC5B,UAAU;IACZ,GACA;QAAC7P;QAAOP;QAAM0M;QAAUgB;QAAWzP;QAAU8N;QAAMvN;KAAO;IAE5D,qBACE,mDAACkD,4DAAKA;QACJ+B,MAAM,IAAI;QACVC,SAASR;QACTS,mBAAgB;QAChBC,oBAAiB;kBAEjB,sEAAChC,0DAAGA;YACF9B,WAAU;YACV+D,UAAU;YACVC,cAAa;YACbC,UAAUA;YACVpE,IAAIQ;;8BAGJ,mDAACzC,iEAAUA;oBAACoC,WAAU;oBAAKU,SAAQ;8BAAK;;8BAaxC,mDAACqB,gEAASA;oBACRmC,OAAM;oBACNC,SAAS;oBACTtE,IAAI;wBAACE,WAAY;oBAAK;oBACtBS,MAAK;oBACL4D,MAAK;oBACLC,OAAO5D;oBACP6D,QAAQ;oBACR5D,SAAQ;oBACR6D,UAAU6J;;8BAEZ,mDAACrM,gEAASA;oBACRmC,OAAM;oBACNC,SAAS;oBACTtE,IAAI;wBAACE,WAAY;oBAAK;oBACtBS,MAAK;oBACL4D,MAAK;oBACLC,OAAOnE;oBACPoE,QAAQ;oBACR5D,SAAQ;oBACR6D,UAAU8J;;8BAGZ,mDAACtM,gEAASA;oBACRmC,OAAM;oBACNC,SAAS;oBACTtE,IAAI;wBAACE,WAAY;oBAAK;oBACtBS,MAAK;oBACL4D,MAAK;oBACLC,OAAOzD;oBACP0D,QAAQ;oBACR5D,SAAQ;oBACR6D,UAAU4J;;8BAGZ,wDAAChJ,kEAAWA;oBACZtF,IAAI;wBAACiB,OAAO;wBAAO0F,aAAc;wBAAOzG,WAAY;oBAAM;;sCACxD,mDAACqF,iEAAUA;4BAACtG,IAAG;sCAA2B;;sCAC1C,wDAACuG,6DAAMA;4BACL6F,SAAQ;4BACRpM,IAAG;4BACHuF,OAAOlG;4BACP+F,OAAM;4BACNK,UAAUoK;;8CAEV,mDAACrJ,gEAAQA;oCAACjB,OAAO;8CAAI;;8CACrB,mDAACiB,gEAAQA;oCAACjB,OAAO;8CAAI;;8CACrB,mDAACiB,gEAAQA;oCAACjB,OAAO;8CAAI;;8CACrB,mDAACiB,gEAAQA;oCAACjB,OAAO;8CAAI;;8CACrB,mDAACiB,gEAAQA;oCAACjB,OAAO;8CAAI;;8CACrB,mDAACiB,gEAAQA;oCAACjB,OAAO;8CAAI;;;;;;8BAGzB,wDAACc,kEAAWA;oBACZtF,IAAI;wBAACiB,OAAO;wBAAOf,WAAY;oBAAM;;sCACnC,mDAACqF,iEAAUA;4BAACtG,IAAG;sCAA2B;;sCAC1C,wDAACuG,6DAAMA;4BACL6F,SAAQ;4BACRpM,IAAG;4BACHuF,OAAO3F;4BACPwF,OAAM;4BACNK,UAAUqK;;8CAEV,mDAACtJ,gEAAQA;oCAACjB,OAAO;8CAAI;;8CACrB,mDAACiB,gEAAQA;oCAACjB,OAAO;8CAAI;;;;;;8BAGzB,mDAACtC,gEAASA;oBACRjD,IAAG;oBACHe,IAAI;wBAACE,WAAY;oBAAM;oBACvBsE,OAAO4H;oBACP1H,UAAUkK;oBACVtK,SAAS;oBACTD,OAAM;oBACNxD,SAAS;;8BAQX,mDAACG;oBAAII,WAAU;oBACbZ,OAAO;wBAACN,WAAY;oBAAK;8BACzB,sEAACc;wBAAII,WAAU;;4BACZ,CAAC8M,yBACA,wDAAClN;gCACCI,WACEgN,YACI,oCACA,uBAAuB;gCAE7BwC,aAAaX;gCACbY,YAAYZ;gCACZa,aAAaZ;gCACba,QAAQZ;;kDAER,mDAACa;wCACCzM,MAAK;wCACL5D,MAAK;wCACL6K,aAAY;wCACZyF,UAAU,KAAK;wCACfhS,IAAG;wCACHyF,UAAUsK;;kDAEZ,mDAAC3K;wCAAM6M,SAAQ;kDAAa;;;;0CAGhC,mDAAClQ;gCAAII,WAAU;0CACZuN,OAAO5E,MAAM,GAAG,KACf4E,OAAOlN,GAAG,CAAC,CAACgL,MAAW9K,QACrBA,SAAS,kBACP,wDAACX;wCAAII,WAAU;;0DACb,mDAACb;gDAAKW,SAAS0O;0DAAc;;4CAC5BnD,sBAAQ,mDAACkB,oDAAKA;gDAACd,KAAKJ,KAAKI,GAAG;gDAAEvM,KAAKmM,KAAK9L,IAAI;;;uCAFhBgB,uBAK/B,+GACD;;;;;8BAKX,mDAACK,8DAAMA;oBACLuC,MAAK;oBACLD,SAAS;oBACTzD,SAAQ;oBACRb,IAAI;wBAAE2E,IAAI;wBAAGC,IAAI;oBAAE;oBACnBC,MAAK;8BACN;;;;;AAQT,CAAC;;;;;;;;;;;;;;;AC3Y6C;AAG9C,MAAM/C,WAAW,CAACqP,YAAoB;IACpC,MAAM,CAAC3M,OAAO4M,OAAO,GAAGvP,+CAAQA,CAACsP;IACjC,MAAME,UAAUjT,kDAAWA,CAAC,CAACyL,IAAY;QACvCuH,OAAOvH,EAAEpB,MAAM,CAACjE,KAAK;IACvB,GAAG,EAAE;IACL,OAAO;QAACA;QAAO6M;QAASD;KAAO;AACjC;AAGA,iEAAetP,QAAQA,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACZK;AAIa;AACgB;AAChC;AACsC;AAEhE,+CAA+C;AAEhC,SAASyP,OAAO;IAE7B,MAAM,CAAC7J,YAAY9E,cAAc,GAAGjF,qDAAc,CAAC,KAAK;IACxD,MAAM,CAACgC,OAAOE,QAAQ,GAAGgC,+CAAQA,CAAQ,EAAE;IAE3C,MAAM2P,UAAU;IAEhB,MAAMC,WAAWrT,kDAAWA,CAAC,IAAM;QACjCC,iDAAS,CAACmT,SACPlS,IAAI,CAAC,CAACC,SAAW;YAChBC,QAAQC,GAAG,CAACF,OAAOqE,IAAI;YACvB/D,QAAQN,OAAOqE,IAAI;QACnB,0CAA0C;QAC1C,6BAA6B;QAC/B,GACC9D,KAAK,CAAC,CAAC+D,QAAU;YAChB1E,MAAM;YACNK,QAAQC,GAAG,CAACoE;QACd;IAEJ,GAAE;QAAChE;KAAQ;IAEX6N,gDAASA,CAAC,IAAI;QACZ+D;IACF,GAAE;QAACA;KAAS;IAEZ,MAAMC,gBAAgB;IACtBhE,gDAASA,CAAE,IAAI;QACbrP,iDAAS,CAACqT,eACPpS,IAAI,CAAC,CAACC,SAAW;YAChBC,QAAQC,GAAG,CAACF,OAAOqE,IAAI,CAAC+N,KAAK;YAC7B,IAAGpS,OAAOqE,IAAI,CAAC+N,KAAK,EAAC;gBACnB/O,cAAc,IAAI;YACpB,CAAC;QACH,GACC9C,KAAK,CAAC,CAAC+D,QAAU;YAChBrE,QAAQC,GAAG,CAACoE;QACd;IACJ,GAAE,EAAE;IAEJ,qBACE;;0BACE,wDAACyN,kDAAIA;;kCACH,mDAAC7C;kCAAM;;kCACP,mDAACmD;wBAAKjR,MAAK;wBAAckR,SAAQ;;kCACjC,mDAACD;wBAAKjR,MAAK;wBAAWkR,SAAQ;;;;0BAEhC,wDAAC7Q;gBAAIR,OAAO;oBAAEW,QAAQ;oBAAQF,OAAO;gBAAM;;kCACzC,mDAACK;wBAAEJ,SAASuQ;kCAAU,iEAACK;4BAAG7S,IAAG;sCAAQ;;;kCACrC,mDAAC+B;wBAAIR,OAAO;4BAAC4K,cAAc;wBAAM;kCAC/B,iEAAC3D,mEAAMA;4BAACC,YAAYA;4BAAY9E,eAAeA;4BAAe/C,SAASA;;;kCAIzE,mDAACyM,2EAAcA;wBAACzM,SAASA;wBAASF,OAAOA;;;;;;AAIjD,CAAC;;;;;;;;;;ACrED;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA","sources":["webpack://fashion_ref/./Components/AlignItemsList.tsx","webpack://fashion_ref/./Components/LoginForm.tsx","webpack://fashion_ref/./Components/Navbar.tsx","webpack://fashion_ref/./Components/ResponsiveGrid.tsx","webpack://fashion_ref/./Components/signup.tsx","webpack://fashion_ref/./Components/upload.tsx","webpack://fashion_ref/./hooks/useInput.ts","webpack://fashion_ref/./pages/index.tsx","webpack://fashion_ref/external commonjs \"@mui/icons-material/AccountCircle\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Add\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Delete\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Edit\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Mail\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/MoreVert\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Notifications\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Search\"","webpack://fashion_ref/external commonjs \"@mui/material\"","webpack://fashion_ref/external commonjs \"@mui/material/AppBar\"","webpack://fashion_ref/external commonjs \"@mui/material/Badge\"","webpack://fashion_ref/external commonjs \"@mui/material/Box\"","webpack://fashion_ref/external commonjs \"@mui/material/Button\"","webpack://fashion_ref/external commonjs \"@mui/material/Card\"","webpack://fashion_ref/external commonjs \"@mui/material/CardContent\"","webpack://fashion_ref/external commonjs \"@mui/material/CardMedia\"","webpack://fashion_ref/external commonjs \"@mui/material/FormControl\"","webpack://fashion_ref/external commonjs \"@mui/material/Grid\"","webpack://fashion_ref/external commonjs \"@mui/material/IconButton\"","webpack://fashion_ref/external commonjs \"@mui/material/InputBase\"","webpack://fashion_ref/external commonjs \"@mui/material/InputLabel\"","webpack://fashion_ref/external commonjs \"@mui/material/Menu\"","webpack://fashion_ref/external commonjs \"@mui/material/MenuItem\"","webpack://fashion_ref/external commonjs \"@mui/material/Modal\"","webpack://fashion_ref/external commonjs \"@mui/material/Paper\"","webpack://fashion_ref/external commonjs \"@mui/material/Select\"","webpack://fashion_ref/external commonjs \"@mui/material/TextField\"","webpack://fashion_ref/external commonjs \"@mui/material/Toolbar\"","webpack://fashion_ref/external commonjs \"@mui/material/Typography\"","webpack://fashion_ref/external commonjs \"@mui/material/styles\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/amp-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/amp-mode.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/head-manager-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-blur-svg.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-config-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-config.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-loader\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/side-effect.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/utils/warn-once.js\"","webpack://fashion_ref/external commonjs \"next/head\"","webpack://fashion_ref/external commonjs \"react\"","webpack://fashion_ref/external commonjs \"react/jsx-runtime\"","webpack://fashion_ref/external module \"axios\""],"sourcesContent":["import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport {useCallback, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\ntype AlignItemsListProps = {\r\n  category: number;\r\n  brand: string;\r\n  link: string;\r\n  season: string;\r\n  reason: string;\r\n  hashtags: any[];\r\n  id : number,\r\n  setPost: any;\r\n  posts : any[];\r\n  index : number;\r\n  name : string;\r\n};\r\n\r\nconst category = {\r\n  상의: 1,\r\n  하의: 2,\r\n  아우터: 3,\r\n  디테일: 4,\r\n  이미지: 5,\r\n  악세사리: 6,\r\n};\r\n\r\nconst season = {\r\n  \"23SS\": 7,\r\n  \"23FW\": 8,\r\n};\r\nexport default function AlignItemsList(props: AlignItemsListProps) {\r\n  const DELAPI = `http://localhost:3065/deletpost/${props.id}`\r\n  const editClick = useCallback(()=>{\r\n    alert(\"만드는 중입니다..\");\r\n  },[])\r\n  const delClick = useCallback(()=>{\r\n    axios.post(DELAPI,{\r\n    }).then((result)=>{\r\n      console.log(props.id)\r\n      const Posts = props.posts.filter((post)=> post.id !== props.id)\r\n      props.setPost(Posts);\r\n      console.log(Posts);\r\n    })\r\n    .catch((err)=>{\r\n\r\n      console.log(err)\r\n    })\r\n  },[])\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        maxWidth: \"15\",\r\n        marginTop: \"20px\",\r\n        // borderRadius: \"24px\",\r\n        // boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          // height=\"300\"\r\n          image={`../${props.link}`}\r\n          alt=\"green iguana\"\r\n        />\r\n        <CardContent>\r\n          <span style={{fontWeight :900, fontSize: \"130%\"}}>\r\n            {props.name}_{`${props.brand}`}\r\n          </span>\r\n\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            선정이유 {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <div style={{width:\"100%\"}}>\r\n          <EditIcon id=\"editicon\" onClick={editClick}/>\r\n          <DeleteIcon id=\"delicon\" onClick={delClick}/>\r\n        </div>\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${props.category / 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{props.season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className=\"Tag1 Tag\"\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{props.category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        {props.hashtags.map((hashtag, index) => (\r\n          <div style={{ margin: \"2px\" }} key={index}>\r\n            <div\r\n              className={`Tag${parseInt(hashtag.id) % 8} Tag`}\r\n              style={{ display: \"inline-block\", margin: \"2px\" }}\r\n            >\r\n              <a href=\"\">#{hashtag.name}</a>\r\n            </div>{\" \"}\r\n            &nbsp;\r\n          </div>\r\n        ))}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect,useState } from 'react';\r\nimport useInput from '../hooks/useInput';\r\nimport axios from 'axios';\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\n\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  setIsLoggedIn : any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function LoginForm({ setIsLoggedIn, setloginModalOpen }: LoginFormProps): ReactElement {\r\n    \r\n  const API = \"http://localhost:3065/login\";\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const onFinish = (values: FormData) => {};\r\n  const [User, setUser] = useState({\r\n    id : 0,\r\n    name : null,\r\n  });\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback((event : any) => {\r\n    event.preventDefault();\r\n    console.log(\"signup\")\r\n    console.log(password)\r\n    console.log(email)\r\n    axios.post(API,\r\n      // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n      // 회원가입창에서 클라이언트가 입력하는 데이터\r\n      {\r\n        email: email,           \r\n        password: password,  // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n      },\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          // 'Accept': 'application/json',\r\n        },\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        console.log(\"singupDB!\");\r\n        console.log(result.data.data)\r\n        setUser(result.data.data);\r\n        setIsLoggedIn(true);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert('로그인이 정상적으로 되지 않았습니다.');\r\n        console.log(error); \r\n      })\r\n  }, [email, password, setIsLoggedIn]);\r\n\r\n  console.log(User)\r\n  return (\r\n    \r\n    <Modal\r\n    open={true}\r\n    onClose={closeModal}\r\n    aria-labelledby=\"modal-modal-title\"\r\n    aria-describedby=\"modal-modal-description\"\r\n  >\r\n    <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          로그인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      </Modal>\r\n  )\r\n\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\n// import { useNavigate  } from 'react-router-dom'; // 설치한 패키지\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/signup\";\r\nimport Upload from \"@/Components/upload\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\nconst inter = Inter({ subsets: [\"latin\"] });\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(\"#F8F8F8\", 0.73),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(\"#F8F8F8\", 0.33),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n    height: \"40%\",\r\n  },\r\n}));\r\n\r\ntype NavbarProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n};\r\n\r\nexport default function Navbar({\r\n  isLoggedIn,\r\n  setIsLoggedIn,\r\n  setPost,\r\n}: NavbarProps): ReactElement {\r\n  // const navigate = useNavigate();\r\n  const HASHAPI = \"http://localhost:3065/hashtagsearch\";\r\n  const API = \"http://localhost:3065/loadpost\";\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n\r\n  const onChangeCategory = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const onChangeSeason = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const showModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const reloadPost = () => {\r\n    // navigate('/home'); // /test로 url 이동\r\n  };\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const showUploadModal = () => {\r\n    setuploadModalOpen(true);\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    const LOGOUTAPI = \"http://localhost:3065/logout\";\r\n    axios\r\n      .get(LOGOUTAPI)\r\n      .then((result) => {\r\n        if (result.data.message == \"ok\") setIsLoggedIn(false);\r\n        setloginModalOpen(false);\r\n      })\r\n      .catch((err) => {});\r\n  }, [setIsLoggedIn]);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (isLoggedIn) {\r\n      setuploadModalOpen(true);\r\n    } else {\r\n      setloginModalOpen(true);\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      if (value == \"\") {\r\n        axios\r\n          .get(API)\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n            console.log(error);\r\n          });\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        axios\r\n          .post(\r\n            HASHAPI,\r\n            {\r\n              hashtags: value,\r\n              category: category,\r\n              season: season,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          .then((result) => {\r\n            console.log(\"----------------------------\");\r\n            console.log(result.data);\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"로그인이 정상적으로 되지 않았습니다.\");\r\n            console.log(error);\r\n          });\r\n      }\r\n    },\r\n    [value, setPost]\r\n  );\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {!isLoggedIn && modalOpen && (\r\n        <Signup setIsLoggedIn={setIsLoggedIn} setModalOpen={setModalOpen} />\r\n      )}\r\n      {isLoggedIn && uploadModalOpen && (\r\n        <Upload setuploadModalOpen={setuploadModalOpen} />\r\n      )}\r\n      {!isLoggedIn && loginModalOpen && (\r\n        <LoginForm\r\n          setIsLoggedIn={setIsLoggedIn}\r\n          setloginModalOpen={setloginModalOpen}\r\n        />\r\n      )}\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          {/* <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n            onClick={reloadPost}\r\n          >\r\n            <HomeIcon color=\"disabled\" />\r\n          </IconButton> */}\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            {/* <p>검색할 태그</p> */}\r\n          </Typography>\r\n          {/* <Search>\r\n            <StyledInputBase\r\n              onChange={(event) => {\r\n                setValue(event.target.value);\r\n              }}\r\n              placeholder=\"태그 입력\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyPress={(event) => {\r\n                if (event.which == 32) alert(value);\r\n              }}\r\n            />\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n          </Search> */}\r\n          <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">\r\n              카테고리\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              value={category}\r\n              label=\"category\"\r\n              onChange={onChangeCategory}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"25px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">시즌</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              value={season}\r\n              label=\"season\"\r\n              onChange={onChangeSeason}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <form onSubmit={TagSearch} style={{ width: \"50%\" }}>\r\n            <IconButton type=\"submit\" aria-label=\"search\">\r\n              <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n            </IconButton>\r\n            <TextField\r\n              id=\"search-bar\"\r\n              className=\"text\"\r\n              sx={{ display: \"inline-block\", width: \"80%\" }}\r\n              value={value}\r\n              onChange={onChangeValue}\r\n              label=\"#상의 #검정\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Search...\"\r\n              size=\"small\"\r\n            />\r\n          </form>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={0} color=\"error\"></Badge>\r\n            </IconButton> */}\r\n            <Button\r\n              variant=\"outlined\"\r\n              sx={{\r\n                height: \"60%\",\r\n                width: \"55%\",\r\n                marginRight: \"5px\",\r\n                backgroundColor: \"#F0F0F0\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n              size=\"small\"\r\n              onClick={uploadClick}\r\n            >\r\n              업로드 <AddIcon />\r\n            </Button>\r\n            {!isLoggedIn ? (\r\n              <div style={{ height: \"60%\", width:\"100%\" }}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div style={{ height: \"60%\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{\r\n                      // height: \"60%\",\r\n                      width: \"100%\",\r\n                      marginRight: \"5px\",\r\n                      fontWeight: \"bold\",\r\n                      display: \"inline-block\",\r\n                    }}\r\n                    size=\"small\"\r\n                    onClick={Logout}\r\n                  >\r\n                    로그아웃\r\n                  </Button>\r\n                </div>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { useCallback, useEffect,useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport AlignItemsList from \"./AlignItemsList\";\r\nimport Grid from '@mui/material/Grid';\r\nimport { useInput } from '@mui/base';\r\nimport axios from 'axios';\r\nimport Image from \"next/image\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\ntype ResponsiveGridProps = {\r\n  setPost: any;\r\n  posts : any[];\r\n};\r\n\r\nexport default function ResponsiveGrid({ setPost, posts }: ResponsiveGridProps) {\r\n  \r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n        {posts.map((post, index) => (\r\n          <Grid item xs={6} sm={4} md={2.4} lg ={4} key={index}>\r\n            <Item>\r\n            <li\r\n              style={{\r\n                maxWidth: \"320px\",\r\n                display: \"inline-block\",\r\n                // marginRight: \"4%\",\r\n                // marginLeft: \"1%\",\r\n                // marginTop: \"1%\",\r\n              }}\r\n            >\r\n            <AlignItemsList name={post.name} index={index} setPost={setPost} posts={posts} id={post.id} category={post.category} brand={post.brand} link={post.Images[0].src} season={post.season} hashtags ={post.Hashtags} reason ={post.reason}/> </li>\r\n            </Item>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from '@mui/material/Button';\r\n\r\ntype SignupProps = {\r\n  setModalOpen: any;\r\n  setIsLoggedIn : any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({ setIsLoggedIn, setModalOpen }: SignupProps): ReactElement {\r\n  const API = \"http://localhost:3065/signups\";\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password,setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email : any) => {\r\n    let res = false;\r\n  \r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n  \r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  // const modalRef = useRef<HTMLDivElement>(null);\r\n  // useEffect(() => {\r\n  //   // 이벤트 핸들러 함수\r\n  //   const handler = (event: any) => {\r\n  //     // mousedown 이벤트가 발생한 영역이 모달창이 아닐 때, 모달창 제거 처리\r\n  //     if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n  //       setModalOpen(false);\r\n  //     }\r\n  //   };\r\n\r\n  //   // 이벤트 핸들러 등록\r\n  //   document.addEventListener(\"mousedown\", handler);\r\n  //   // document.addEventListener('touchstart', handler); // 모바일 대응\r\n\r\n  //   return () => {\r\n  //     // 이벤트 핸들러 해제\r\n  //     document.removeEventListener(\"mousedown\", handler);\r\n  //     // document.removeEventListener('touchstart', handler); // 모바일 대응\r\n  //   };\r\n  // }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if (password !== passwordCheck) {\r\n        return setPasswordError(true);\r\n      }\r\n      e.preventDefault();\r\n      // if (!term) {\r\n      //   return setTermError(true);\r\n      // }\r\n      console.log(email, nickname, password);\r\n      axios\r\n        .post(\r\n          API,\r\n          // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n          // 회원가입창에서 클라이언트가 입력하는 데이터\r\n          {\r\n            email: email,\r\n            name: nickname,\r\n            password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // 'Accept': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        // 그러면 서버에서 클라이언트로 response(응답)으로\r\n        // {ok: true} 아니면 {ok: false}가 온다.\r\n        // .then((response) => {\r\n        //   console.log(response); // response.data로 해야?\r\n        // })\r\n        .then((result) => {\r\n          console.log(result);\r\n          console.log(\"singupDB!\");\r\n          console.log(result.data);\r\n          setIsLoggedIn(true);\r\n          // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n          // history.replace('/login');\r\n        })\r\n        .catch((error) => {\r\n          alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n          console.log(error);\r\n        });\r\n    },\r\n    [email, password, passwordCheck,setIsLoggedIn , nickname]\r\n  );\r\n\r\n    return (\r\n      <Modal\r\n        open={true}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box \r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}>\r\n          {/* <form onSubmit={onSubmit}> */}\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            회원가입\r\n          </Typography>\r\n            <TextField\r\n              label=\"이메일\"\r\n              name=\"user-email\"\r\n              fullWidth\r\n              type=\"email\"\r\n              value={email}\r\n              required\r\n              error={checkEmail(email)}\r\n              onChange={onChangeEmail}\r\n            />\r\n            <TextField\r\n              label=\"이름\"\r\n              name=\"user-nick\"\r\n              fullWidth\r\n              value={nickname}\r\n              required\r\n              onChange={onChangeNickname}\r\n            />\r\n            <TextField\r\n              label=\"비밀번호\"\r\n              fullWidth\r\n              name=\"user-password\"\r\n              type=\"password\"\r\n              value={password}\r\n              required\r\n              onChange={onChangePassword}\r\n            />\r\n            <TextField\r\n              label=\"비밀번호체크\"\r\n              fullWidth\r\n              name=\"user-password-check\"\r\n              type=\"password\"\r\n              value={passwordCheck}\r\n              required\r\n              onChange={setPasswordCheck}\r\n            />\r\n            {passwordError && <span>비밀번호가 일치하지 않습니다.</span>}\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n                size=\"large\"\r\n              >\r\n                회원가입\r\n              </Button>\r\n          {/* </form> */}\r\n        </Box>\r\n        {/* <Button onClick={closeModal}>닫기</Button> */}\r\n      </Modal>\r\n      // {/* <div className={\"container\"} ref={modalRef}>\r\n      //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n      //       <br />\r\n      //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n      //     </TextField>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-nick\">닉네임</label>\r\n      //       <br />\r\n      //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n      //     </div>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-password\">비밀번호</label>\r\n      //       <br />\r\n      //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n      //     </div>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n      //       <br />\r\n      //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n      //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n      //     </div>\r\n      //     {/* <div>\r\n      //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n      //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n      //     </div> */}\r\n      //     <div style={{ marginTop: 10 }}>\r\n      //       <button>가입하기</button>\r\n      //     </div>\r\n      //     <button className={\"close\"} onClick={closeModal}>\r\n      //         X\r\n      //     </button>\r\n      //   </div> */}\r\n      // }\r\n    );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\ntype UploadProps = {\r\n  setuploadModalOpen: any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload({ setuploadModalOpen }: UploadProps) {\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  // const handleChange = (file: any) => {\r\n  //   setFile(file);\r\n  //   console.log(file);\r\n  // };\r\n  const API = \"http://localhost:3065/uploads\";\r\n  const [imageFile, setImageFile] = useState<File>();\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [reason, onChangeReason] = useInput(\"\");\r\n  const [brand, onChangeBrand] = useInput(\"\");\r\n  const [link, onChangeLink] = useInput(\"\");\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const closeModal = () => {\r\n    setuploadModalOpen(false);\r\n  };\r\n  const { title, desc, photos } = post;\r\n  // const handlechange = e =>{\r\n  //   setPost({\r\n  //     ...post,\r\n  //     [e.target.name]: e.target.value;\r\n  //   })\r\n  // }\r\n\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n\r\n  const [text, onChangeText, setText] = useInput('');\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = (files: FileList | null) => {\r\n    let photosArr: any[] = [];\r\n    if (files != undefined) {\r\n      if (files.length > 1) {\r\n        alert(\"이미지는 1개만 넣어주세요\");\r\n      } else {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          setImageFile(files[i]);\r\n          console.log(files[i]);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              photos: [...photos, ...photosArr],\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handeldelete = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    let target = (e.target as HTMLSpanElement).parentElement;\r\n    console.log(target?.dataset);\r\n    let targetindex = 1;\r\n    console.log(targetindex);\r\n    setPost({\r\n      ...post,\r\n      photos: [\r\n        ...photos.slice(0, targetindex),\r\n        ...photos.slice(targetindex + 1),\r\n      ],\r\n    });\r\n    console.log(photos);\r\n    setIsImage(false);\r\n  };\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    console.log(\"leave\");\r\n    setHighlight(false);\r\n  }, []);\r\n  const handledrop = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let dt = e.dataTransfer;\r\n    let files = dt?.files;\r\n    setHighlight(false);\r\n    handfiles(files);\r\n  };\r\n\r\n  const uploadClick = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const USERINFOAPI = `http://localhost:3065/USERINFO`\r\n  const [userInfo, setUserInfo]= useState({name : \"\"});\r\n\r\n  useEffect(()=>{\r\n    axios.get(USERINFOAPI,{\r\n    }).then((result)=>{\r\n      console.log(result.data)\r\n      setUserInfo(result.data)\r\n    })\r\n    .catch((err)=>{\r\n\r\n      console.log(err)\r\n    })\r\n  },[]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      console.log(imageFile);\r\n      const formData = new FormData();\r\n      formData.append(\"image\", imageFile as File);\r\n      formData.append(\"nickname\", nickname);\r\n      formData.append(\"brand\", brand);\r\n      formData.append(\"link\", link);\r\n      formData.append(\"category\", category);\r\n      formData.append(\"season\", season);\r\n      formData.append(\"hashtag\", text);\r\n      axios.post(API, formData);\r\n      //   axios\r\n      //     .post(\r\n      //       API,\r\n      //       // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n      //       // 회원가입창에서 클라이언트가 입력하는 데이터\r\n      //       {\r\n      //         nickname: nickname,\r\n      //         brand: brand,\r\n      //         link: link, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n      //         image : (imageFile as File).name\r\n      //       },\r\n      //       {\r\n      //         headers: {\r\n      //           \"Content-Type\": \"application/json\",\r\n      //           // 'Accept': 'application/json',\r\n      //         },\r\n      //       }\r\n      //     )\r\n      //     // 그러면 서버에서 클라이언트로 response(응답)으로\r\n      //     // {ok: true} 아니면 {ok: false}가 온다.\r\n      //     // .then((response) => {\r\n      //     //   console.log(response); // response.data로 해야?\r\n      //     // })\r\n      //     .then((result) => {\r\n      //       console.log(result);\r\n      //       // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n      //       // history.replace('/login');\r\n      //     })\r\n      //     .catch((error) => {\r\n      //       alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n      //       console.log(error);\r\n      //     });\r\n    },\r\n    [brand, link, nickname, imageFile, category, text, season]\r\n  );\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          업로드\r\n        </Typography>\r\n        {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n        <TextField\r\n          label=\"브랜드\"\r\n          fullWidth\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-brand\"\r\n          type=\"text\"\r\n          value={brand}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeBrand}\r\n        />\r\n        <TextField\r\n          label=\"Link\"\r\n          fullWidth\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={link}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeLink}\r\n        />\r\n        \r\n        <TextField\r\n          label=\"선정이유\"\r\n          fullWidth\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={reason}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeReason}\r\n        />\r\n\r\n        <FormControl \r\n        sx={{width: \"40%\", marginRight : \"10%\", marginTop : \"25px\"}}>\r\n          <InputLabel id=\"demo-simple-select-label\">카테고리</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={category}\r\n            label=\"category\"\r\n            onChange={handleCategoryChange}\r\n          >\r\n            <MenuItem value={10}>상의</MenuItem>\r\n            <MenuItem value={20}>하의</MenuItem>\r\n            <MenuItem value={30}>아우터</MenuItem>\r\n            <MenuItem value={40}>디테일</MenuItem>\r\n            <MenuItem value={50}>이미지</MenuItem>\r\n            <MenuItem value={60}>악세사리</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl \r\n        sx={{width: \"40%\", marginTop : \"25px\"}}>\r\n          <InputLabel id=\"demo-simple-select-label\">시즌</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={season}\r\n            label=\"season\"\r\n            onChange={handleSeasonChange}\r\n          >\r\n            <MenuItem value={10}>23SS</MenuItem>\r\n            <MenuItem value={20}>23FW</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          sx={{marginTop : \"30px\"}}\r\n          value={text}\r\n          onChange={onChangeText}\r\n          fullWidth\r\n          label=\"해시태그입력 #검정 #반팔 \"\r\n          variant= \"outlined\"\r\n        />\r\n\r\n        {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n        <div className=\"file-upload\"\r\n          style={{marginTop : \"6px\"}}>\r\n          <div className=\"custom-form-group\">\r\n            {!isImage && (\r\n              <div\r\n                className={\r\n                  highlight\r\n                    ? \"custom-file-drop-area highlight\"\r\n                    : \"custom-file-drop-area\"\r\n                }\r\n                onDragEnter={handlehighlight}\r\n                onDragOver={handlehighlight}\r\n                onDragLeave={handleunhighlight}\r\n                onDrop={handledrop}\r\n              >\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"photos\"\r\n                  placeholder=\"Enter photos\"\r\n                  multiple={false}\r\n                  id=\"filephotos\"\r\n                  onChange={handlefilechange}\r\n                />\r\n                <label htmlFor=\"filephotos\">Drag & Drop</label>\r\n              </div>\r\n            )}\r\n            <div className=\"custom-file-preview\">\r\n              {photos.length > 0 &&\r\n                photos.map((item: any, index) =>\r\n                  index != 0 ? (\r\n                    <div className=\"prev-img\" key={index}>\r\n                      <span onClick={handeldelete}>&times;</span>\r\n                      {item && <Image src={item.src} alt={item.name} />}\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n  );\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios from 'axios';\nimport React, { useCallback, useState, useEffect } from 'react';\nimport Link from 'next/link'\n// const inter = Inter({ subsets: [\"latin\"] });\n\nexport default function Home() {\n  \n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [posts, setPost] = useState<any[]>([])\n\n  const LOADAPI = \"http://localhost:3065/loadpost\";\n\n  const loadPost = useCallback(() => {\n    axios.get(LOADAPI)\n      .then((result) => {\n        console.log(result.data)\n        setPost(result.data);\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\n        // history.replace('/login');\n      })\n      .catch((error) => {\n        alert('로그인이 정상적으로 되지 않았습니다.?');\n        console.log(error); \n      })\n\n  },[setPost])\n\n  useEffect(()=>{\n    loadPost()\n  },[loadPost])\n  \n  const LOGINCHECKAPI = \"http://localhost:3065/logincheck\";\n  useEffect( ()=>{\n    axios.get(LOGINCHECKAPI)\n      .then((result) => {\n        console.log(result.data.login)\n        if(result.data.login){\n          setIsLoggedIn(true);\n        }\n      })\n      .catch((error) => {\n        console.log(error); \n      })\n  },[])\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPost}><h1 id=\"title\">CRUMP REFERENCE</h1></a>\n        <div style={{marginBottom: \"40px\"}}>\n          <Navbar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} setPost={setPost}/>\n          {/* <LoginForm /> */}\n          {/* <SignupForm /> */}\n        </div>\n        <ResponsiveGrid setPost={setPost} posts={posts}/>\n      </div>\n    </>\n  );\n}\n","module.exports = require(\"@mui/icons-material/AccountCircle\");","module.exports = require(\"@mui/icons-material/Add\");","module.exports = require(\"@mui/icons-material/Delete\");","module.exports = require(\"@mui/icons-material/Edit\");","module.exports = require(\"@mui/icons-material/Mail\");","module.exports = require(\"@mui/icons-material/MoreVert\");","module.exports = require(\"@mui/icons-material/Notifications\");","module.exports = require(\"@mui/icons-material/Search\");","module.exports = require(\"@mui/material\");","module.exports = require(\"@mui/material/AppBar\");","module.exports = require(\"@mui/material/Badge\");","module.exports = require(\"@mui/material/Box\");","module.exports = require(\"@mui/material/Button\");","module.exports = require(\"@mui/material/Card\");","module.exports = require(\"@mui/material/CardContent\");","module.exports = require(\"@mui/material/CardMedia\");","module.exports = require(\"@mui/material/FormControl\");","module.exports = require(\"@mui/material/Grid\");","module.exports = require(\"@mui/material/IconButton\");","module.exports = require(\"@mui/material/InputBase\");","module.exports = require(\"@mui/material/InputLabel\");","module.exports = require(\"@mui/material/Menu\");","module.exports = require(\"@mui/material/MenuItem\");","module.exports = require(\"@mui/material/Modal\");","module.exports = require(\"@mui/material/Paper\");","module.exports = require(\"@mui/material/Select\");","module.exports = require(\"@mui/material/TextField\");","module.exports = require(\"@mui/material/Toolbar\");","module.exports = require(\"@mui/material/Typography\");","module.exports = require(\"@mui/material/styles\");","module.exports = require(\"next/dist/shared/lib/amp-context.js\");","module.exports = require(\"next/dist/shared/lib/amp-mode.js\");","module.exports = require(\"next/dist/shared/lib/head-manager-context.js\");","module.exports = require(\"next/dist/shared/lib/image-blur-svg.js\");","module.exports = require(\"next/dist/shared/lib/image-config-context.js\");","module.exports = require(\"next/dist/shared/lib/image-config.js\");","module.exports = require(\"next/dist/shared/lib/image-loader\");","module.exports = require(\"next/dist/shared/lib/side-effect.js\");","module.exports = require(\"next/dist/shared/lib/utils/warn-once.js\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react/jsx-runtime\");","module.exports = import(\"axios\");;"],"names":["React","Card","CardContent","CardMedia","Typography","DeleteIcon","EditIcon","CardActionArea","CardActions","useCallback","axios","category","상의","하의","아우터","디테일","이미지","악세사리","season","AlignItemsList","props","DELAPI","id","editClick","alert","delClick","post","then","result","console","log","Posts","posts","filter","setPost","catch","err","sx","maxWidth","marginTop","component","image","link","alt","span","style","fontWeight","fontSize","name","brand","variant","color","reason","div","width","onClick","margin","className","display","a","href","hashtags","map","hashtag","index","parseInt","useState","useInput","Modal","Button","Box","TextField","position","top","left","transform","bgcolor","border","boxShadow","p","LoginForm","setIsLoggedIn","setloginModalOpen","API","email","onChangeEmail","password","onChangePassword","onFinish","values","User","setUser","closeModal","onSubmitForm","event","preventDefault","headers","data","error","open","onClose","aria-labelledby","aria-describedby","noValidate","autoComplete","onSubmit","label","fullWidth","type","value","required","onChange","mt","mb","size","inter","styled","alpha","AppBar","Toolbar","IconButton","InputBase","Badge","FormControl","InputLabel","Select","MenuItem","Menu","AddIcon","SearchIcon","AccountCircle","MailIcon","NotificationsIcon","MoreIcon","Signup","Upload","background","padding","height","Search","theme","borderRadius","shape","backgroundColor","marginRight","spacing","marginLeft","breakpoints","up","SearchIconWrapper","pointerEvents","alignItems","justifyContent","StyledInputBase","paddingLeft","transition","transitions","create","Navbar","isLoggedIn","HASHAPI","modalOpen","setModalOpen","uploadModalOpen","setuploadModalOpen","loginModalOpen","onChangeValue","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","setCategory","setSeason","onChangeCategory","target","onChangeSeason","showModal","reloadPost","showLoginModal","showUploadModal","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","Logout","LOGOUTAPI","get","message","uploadClick","handleMobileMenuOpen","TagSearch","e","split","length","stopPropagation","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","aria-label","badgeContent","aria-controls","aria-haspopup","flexGrow","noWrap","xs","sm","m","minWidth","marginBottom","labelId","form","fill","placeholder","md","edge","experimentalStyled","Paper","Grid","Item","palette","mode","typography","body2","textAlign","text","secondary","ResponsiveGrid","container","columns","item","lg","li","Images","src","Hashtags","nickname","onChangeNickname","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","checkEmail","res","check","test","useEffect","Image","fileTypes","file","setFile","imageFile","setImageFile","setValue","isImage","setIsImage","highlight","setHighlight","onChangeReason","onChangeBrand","onChangeLink","title","desc","photos","onChangeText","setText","handleCategoryChange","handleSeasonChange","handlefilechange","files","handfiles","photosArr","undefined","i","reader","FileReader","readAsDataURL","addEventListener","fileobj","push","handeldelete","parentElement","dataset","targetindex","slice","handlehighlight","handleunhighlight","handledrop","dt","dataTransfer","USERINFOAPI","userInfo","setUserInfo","formData","FormData","append","onDragEnter","onDragOver","onDragLeave","onDrop","input","multiple","htmlFor","initValue","setter","handler","Head","Home","LOADAPI","loadPost","LOGINCHECKAPI","login","meta","content","h1"],"sourceRoot":""}