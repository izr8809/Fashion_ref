{"version":3,"file":"../pages/index.js","mappings":"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4F,QAAQ;4BAAU;sCAAG;;;kCAI/C,mDAACH;wBAAIzF,OAAO;4BAAE0E,cAAc;wBAAO;kCACjC,iEAACwE,mEAAMA;4BACLC,QAAQA;4BACRC,WAAWA;4BACXC,UAAUA;4BACVC,aAAaA;;;kCAGjB,mDAAC8D,2EAAcA;oBAMd6I,iCAAmB,mDAACpQ;kCAAK;;;;;;AAIlC,CAAC;;;;;;;;;;AC5GD;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA","sources":["webpack://fashion_ref/./Components/Cardpost.tsx","webpack://fashion_ref/./Components/LoginForm.tsx","webpack://fashion_ref/./Components/Navbar.tsx","webpack://fashion_ref/./Components/ResponsiveGrid.tsx","webpack://fashion_ref/./Components/Searchbar.tsx","webpack://fashion_ref/./Components/Signup.tsx","webpack://fashion_ref/./Components/Upload.tsx","webpack://fashion_ref/./hooks/useInput.ts","webpack://fashion_ref/./pages/index.tsx","webpack://fashion_ref/external commonjs \"@mui/icons-material/AccountCircle\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Add\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Delete\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Edit\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Favorite\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/FavoriteBorderTwoTone\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/FileCopy\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/MoreVert\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Search\"","webpack://fashion_ref/external commonjs \"@mui/lab\"","webpack://fashion_ref/external commonjs \"@mui/lab/LoadingButton\"","webpack://fashion_ref/external commonjs \"@mui/material\"","webpack://fashion_ref/external commonjs \"@mui/material/AppBar\"","webpack://fashion_ref/external commonjs \"@mui/material/Box\"","webpack://fashion_ref/external commonjs \"@mui/material/Button\"","webpack://fashion_ref/external commonjs \"@mui/material/Card\"","webpack://fashion_ref/external commonjs \"@mui/material/CardContent\"","webpack://fashion_ref/external commonjs \"@mui/material/CardMedia\"","webpack://fashion_ref/external commonjs \"@mui/material/FormControl\"","webpack://fashion_ref/external commonjs \"@mui/material/Grid\"","webpack://fashion_ref/external commonjs \"@mui/material/IconButton\"","webpack://fashion_ref/external commonjs \"@mui/material/InputLabel\"","webpack://fashion_ref/external commonjs \"@mui/material/Menu\"","webpack://fashion_ref/external commonjs \"@mui/material/MenuItem\"","webpack://fashion_ref/external commonjs \"@mui/material/Modal\"","webpack://fashion_ref/external commonjs \"@mui/material/Paper\"","webpack://fashion_ref/external commonjs \"@mui/material/Select\"","webpack://fashion_ref/external commonjs \"@mui/material/TextField\"","webpack://fashion_ref/external commonjs \"@mui/material/Toolbar\"","webpack://fashion_ref/external commonjs \"@mui/material/Typography\"","webpack://fashion_ref/external commonjs \"@mui/material/styles\"","webpack://fashion_ref/external commonjs \"next-redux-wrapper\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/amp-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/amp-mode.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/head-manager-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-blur-svg.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-config-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-config.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-loader\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/side-effect.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/utils/warn-once.js\"","webpack://fashion_ref/external commonjs \"next/head\"","webpack://fashion_ref/external commonjs \"react\"","webpack://fashion_ref/external commonjs \"react-redux\"","webpack://fashion_ref/external commonjs \"react/jsx-runtime\"","webpack://fashion_ref/external commonjs \"redux\"","webpack://fashion_ref/external commonjs \"redux-devtools-extension\"","webpack://fashion_ref/external commonjs \"redux-saga/effects\"","webpack://fashion_ref/external module \"@redux-saga/core\"","webpack://fashion_ref/external module \"axios\"","webpack://fashion_ref/external module \"immer\"","webpack://fashion_ref/external module \"redux-saga\""],"sourcesContent":["import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  DELETE_POST_REQUEST,\r\n  DUPLICATE_POST_REQUEST,\r\n  HASHTAG_SEARCH_REQUEST,\r\n  LIKE_POST_REQUEST,\r\n  loadPost,\r\n  UNLIKE_POST_REQUEST,\r\n} from \"@/reducers/post\";\r\nimport FavoriteBorderTwoToneIcon from \"@mui/icons-material/FavoriteBorderTwoTone\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport Upload from \"./Upload\";\r\n\r\ntype CardpostProps = {\r\n  index: number;\r\n  posts: any[];\r\n  category: string;\r\n  id: number;\r\n  brand: string;\r\n  link: string;\r\n  Images: {\r\n    src: string;\r\n  }[];\r\n  season: string;\r\n  reason: string;\r\n  name: string;\r\n  hashtags: {\r\n    PostHashtag: {\r\n      HashtagId: number;\r\n    };\r\n    name: string;\r\n  }[];\r\n  likers : any[];\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst StyledCardAction = styled(CardActions)`\r\n  display: flex;\r\n  -webkit-box-align: center;\r\n  align-items: center;\r\n  padding: 8px;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport default function Cardpost(props: CardpostProps) {\r\n  // const isLoggedIn = false;\r\n  const [like, setLike] = useState(false);\r\n  const [likeClick, setLikeClick] = useState(props.likers?.length || 0);\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const {logInDone}= useSelector((state: any) => state.user);\r\n  const [loginModalOpen, setIsLoginFormOpen] = useState(false);\r\n  const [isUploadFormOpen, setIsUploadFormOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const HASHAPI = `${process.env.NEXT_PUBLIC_API}/hashtagsearch`;\r\n  const DELAPI = `${process.env.NEXT_PUBLIC_API}/deletpost/${props.id}`;\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [ImagePath, setImagePath] = React.useState(\"\");\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    if (user) {\r\n      setLike((prev) => !prev);\r\n\r\n      if (!like) {\r\n        dispatch({\r\n          type: LIKE_POST_REQUEST,\r\n          data: props.id,\r\n        });\r\n        setLikeClick((prev) => prev+1)\r\n      } else {\r\n        dispatch({\r\n          type: UNLIKE_POST_REQUEST,\r\n          data: props.id,\r\n        });\r\n        setLikeClick((prev) => prev-1)\r\n      }\r\n    } else {\r\n      alert(\"로그인 해주세요\");\r\n      setIsLoginFormOpen(true);\r\n      //로그인 모달 띄우기 넣어야\r\n    }\r\n  }, [user, like, props.id]);\r\n\r\n  const delClick = useCallback(() => {\r\n    if (user) {\r\n      setModalOpen(true);\r\n    } else {\r\n      alert(\"로그인 해주세요\");\r\n      setIsLoginFormOpen(true);\r\n      //로그인 모달 띄우기 넣어야\r\n    }\r\n  }, [user]);\r\n\r\n  const duplicateClick = useCallback(() => {\r\n\r\n    if (!user) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n\r\n    return dispatch({\r\n      type: DUPLICATE_POST_REQUEST,\r\n      data: props.id,\r\n    });\r\n  }, [dispatch, props.id, user]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      if (!user) {\r\n        return alert(\"로그인이 필요합니다.\");\r\n      }\r\n\r\n      return dispatch({\r\n        type: DELETE_POST_REQUEST,\r\n        data: props.id,\r\n      });\r\n    },\r\n    [dispatch, props.id, user]\r\n  );\r\n\r\n  const editClick = useCallback(() => {\r\n    // if (!user) {\r\n    //   return alert(\"로그인이 필요합니다.\");\r\n    // }\r\n    // setIsUploadFormOpen(true);\r\n    \r\n    alert(\"준비중입니다.\");\r\n  }, [props.id, user, setIsUploadFormOpen]);\r\n\r\n  useEffect(() => {\r\n    if (props.Images[0] == undefined) {\r\n    } else {\r\n      // console.log(\"props\")\r\n      // console.log(props)\r\n      setImagePath(`../${props.Images[0].src}`);\r\n    }\r\n  }, [props.Images]);\r\n\r\n  const TagClick = React.useCallback(\r\n    (e: any, hashname: string) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      dispatch({\r\n        type: HASHTAG_SEARCH_REQUEST,\r\n        data: {\r\n          hashtags: \"#\" + hashname,\r\n        },\r\n      });\r\n    },\r\n    [ dispatch, props]\r\n  );\r\n\r\n    useEffect(()=>{\r\n      //like 눌렀는지\r\n      if(user?.data && props.likers ){\r\n        const isUserLiked = props.likers.find( (v) => v.id === user?.data.id)\r\n        if(isUserLiked)\r\n          setLike(true)\r\n        else \r\n          setLike(false)\r\n      }\r\n    },[props.likers, user, props.id, logInDone])\r\n\r\n  return (\r\n    <>\r\n      {isUploadFormOpen && (\r\n        <Upload\r\n          setuploadModalOpen={setIsUploadFormOpen}\r\n          uploadModalOpen={isUploadFormOpen}\r\n          edit={true}\r\n          postId={props.id}\r\n        />\r\n      )}\r\n      {loginModalOpen && <LoginForm loginModalOpen={loginModalOpen} setloginModalOpen={setIsLoginFormOpen} />}\r\n      {modalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closeModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={onSubmit}\r\n            sx={style}\r\n          >\r\n            {/* <form onSubmit={onSubmit}> */}\r\n            <Typography\r\n              component=\"h2\"\r\n              variant=\"h5\"\r\n              sx={{ textAlign: \"center\", marginBottom: \"15px\" }}\r\n            >\r\n              정말 삭제하시겠습니까?\r\n            </Typography>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              sx={{\r\n                mt: 3,\r\n                mb: 2,\r\n                width: \"40%\",\r\n                marginLeft: \"5%\",\r\n                marginRight: \"10%\",\r\n              }}\r\n              size=\"large\"\r\n            >\r\n              삭제\r\n            </Button>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2, width: \"40%\" }}\r\n              size=\"large\"\r\n              onClick={closeModal}\r\n            >\r\n              취소\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Card\r\n        sx={{\r\n          maxWidth: \"15\",\r\n          marginTop: \"20px\",\r\n          // borderRadius: \"24px\",\r\n          boxShadow: \"none\",\r\n        }}\r\n      >\r\n        {/* <Typography>\r\n          <span style={{ float: \"left\", color: \"#A6A6A6\", fontSize: \"80%\" }}>\r\n            {props.name}문병욱\r\n          </span>\r\n        </Typography> */}\r\n        <CardActionArea href={`${props.link}`} target=\"_blank\">\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"400\"\r\n            image={ImagePath}\r\n            // alt=\"이미지 오류, 삭제 후 다시 등록해주세요\"\r\n          />\r\n        </CardActionArea>\r\n        {/* <button style={{position: \"absolute\", top:\"40%\", left:\"0%\"}}> <span>s</span></button> */}\r\n\r\n        <CardContent>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              marginBottom: \"3%\",\r\n              display: \"inline-block\",\r\n            }}\r\n          >\r\n            <FileCopyIcon\r\n              id=\"copyicon\"\r\n              onClick={duplicateClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                marginRight: \"17px\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n            <EditIcon\r\n              id=\"editicon\"\r\n              onClick={editClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n            <DeleteIcon\r\n              id=\"delicon\"\r\n              onClick={delClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                marginLeft: \"17px\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n          </div>\r\n          <Typography>\r\n            <span\r\n              style={{\r\n                fontWeight: 900,\r\n                fontSize: \"130%\",\r\n                marginBottom: \"4%\",\r\n              }}\r\n            >\r\n              {`${props.brand}`}\r\n            </span>\r\n          </Typography>\r\n\r\n          {/* <span style={{fontWeight :900, fontSize: \"100%\", marginBottom: 5}}>\r\n            참고할 부분\r\n          </span> */}\r\n          <Typography\r\n            sx={{ fontWeight: 900, marginBottom: \"2%\" }}\r\n            variant=\"subtitle2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            참고할 부분\r\n          </Typography>\r\n\r\n          <Typography\r\n            sx={{ marginBottom: \"1%\" }}\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n        <StyledCardAction>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"inline-block\",\r\n              marginBottom: \"5px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: \"20%\",\r\n                marginBottom: \"3%\",\r\n                verticalAlign: \"center\",\r\n                display: \"inline-block\",\r\n                float: \"left\",\r\n              }}\r\n            >\r\n              {like ? (\r\n                <FavoriteIcon\r\n                  onClick={onToggleLike}\r\n                  sx={{ cursor: \"pointer\", opacity: \"80%\", color: \"#FF3040\" }}\r\n                />\r\n              ) : (\r\n                <FavoriteBorderTwoToneIcon\r\n                  onClick={onToggleLike}\r\n                  sx={{ cursor: \"pointer\", opacity: \"40%\" }}\r\n                />\r\n              )}\r\n              <span\r\n                style={{\r\n                  position: \"relative\",\r\n                  top: \"-7px\",\r\n                  marginLeft: \"5px\",\r\n                  color: \"#A6A6A6\",\r\n                }}\r\n              >\r\n                {likeClick ? likeClick : 0}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n          {/* <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${parseInt(props.season) % 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`TagCategory Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div> */}\r\n          {props.hashtags.map((hashtag, index) => (\r\n            <div style={{ margin: \"2px\" }} key={index}>\r\n              <div\r\n                className={`Tag${hashtag.PostHashtag.HashtagId % 8} Tag`}\r\n                style={{ display: \"inline-block\", margin: \"2px\" }}\r\n                onClick={(e) => {\r\n                  TagClick(e, hashtag.name);\r\n                }}\r\n              >\r\n                <a href=\"\">#{hashtag.name}</a>\r\n              </div>{\" \"}\r\n              &nbsp;\r\n            </div>\r\n          ))}\r\n\r\n          <div style={{ width: \"100%\" }}>\r\n            <span\r\n              style={{\r\n                float: \"left\",\r\n                color: \"#A6A6A6\",\r\n                fontSize: \"80%\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              작성자 : {props.name}\r\n            </span>\r\n          </div>\r\n        </StyledCardAction>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginRequestAction } from \"@/reducers/user\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  loginModalOpen : boolean;\r\n};\r\nexport default function LoginForm({\r\n  setloginModalOpen,\r\n  loginModalOpen,\r\n}: LoginFormProps): ReactElement {\r\n  \r\n  const dispatch = useDispatch();\r\n  const [isInitialOpen, setIsInitialOpen]= useState(true);\r\n  const {logInLoading} = useSelector((state : any) => state.user)\r\n  const {logInError} = useSelector((state : any) => state.user)\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback(\r\n    (event: any) => {\r\n      event.preventDefault();\r\n      if (email == \"\") {\r\n        alert(\"이메일을 입력해주세요\");\r\n      } else if (password == \"\") {\r\n        alert(\"비밀번호를 입력해주세요\");\r\n      } else {\r\n        dispatch(loginRequestAction({email,password}))\r\n        // setloginModalOpen(false);\r\n        // axios\r\n        //   .post(\r\n        //     LOGINAPI,\r\n        //     // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n        //     // 회원가입창에서 클라이언트가 입력하는 데이터\r\n        //     {\r\n        //       email: email,\r\n        //       password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n        //     },\r\n        //     {\r\n        //       headers: {\r\n        //         \"Content-Type\": \"application/json\",\r\n        //         // 'Accept': 'application/json',\r\n        //       },\r\n        //     }\r\n        //   )\r\n        //   .then((result) => {\r\n        //     setUser(result.data.data);\r\n        //     console.log(\"dispatch\");\r\n        //     dispatch(loginRequestAction(\"usersample\"));\r\n        //     // setIsLoggedIn(true);\r\n        //     setUserId(result.data.data.id);\r\n        //     setUserName(result.data.data.name);\r\n        //     setloginModalOpen(false);\r\n        //     console.log(result.data.data);\r\n        //     // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        //     // history.replace('/login');\r\n        //   })\r\n        //   .catch((error) => {\r\n        //     alert(\"로그인 정보가 일치하지 않습니다.\");\r\n        //     setloginModalOpen(false);\r\n        //     console.log(error);\r\n        //   });\r\n      }\r\n    },\r\n    [email, password, dispatch]\r\n  );\r\n\r\n  useEffect(()=>{\r\n    if(!logInLoading && !isInitialOpen){\r\n      console.log(\"change\")\r\n      setloginModalOpen(false);\r\n    }\r\n    setIsInitialOpen(false);\r\n\r\n  },[logInLoading])\r\n\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        {logInError && <span style={{marginTop:\"10px\", color:\"#F73334\"}}> 로그인 정보가 일치하지 않습니다.</span>}\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n          loading={logInLoading}\r\n        >\r\n          로그인\r\n        </LoadingButton>\r\n        {/* </form> */}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement, useRef } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\n// import { useNavigate  } from 'react-router-dom'; // 설치한 패키지\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/Signup\";\r\nimport Upload from \"@/Components/Upload\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginRequestAction, logoutRequestAction } from \"@/reducers/user\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { GET_HASHTAGS_REQUEST } from \"@/reducers/post\";\r\n\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\ntype NavbarProps = {\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\n\r\nexport default function Navbar({\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: NavbarProps): ReactElement {\r\n  // const navigate = useNavigate();\r\n  \r\n  //redux\r\n  const {logInDone} = useSelector((state : any) => state.user)  \r\n  // const {userInfo} = useSelector((state : any) => state.user)  \r\n  const { user } = useSelector((state : any) => state.user)\r\n  const { logOutLoading } = useSelector((state : any) => state.user)\r\n  const { hashtags } = useSelector((state : any) => state.post)\r\n  \r\n  // const isLoggedIn = false;\r\n  const dispatch = useDispatch();\r\n\r\n  const GETHASHAPI = `${process.env.NEXT_PUBLIC_API}/getHash`;\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n  \r\n\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  \r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n\r\n\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const showUploadModal = () => {\r\n    setuploadModalOpen(true);\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    dispatch(logoutRequestAction());\r\n\r\n    //왜인지 모르겠는데 로그아웃 후 모달 켜짐\r\n    setloginModalOpen(false)\r\n\r\n\r\n    // const LOGOUTAPI = `${process.env.NEXT_PUBLIC_API}/logout`;\r\n    // axios\r\n    //   .get(LOGOUTAPI)\r\n    //   .then((result) => {\r\n    //     if (result.data.message == \"ok\")\r\n    //       //dispatch \r\n    //     // setloginModalOpen(false);\r\n    //   })\r\n    //   .catch((err) => {alert(\"서버와 연결 끊겼네요. 새로고침.!\")});\r\n  }, [dispatch]);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (user) {\r\n      setuploadModalOpen(true);\r\n    } else {\r\n      setloginModalOpen(true);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onReady = useCallback(()=>{alert(\"준비중입니다.\")},[])\r\n\r\n\r\n  const getHashtags = useCallback(()=>{\r\n    //dispatch\r\n    dispatch({\r\n      type: GET_HASHTAGS_REQUEST,\r\n    })\r\n    setShowHashModalOpen(true);\r\n\r\n    // axios\r\n    // .get(GETHASHAPI)\r\n    // .then((result) => {\r\n    //   setShowHashModalOpen(true);\r\n    //   setHashTags(result)\r\n    //   // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n    //   // history.replace('/login');\r\n    // })\r\n    // .catch((error) => {\r\n    //   alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n    // });\r\n  },[dispatch])\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <p>만드는 중입니다</p>\r\n      </MenuItem>\r\n      {/* <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>프로필</p>\r\n      </MenuItem> */}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {!user && isModalOpen && (\r\n        <Signup \r\n        isModalOpen = {isModalOpen}\r\n        setIsModalOpen={setIsModalOpen} \r\n        userId = {userId}\r\n        setUserId = {setUserId}\r\n        userName= {userName}\r\n        setUserName = {setUserName}/>\r\n      )}\r\n      {user && uploadModalOpen && (\r\n        <Upload \r\n        uploadModalOpen={uploadModalOpen} \r\n        setuploadModalOpen={setuploadModalOpen} \r\n        edit ={false}\r\n        postId ={null}\r\n        />\r\n      )}\r\n      {!user && loginModalOpen && (\r\n        <LoginForm\r\n          loginModalOpen = {loginModalOpen}\r\n          setloginModalOpen={setloginModalOpen}\r\n        />\r\n      )}\r\n      {showHashModalOpen && <Modal\r\n      open={true}\r\n      onClose={closehashtagsModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        sx={modalstyle}\r\n      >\r\n      <div className=\"hashlistdiv\" style={{height:\"300px\", overflow : \"overlay\"}}>\r\n      {hashtags && hashtags.map((hashtag:any, index:any)=> (\r\n        <li id=\"hashlist\" key={hashtag.id} style={{listStyle: \"none\", marginBottom:\"5px\"}}> #{hashtag.name}</li>\r\n      ))}\r\n      </div>\r\n        \r\n      <Button\r\n        fullWidth\r\n        variant=\"contained\"\r\n        sx={{ mt: 3, mb: 2}}\r\n        size=\"large\"\r\n        onClick={closehashtagsModal}\r\n      >\r\n        확인\r\n      </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n\r\n      }\r\n      \r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            {/* <p>검색할 태그</p> */}\r\n          </Typography>\r\n          {/* <Search>\r\n            <StyledInputBase\r\n              onChange={(event) => {\r\n                setValue(event.target.value);\r\n              }}\r\n              placeholder=\"태그 입력\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyPress={(event) => {\r\n                if (event.which == 32) alert(value);\r\n              }}\r\n            />\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n          </Search> */}\r\n          {/* <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">\r\n              카테고리\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              required\r\n              value={category}\r\n              label=\"category\"\r\n              onChange={onChangeCategory}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"25px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">시즌</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              value={season}\r\n              label=\"season\"\r\n              required\r\n              onChange={onChangeSeason}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl> */}\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n          <Searchbar />\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={0} color=\"error\"></Badge>\r\n            </IconButton> */}\r\n            <>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                sx={{ marginRight: \"10px\" }}\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"false\"\r\n                color=\"primary\"\r\n                onClick={uploadClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </>\r\n            {!user ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <LoadingButton\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"100%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                    whiteSpace: \"nowrap\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={Logout}\r\n                  loading={logOutLoading}\r\n                >\r\n                  로그아웃\r\n                </LoadingButton>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                  onClick={onReady}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" }, float: \"right\" }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Cardpost from \"./Cardpost\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { useInput } from \"@mui/base\";\r\nimport axios from \"axios\";\r\nimport Image from \"next/image\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\ntype ResponsiveGridProps = {\r\n};\r\n\r\nexport default function ResponsiveGrid({}: ResponsiveGridProps) {\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n\r\n  const [Imagesrc, setImagesrc] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(postArray)\r\n  }, [postArray]);\r\n\r\n  //check if I like\r\n  return (\r\n    <>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Grid\r\n          container\r\n          spacing={{ xs: 2, md: 3 }}\r\n          columns={{ xs: 4, sm: 8, md: 12 }}\r\n        >\r\n          {postArray &&\r\n            (postArray as Array<any>).map((post, index) => (\r\n              <Grid item xs={6} sm={4} md={3} lg={4} key={post.id}>\r\n                <Item>\r\n                  <li\r\n                    style={{\r\n                      maxWidth: \"320px\",\r\n                      display: \"inline-block\",\r\n                      // marginRight: \"4%\",\r\n                      // marginLeft: \"1%\",\r\n                      // marginTop: \"1%\",-\r\n                    }}\r\n                  >\r\n                    <Cardpost\r\n                      index={index}\r\n                      name={post.name}\r\n                      posts={postArray}\r\n                      id={post.id}\r\n                      likers={post.Likers}\r\n                      category={post.category}\r\n                      brand={post.brand}\r\n                      Images={post.Images}\r\n                      link={post.link}\r\n                      season={post.season}\r\n                      hashtags={post.Hashtags}\r\n                      reason={post.reason}\r\n                    />{\" \"}\r\n                  </li>\r\n                </Item>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { HASHTAG_SEARCH_REQUEST, loadPost } from \"@/reducers/post\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {useEffect, useRef} from 'react';\r\n\r\ntype SearchbarProps = {};\r\n\r\nexport default function Searchbar({}: SearchbarProps) {\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (searchBar.current) {\r\n      searchBar.current.focus();\r\n    }\r\n  }, []);\r\n\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      // e.preventDeafult();\r\n      // e.stopPropagation();\r\n      if (value == \"\") {\r\n        dispatch(loadPost())\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        let upperCaseValue = value.toUpperCase();\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        dispatch({\r\n          type: HASHTAG_SEARCH_REQUEST,\r\n          data: {\r\n            hashtags: \"#\" + upperCaseValue,\r\n          }\r\n        })\r\n      }\r\n    },\r\n    [dispatch, value]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={TagSearch}\r\n        style={{ width: \"70%\", flex: \"auto\", marginLeft: \"15%\" }}\r\n      >\r\n        <IconButton\r\n          type=\"submit\"\r\n          aria-label=\"search\"\r\n          sx={{ display: { xs: \"none\", md: \"inline-block\" } }}\r\n        >\r\n          <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n        </IconButton>\r\n        <TextField\r\n          id=\"search-bar\"\r\n          className=\"text\"\r\n          sx={{ display: \"inline-block\", width: \"80%\" }}\r\n          value={value}\r\n          onChange={onChangeValue}\r\n          label=\"#상의 #검정\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Search...\"\r\n          size=\"small\"\r\n          inputRef={searchBar}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginRequestAction } from \"@/reducers/user\";\r\n\r\ntype SignupProps = {\r\n  isModalOpen: boolean;\r\n  setIsModalOpen: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({\r\n  setIsModalOpen,\r\n  isModalOpen,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: SignupProps): ReactElement {\r\n  const dispatch = useDispatch();\r\n  const API = `${process.env.NEXT_PUBLIC_API}/signups`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password, setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email: any) => {\r\n    let res = false;\r\n\r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n\r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (password !== passwordCheck) {\r\n        setPasswordError(true);\r\n      } else if (!checkEmail(email)) {\r\n        setEmailError(true);\r\n      } else {\r\n        axios\r\n          .post(\r\n            API,\r\n            // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n            // 회원가입창에서 클라이언트가 입력하는 데이터\r\n            {\r\n              email: email,\r\n              name: nickname,\r\n              password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          // 그러면 서버에서 클라이언트로 response(응답)으로\r\n          // {ok: true} 아니면 {ok: false}가 온다.\r\n          // .then((response) => {\r\n          //   console.log(response); // response.data로 해야?\r\n          // })\r\n          .then((result) => {\r\n            dispatch(loginRequestAction())\r\n            setUserId(result.data.userId);\r\n            setUserName(result.data.userName);\r\n            closeModal();\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.data.message == \"already exist\") {\r\n              alert(\"이미 존재하는 이메일입니다.\");\r\n            } else {\r\n              alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n            }\r\n          });\r\n      }\r\n      // if (!term) {\r\n      //   return setTermError(true);\r\n      // }\r\n    },\r\n    [API, dispatch, setUserId, setUserName, email, password, passwordCheck, nickname]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\" sx={{ textAlign: \"center\" }}>\r\n          회원가입\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          // error={checkEmail(email)}\r\n          onChange={onChangeEmail}\r\n        />\r\n        {emailError && (\r\n          <span style={{ color: \"red\" }}>Email 형식이 잘못되었습니다</span>\r\n        )}\r\n        <TextField\r\n          label=\"이름\"\r\n          name=\"user-nick\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          onChange={onChangeNickname}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          fullWidth\r\n          name=\"user-password\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={password}\r\n          required\r\n          onChange={onChangePassword}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호체크\"\r\n          fullWidth\r\n          name=\"user-password-check\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={passwordCheck}\r\n          required\r\n          onChange={setPasswordCheck}\r\n        />\r\n        {passwordError && (\r\n          <span style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다</span>\r\n        )}\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    // {/* <div className={\"container\"} ref={modalRef}>\r\n    //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n    //       <br />\r\n    //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n    //     </TextField>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-nick\">닉네임</label>\r\n    //       <br />\r\n    //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password\">비밀번호</label>\r\n    //       <br />\r\n    //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n    //       <br />\r\n    //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n    //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n    //     </div>\r\n    //     {/* <div>\r\n    //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n    //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n    //     </div> */}\r\n    //     <div style={{ marginTop: 10 }}>\r\n    //       <button>가입하기</button>\r\n    //     </div>\r\n    //     <button className={\"close\"} onClick={closeModal}>\r\n    //         X\r\n    //     </button>\r\n    //   </div> */}\r\n    // }\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Router from \"next/router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addPost, ADD_POST_REQUEST, loadPost } from \"@/reducers/post\";\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype UploadProps = {\r\n  setuploadModalOpen: any;\r\n  uploadModalOpen: boolean;\r\n  edit: boolean;\r\n  postId: number | null;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload(props: UploadProps) {\r\n  const dispatch = useDispatch();\r\n  const [isInitialOpen, setIsInitialOpen] = useState(true);\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  const API = `${process.env.NEXT_PUBLIC_API}/addPost`;\r\n  const [imageFile, setImageFile] = useState<File>();\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [reason, onChangeReason, setReason] = useInput(\"\");\r\n  const [brand, onChangeBrand, setBrand] = useInput(\"\");\r\n  const [link, onChangeLink, setLink] = useInput(\"\");\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n  const GETHASHAPI = `${process.env.NEXT_PUBLIC_API}/getHash`;\r\n  const { addPostLoading } = useSelector((state: any) => state.post);\r\n  const { addPostDone } = useSelector((state: any) => state.post);\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const closeModal = useCallback(() => {\r\n    props.setuploadModalOpen(false);\r\n  }, []);\r\n\r\n  const { title, desc, photos } = post;\r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n  const inputRef = useRef(null);\r\n  const [category, setCategory] = React.useState(\"상의\");\r\n  const [season, setSeason] = React.useState(\"23SS\");\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = (files: FileList | null) => {\r\n    let photosArr: any[] = [];\r\n    if (files != undefined) {\r\n      if (files.length > 1) {\r\n        alert(\"이미지는 1개만 넣어주세요\");\r\n      } else {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          setImageFile(files[i]);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              photos: [...photos, ...photosArr],\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handeldelete = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    let target = (e.target as HTMLSpanElement).parentElement;\r\n    let targetindex = 1;\r\n    setPost({\r\n      ...post,\r\n      photos: [\r\n        ...photos.slice(0, targetindex),\r\n        ...photos.slice(targetindex + 1),\r\n      ],\r\n    });\r\n    setIsImage(false);\r\n  };\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(false);\r\n  }, []);\r\n  const handledrop = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let dt = e.dataTransfer;\r\n    let files = dt?.files;\r\n    setHighlight(false);\r\n    handfiles(files);\r\n  };\r\n\r\n  // const USERINFOAPI = `${process.env.NEXT_PUBLIC_API}/USERINFO`;\r\n  // const [userInfo, setUserInfo] = useState({ name: \"\" });\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(USERINFOAPI, {})\r\n  //     .then((result) => {\r\n  //       setUserInfo(result.data);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // }, [props.userId, USERINFOAPI]);\r\n\r\n  const [hashTags, setHashTags] = React.useState({\r\n    data: [{ name: \"\" }],\r\n  });\r\n\r\n  const getHashtags = useCallback(() => {\r\n    axios\r\n      .get(GETHASHAPI)\r\n      .then((result) => {\r\n        setShowHashModalOpen(true);\r\n        setHashTags(result);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert(\"해시태그가 제대로 처리되지 않았습니다.\");\r\n      });\r\n  }, [GETHASHAPI]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if (brand == \"\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"브랜드입력 필수\");\r\n      } else if (imageFile == undefined) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"이미지 필수\");\r\n      } else {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const formData = new FormData();\r\n        formData.append(\"image\", imageFile as File);\r\n        formData.append(\"userId\", user.id);\r\n        formData.append(\"userName\", user.userName);\r\n        formData.append(\"brand\", brand);\r\n        formData.append(\"link\", link);\r\n        formData.append(\"category\", category);\r\n        formData.append(\"season\", season);\r\n        formData.append(\"hashtag\", text);\r\n        formData.append(\"reason\", reason);\r\n\r\n        // dispatch({\r\n        //   type: ADD_POST_REQUEST,\r\n        //   data : formData\r\n        // });\r\n        dispatch(addPost(formData));\r\n\r\n        // axios\r\n        //   .post(API, formData)\r\n        //   .then((result) => {\r\n        //     dispatch(addPost(result));\r\n        //     console.log(result);\r\n        //     location.reload();\r\n        //   })\r\n        //   .catch((err) => {\r\n        //     console.log(err);\r\n        //     location.reload();\r\n        //   });\r\n      }\r\n    },\r\n    [brand, category, season, text, reason, link, user, dispatch, imageFile]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (addPostDone && !isInitialOpen) {\r\n      closeModal();\r\n    }\r\n    setIsInitialOpen(false)\r\n  }, [addPostDone, dispatch, closeModal]);\r\n\r\n  useEffect(() => {\r\n    if (props.edit) {\r\n      const targetPost = postArray.find((post: any) => post.id === props.postId);\r\n      let postHashtags = \"\";\r\n      if (targetPost.Hashtags) {\r\n        targetPost.Hashtags.map(\r\n          (hashtag: any) =>\r\n            (postHashtags = postHashtags.concat(\"#\" + hashtag?.name))\r\n        );\r\n      }\r\n      for (let i = 0; i < targetPost.Hashtags.length; i++) {\r\n        postHashtags.concat(`#${targetPost.Hashtags[i].name} `);\r\n      }\r\n      setCategory(targetPost.category);\r\n      setSeason(targetPost.season);\r\n      setText(postHashtags);\r\n      setBrand(targetPost.brand);\r\n      setReason(targetPost.reason);\r\n      setLink(targetPost.link);\r\n      console.log(targetPost);\r\n      setIsImage(true);\r\n      setPost({\r\n        ...post,\r\n        photos: photos.concat(targetPost.Images[0]),\r\n      });\r\n    }\r\n  }, [props.edit, postArray]);\r\n\r\n  return (\r\n    <>\r\n      {showHashModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closehashtagsModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <div\r\n              className=\"hashlistdiv\"\r\n              style={{ height: \"300px\", overflow: \"overlay\" }}\r\n            >\r\n              {hashTags.data.map((hashtag, index) => (\r\n                <li id=\"hashlist\" key={index} style={{ listStyle: \"none\" }}>\r\n                  {\" \"}\r\n                  #{hashtag.name}\r\n                </li>\r\n              ))}\r\n            </div>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closehashtagsModal}\r\n            >\r\n              확인\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Modal\r\n        open={true}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box\r\n          component=\"form\"\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          onSubmit={onSubmit}\r\n          sx={style}\r\n        >\r\n          {/* <form onSubmit={onSubmit}> */}\r\n          <Typography sx={{ textAlign: \"center\" }} component=\"h1\" variant=\"h5\">\r\n            업로드\r\n          </Typography>\r\n          {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n          <TextField\r\n            required\r\n            label=\"브랜드\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-brand\"\r\n            type=\"text\"\r\n            value={brand}\r\n            variant=\"standard\"\r\n            onChange={onChangeBrand}\r\n          />\r\n          <TextField\r\n            label=\"Link\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={link}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeLink}\r\n          />\r\n\r\n          <TextField\r\n            label=\"선정이유\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={reason}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeReason}\r\n          />\r\n\r\n          <FormControl\r\n            sx={{ width: \"40%\", marginRight: \"10%\", marginTop: \"25px\" }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-label\">상의</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"상의\"}\r\n              value={category}\r\n              label=\"카테고리\"\r\n              required\r\n              onChange={handleCategoryChange}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl sx={{ width: \"40%\", marginTop: \"25px\" }}>\r\n            <InputLabel id=\"demo-simple-select-label\">23SS</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"23SS\"}\r\n              value={season}\r\n              label=\"시즌\"\r\n              required\r\n              onChange={handleSeasonChange}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            sx={{ marginTop: \"30px\" }}\r\n            value={text}\r\n            onChange={onChangeText}\r\n            fullWidth\r\n            label=\"해시태그입력 #검정 #반팔 \"\r\n            variant=\"outlined\"\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n          <div className=\"file-upload\" style={{ marginTop: \"10px\" }}>\r\n            <div className=\"custom-form-group\">\r\n              {!isImage && (\r\n                <div\r\n                  className={\r\n                    highlight\r\n                      ? \"custom-file-drop-area highlight\"\r\n                      : \"custom-file-drop-area\"\r\n                  }\r\n                  onDragEnter={handlehighlight}\r\n                  onDragOver={handlehighlight}\r\n                  onDragLeave={handleunhighlight}\r\n                  onDrop={handledrop}\r\n                >\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"photos\"\r\n                    placeholder=\"Enter photos\"\r\n                    multiple={false}\r\n                    id=\"filephotos\"\r\n                    onChange={handlefilechange}\r\n                  />\r\n                  <label htmlFor=\"filephotos\">\r\n                    이미지를 드래그해서 넣어주세요\r\n                  </label>\r\n                </div>\r\n              )}\r\n              <div className=\"custom-file-preview\">\r\n                {photos.length > 0 &&\r\n                  photos.map((item: any, index) =>\r\n                    index != 0 ? (\r\n                      <div className=\"prev-img\" key={index}>\r\n                        <span onClick={handeldelete}>&times;</span>\r\n                        {item && <Image src={item.src} alt={item.name} />}\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )\r\n                  )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            id=\"submit_bt\"\r\n            style={{ display: \"none\" }}\r\n            type=\"submit\"\r\n          ></button>\r\n          <LoadingButton\r\n            type=\"submit\"\r\n            loading={addPostLoading}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            size=\"large\"\r\n            // loading={true}\r\n          >\r\n            확인\r\n          </LoadingButton>\r\n          {/* </form> */}\r\n        </Box>\r\n        {/* <Button onClick={closeModal}>닫기</Button> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios, { AxiosHeaders } from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport {\n  initialState as postinitialState,\n  LOAD_POST_REQUEST,\n} from \"@/reducers/post\";\nimport { initialState as userinitialState } from \"@/reducers/user\";\nimport React, { useCallback, useState, useEffect, useMemo } from \"react\";\nimport { loadPost } from \"@/reducers/post\";\nimport { loadUser } from \"@/reducers/user\";\nimport { useDispatch } from \"react-redux\";\nimport wrapper from \"@/store/configureStore\";\nimport { END } from \"redux-saga\";\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie: any = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch(loadPost());\n    context.store.dispatch(loadUser());\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default function Home() {\n  // const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  const { user } = useSelector((state: any) => state.user);\n  const { loadPostLoading } = useSelector((state: any) => state.post);\n  const { hasMorePost } = useSelector((state: any) => state.post);\n  const { postArray } = useSelector((state: any) => state.post);\n  const dispatch = useDispatch();\n\n  const [userId, setUserId] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [resultStore, setResultStore] = useState([]);\n\n  var sliceCount = 24;\n\n  useEffect(() => {\n    function onScroll() {\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 350\n      ) {\n        if (hasMorePost && !loadPostLoading) {\n          const lastId = postArray[postArray.length - 1].id;\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data: lastId,\n          });\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePost, loadPostLoading, dispatch, postArray]);\n\n\n\n  const loadPosts = useCallback(() => {\n    dispatch(loadPost());\n  }, [dispatch]);\n\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPosts}>\n          <h1 id=\"title\" style={{ cursor: \"pointer\" }}>\n            CRUMP REFERENCE\n          </h1>\n        </a>\n        <div style={{ marginBottom: \"40px\" }}>\n          <Navbar\n            userId={userId}\n            setUserId={setUserId}\n            userName={userName}\n            setUserName={setUserName}\n          />\n        </div>\n        <ResponsiveGrid />\n        {/* <div>\n          <Stack spacing={2} sx={{alignItems:\"center\", marginTop:\"30px\", marginBottom:\"50px\"}}>\n            <Pagination page={page} count={count} color=\"primary\" onChange={handleChange}/>\n          </Stack>\n        </div> */}\n        {loadPostLoading && <span>LOADING</span>}\n      </div>\n    </>\n  );\n}\n","module.exports = require(\"@mui/icons-material/AccountCircle\");","module.exports = require(\"@mui/icons-material/Add\");","module.exports = require(\"@mui/icons-material/Delete\");","module.exports = require(\"@mui/icons-material/Edit\");","module.exports = require(\"@mui/icons-material/Favorite\");","module.exports = require(\"@mui/icons-material/FavoriteBorderTwoTone\");","module.exports = require(\"@mui/icons-material/FileCopy\");","module.exports = require(\"@mui/icons-material/MoreVert\");","module.exports = require(\"@mui/icons-material/Search\");","module.exports = require(\"@mui/lab\");","module.exports = require(\"@mui/lab/LoadingButton\");","module.exports = require(\"@mui/material\");","module.exports = require(\"@mui/material/AppBar\");","module.exports = require(\"@mui/material/Box\");","module.exports = require(\"@mui/material/Button\");","module.exports = require(\"@mui/material/Card\");","module.exports = require(\"@mui/material/CardContent\");","module.exports = require(\"@mui/material/CardMedia\");","module.exports = require(\"@mui/material/FormControl\");","module.exports = require(\"@mui/material/Grid\");","module.exports = require(\"@mui/material/IconButton\");","module.exports = require(\"@mui/material/InputLabel\");","module.exports = require(\"@mui/material/Menu\");","module.exports = require(\"@mui/material/MenuItem\");","module.exports = require(\"@mui/material/Modal\");","module.exports = require(\"@mui/material/Paper\");","module.exports = require(\"@mui/material/Select\");","module.exports = require(\"@mui/material/TextField\");","module.exports = require(\"@mui/material/Toolbar\");","module.exports = require(\"@mui/material/Typography\");","module.exports = require(\"@mui/material/styles\");","module.exports = require(\"next-redux-wrapper\");","module.exports = require(\"next/dist/shared/lib/amp-context.js\");","module.exports = require(\"next/dist/shared/lib/amp-mode.js\");","module.exports = require(\"next/dist/shared/lib/head-manager-context.js\");","module.exports = require(\"next/dist/shared/lib/image-blur-svg.js\");","module.exports = require(\"next/dist/shared/lib/image-config-context.js\");","module.exports = require(\"next/dist/shared/lib/image-config.js\");","module.exports = require(\"next/dist/shared/lib/image-loader\");","module.exports = require(\"next/dist/shared/lib/side-effect.js\");","module.exports = require(\"next/dist/shared/lib/utils/warn-once.js\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"react/jsx-runtime\");","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"redux-saga/effects\");","module.exports = import(\"@redux-saga/core\");;","module.exports = import(\"axios\");;","module.exports = import(\"immer\");;","module.exports = import(\"redux-saga\");;"],"names":["React","Card","experimentalStyled","styled","CardContent","CardMedia","Typography","DeleteIcon","EditIcon","Button","CardActionArea","CardActions","useCallback","useEffect","useState","Modal","Box","FileCopyIcon","FavoriteIcon","useSelector","useDispatch","DELETE_POST_REQUEST","DUPLICATE_POST_REQUEST","HASHTAG_SEARCH_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","FavoriteBorderTwoToneIcon","LoginForm","Upload","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","StyledCardAction","Cardpost","props","like","setLike","likeClick","setLikeClick","likers","length","user","state","logInDone","loginModalOpen","setIsLoginFormOpen","isUploadFormOpen","setIsUploadFormOpen","dispatch","HASHAPI","process","env","NEXT_PUBLIC_API","DELAPI","id","modalOpen","setModalOpen","ImagePath","setImagePath","closeModal","onToggleLike","prev","type","data","alert","delClick","duplicateClick","onSubmit","e","preventDefault","stopPropagation","editClick","Images","undefined","src","TagClick","hashname","hashtags","isUserLiked","find","v","setuploadModalOpen","uploadModalOpen","edit","postId","setloginModalOpen","open","onClose","aria-labelledby","aria-describedby","component","noValidate","autoComplete","sx","variant","textAlign","marginBottom","mt","mb","marginLeft","marginRight","size","fullWidth","onClick","maxWidth","marginTop","href","link","target","height","image","div","display","opacity","cursor","span","fontWeight","fontSize","brand","color","reason","verticalAlign","float","map","hashtag","index","margin","className","PostHashtag","HashtagId","name","a","useInput","LoadingButton","TextField","loginRequestAction","isInitialOpen","setIsInitialOpen","logInLoading","logInError","email","onChangeEmail","password","onChangePassword","onSubmitForm","event","console","log","label","value","required","onChange","loading","AppBar","Toolbar","IconButton","MenuItem","Menu","AddIcon","AccountCircle","MoreIcon","Signup","logoutRequestAction","Searchbar","GET_HASHTAGS_REQUEST","background","padding","modalstyle","Navbar","userId","setUserId","userName","setUserName","logOutLoading","post","GETHASHAPI","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isModalOpen","setIsModalOpen","showHashModalOpen","setShowHashModalOpen","closehashtagsModal","showModal","showLoginModal","showUploadModal","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","Logout","uploadClick","handleMobileMenuOpen","onReady","getHashtags","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","flexGrow","overflow","li","listStyle","backgroundColor","whiteSpace","noWrap","xs","sm","md","edge","aria-label","aria-haspopup","aria-controls","Paper","Grid","Item","theme","palette","mode","typography","body2","spacing","text","secondary","ResponsiveGrid","postArray","Imagesrc","setImagesrc","container","columns","item","lg","posts","Likers","category","season","Hashtags","SearchIcon","loadPost","useRef","onChangeValue","searchBar","current","focus","TagSearch","split","upperCaseValue","toUpperCase","form","flex","fill","placeholder","inputRef","axios","API","emailError","setEmailError","nickname","onChangeNickname","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","checkEmail","res","check","test","headers","then","result","catch","error","response","message","FormControl","InputLabel","Select","Image","addPost","fileTypes","file","setFile","imageFile","setImageFile","isImage","setIsImage","highlight","setHighlight","onChangeReason","setReason","onChangeBrand","setBrand","onChangeLink","setLink","addPostLoading","addPostDone","setPost","title","desc","photos","setCategory","setSeason","onChangeText","setText","handleCategoryChange","handleSeasonChange","handlefilechange","files","handfiles","photosArr","i","reader","FileReader","readAsDataURL","addEventListener","fileobj","push","handeldelete","parentElement","targetindex","slice","handlehighlight","handleunhighlight","handledrop","dt","dataTransfer","hashTags","setHashTags","get","formData","FormData","append","targetPost","postHashtags","concat","labelId","defaultValue","onDragEnter","onDragOver","onDragLeave","onDrop","input","multiple","htmlFor","alt","button","initValue","setter","handler","Head","LOAD_POST_REQUEST","loadUser","wrapper","END","getServerSideProps","context","cookie","req","defaults","Cookie","store","sagaTask","toPromise","Home","loadPostLoading","hasMorePost","resultStore","setResultStore","sliceCount","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","removeEventListener","loadPosts","meta","content","h1"],"sourceRoot":""}