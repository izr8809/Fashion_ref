{"version":3,"file":"../pages/index.js","mappings":"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gR,cAAc;wBAAM;kCAC/B,iEAACrK,mEAAMA;4BAACC,YAAYA;4BAAY3E,eAAeA;4BAAenD,SAASA;;;kCAIzE,mDAACuM,2EAAcA;wBAACvM,SAASA;wBAASF,OAAOA;;;;;;AAIjD,CAAC;;;;;;;;;;ACrED;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA","sources":["webpack://fashion_ref/./Components/AlignItemsList.tsx","webpack://fashion_ref/./Components/LoginForm.tsx","webpack://fashion_ref/./Components/Navbar.tsx","webpack://fashion_ref/./Components/ResponsiveGrid.tsx","webpack://fashion_ref/./Components/signup.tsx","webpack://fashion_ref/./Components/upload.tsx","webpack://fashion_ref/./hooks/useInput.ts","webpack://fashion_ref/./pages/index.tsx","webpack://fashion_ref/external commonjs \"@mui/icons-material/AccountCircle\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Add\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Delete\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Edit\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Mail\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/MoreVert\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Notifications\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Search\"","webpack://fashion_ref/external commonjs \"@mui/material\"","webpack://fashion_ref/external commonjs \"@mui/material/AppBar\"","webpack://fashion_ref/external commonjs \"@mui/material/Badge\"","webpack://fashion_ref/external commonjs \"@mui/material/Box\"","webpack://fashion_ref/external commonjs \"@mui/material/Button\"","webpack://fashion_ref/external commonjs \"@mui/material/Card\"","webpack://fashion_ref/external commonjs \"@mui/material/CardContent\"","webpack://fashion_ref/external commonjs \"@mui/material/CardMedia\"","webpack://fashion_ref/external commonjs \"@mui/material/FormControl\"","webpack://fashion_ref/external commonjs \"@mui/material/Grid\"","webpack://fashion_ref/external commonjs \"@mui/material/IconButton\"","webpack://fashion_ref/external commonjs \"@mui/material/InputBase\"","webpack://fashion_ref/external commonjs \"@mui/material/InputLabel\"","webpack://fashion_ref/external commonjs \"@mui/material/Menu\"","webpack://fashion_ref/external commonjs \"@mui/material/MenuItem\"","webpack://fashion_ref/external commonjs \"@mui/material/Modal\"","webpack://fashion_ref/external commonjs \"@mui/material/Paper\"","webpack://fashion_ref/external commonjs \"@mui/material/Select\"","webpack://fashion_ref/external commonjs \"@mui/material/TextField\"","webpack://fashion_ref/external commonjs \"@mui/material/Toolbar\"","webpack://fashion_ref/external commonjs \"@mui/material/Typography\"","webpack://fashion_ref/external commonjs \"@mui/material/styles\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/amp-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/amp-mode.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/head-manager-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-blur-svg.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-config-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-config.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-loader\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/side-effect.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/utils/warn-once.js\"","webpack://fashion_ref/external commonjs \"next/head\"","webpack://fashion_ref/external commonjs \"react\"","webpack://fashion_ref/external commonjs \"react/jsx-runtime\"","webpack://fashion_ref/external module \"axios\""],"sourcesContent":["import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport {useCallback, useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\ntype AlignItemsListProps = {\r\n  category: string;\r\n  brand: string;\r\n  link: string;\r\n  src: string;\r\n  season: string;\r\n  reason: string;\r\n  hashtags: any[];\r\n  id : number,\r\n  setPost: any;\r\n  posts : any[];\r\n  index : number;\r\n  name : string;\r\n};\r\n\r\nconst category = {\r\n  상의: 1,\r\n  하의: 2,\r\n  아우터: 3,\r\n  디테일: 4,\r\n  이미지: 5,\r\n  악세사리: 6,\r\n};\r\n\r\nconst season = {\r\n  \"23SS\": 7,\r\n  \"23FW\": 8,\r\n};\r\nexport default function AlignItemsList(props: AlignItemsListProps) {\r\n\r\n  const [category, setCategory] = useState(\"\")\r\n  const [season, setSeason] = useState(\"\")\r\n\r\n\r\n  const DELAPI = `http://15.164.224.172:8080/deletpost/${props.id}`\r\n  console.log(DELAPI)\r\n  const delClick = useCallback(()=>{\r\n    axios.post(DELAPI,{\r\n    }).then((result)=>{\r\n      console.log(props.id)\r\n      const Posts = props.posts.filter((post)=> post.id !== props.id)\r\n      props.setPost(Posts);\r\n      console.log(Posts);\r\n    })\r\n    .catch((err)=>{\r\n\r\n      console.log(err)\r\n    })\r\n  },[DELAPI,props])\r\n  const editClick = useCallback(()=>{\r\n    alert(\"만드는 중입니다..\");\r\n  },[])\r\n  \r\n  console.log(\"rendered\");\r\n  useEffect(()=>{\r\n    setCategory(props.category)\r\n    setSeason(\"23SS\")\r\n\r\n  },[props.category])\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        maxWidth: \"15\",\r\n        marginTop: \"20px\",\r\n        // borderRadius: \"24px\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <CardActionArea href={`${props.link}`} target='_blank'>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"300\"\r\n          image={`../${props.src}`}\r\n          alt=\"green iguana\"\r\n        />\r\n        <CardContent>\r\n          <span style={{fontWeight :900, fontSize: \"130%\"}}>\r\n            {props.name}_{`${props.brand}`}_ {props.id}\r\n          </span>\r\n\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            참고할 부분 {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <div style={{width:\"100%\"}}>\r\n          <EditIcon id=\"editicon\" onClick={editClick}/>\r\n          <DeleteIcon id=\"delicon\" onClick={delClick}/>\r\n        </div>\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${parseInt(props.season) % 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`TagCategory Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        {props.hashtags.map((hashtag, index) => (\r\n          <div style={{ margin: \"2px\" }} key={index}>\r\n            <div\r\n              className={`Tag${parseInt(hashtag.id) % 8} Tag`}\r\n              style={{ display: \"inline-block\", margin: \"2px\" }}\r\n            >\r\n              <a href=\"\">#{hashtag.name}</a>\r\n            </div>{\" \"}\r\n            &nbsp;\r\n          </div>\r\n        ))}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect,useState } from 'react';\r\nimport useInput from '../hooks/useInput';\r\nimport axios from 'axios';\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\n\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  setIsLoggedIn : any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function LoginForm({ setIsLoggedIn, setloginModalOpen }: LoginFormProps): ReactElement {\r\n    \r\n  const API = \"http://15.164.224.172:8080/login\";\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const onFinish = (values: FormData) => {};\r\n  const [User, setUser] = useState({\r\n    id : 0,\r\n    name : null,\r\n  });\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback((event : any) => {\r\n    event.preventDefault();\r\n    console.log(\"signup\")\r\n    console.log(password)\r\n    console.log(email)\r\n    axios.post(API,\r\n      // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n      // 회원가입창에서 클라이언트가 입력하는 데이터\r\n      {\r\n        email: email,           \r\n        password: password,  // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n      },\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          // 'Accept': 'application/json',\r\n        },\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        console.log(\"singupDB!\");\r\n        console.log(result.data.data)\r\n        setUser(result.data.data);\r\n        setIsLoggedIn(true);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert('로그인이 정상적으로 되지 않았습니다.');\r\n        console.log(error); \r\n      })\r\n  }, [email, password, setIsLoggedIn]);\r\n\r\n  console.log(User)\r\n  return (\r\n    \r\n    <Modal\r\n    open={true}\r\n    onClose={closeModal}\r\n    aria-labelledby=\"modal-modal-title\"\r\n    aria-describedby=\"modal-modal-description\"\r\n  >\r\n    <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          로그인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      </Modal>\r\n  )\r\n\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement, useRef  } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\n// import { useNavigate  } from 'react-router-dom'; // 설치한 패키지\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/signup\";\r\nimport Upload from \"@/Components/upload\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\nconst inter = Inter({ subsets: [\"latin\"] });\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(\"#F8F8F8\", 0.73),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(\"#F8F8F8\", 0.33),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n    height: \"40%\",\r\n  },\r\n}));\r\n\r\ntype NavbarProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n};\r\n\r\nexport default function Navbar({\r\n  isLoggedIn,\r\n  setIsLoggedIn,\r\n  setPost,\r\n}: NavbarProps): ReactElement {\r\n  // const navigate = useNavigate();\r\n  const HASHAPI = \"http://15.164.224.172:8080/hashtagsearch\";\r\n  const API = \"http://15.164.224.172:8080/loadpost\";\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(()=>{\r\n    if(searchBar.current ){\r\n      searchBar.current.focus();\r\n    }\r\n  }\r\n  ,[])\r\n\r\n  const onChangeCategory = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const onChangeSeason = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const showModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const reloadPost = () => {\r\n    // navigate('/home'); // /test로 url 이동\r\n  };\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const showUploadModal = () => {\r\n    setuploadModalOpen(true);\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    const LOGOUTAPI = \"http://15.164.224.172:8080/logout\";\r\n    axios\r\n      .get(LOGOUTAPI)\r\n      .then((result) => {\r\n        if (result.data.message == \"ok\") setIsLoggedIn(false);\r\n        setloginModalOpen(false);\r\n      })\r\n      .catch((err) => {});\r\n  }, [setIsLoggedIn]);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (isLoggedIn) {\r\n      setuploadModalOpen(true);\r\n    } else {\r\n      setloginModalOpen(true);\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      if (value == \"\") {\r\n        axios\r\n          .get(API)\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n            console.log(error);\r\n          });\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        axios\r\n          .post(\r\n            HASHAPI,\r\n            {\r\n              hashtags: value,\r\n              category: category,\r\n              season: season,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          .then((result) => {\r\n            console.log(\"----------------------------\");\r\n            console.log(result.data);\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n            console.log(error);\r\n          });\r\n      }\r\n    },\r\n    [value, setPost, category, season]\r\n  );\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {!isLoggedIn && modalOpen && (\r\n        <Signup setIsLoggedIn={setIsLoggedIn} setModalOpen={setModalOpen} />\r\n      )}\r\n      {isLoggedIn && uploadModalOpen && (\r\n        <Upload setuploadModalOpen={setuploadModalOpen} />\r\n      )}\r\n      {!isLoggedIn && loginModalOpen && (\r\n        <LoginForm\r\n          setIsLoggedIn={setIsLoggedIn}\r\n          setloginModalOpen={setloginModalOpen}\r\n        />\r\n      )}\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          {/* <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n            onClick={reloadPost}\r\n          >\r\n            <HomeIcon color=\"disabled\" />\r\n          </IconButton> */}\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            {/* <p>검색할 태그</p> */}\r\n          </Typography>\r\n          {/* <Search>\r\n            <StyledInputBase\r\n              onChange={(event) => {\r\n                setValue(event.target.value);\r\n              }}\r\n              placeholder=\"태그 입력\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyPress={(event) => {\r\n                if (event.which == 32) alert(value);\r\n              }}\r\n            />\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n          </Search> */}\r\n          {/* <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">\r\n              카테고리\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              required\r\n              value={category}\r\n              label=\"category\"\r\n              onChange={onChangeCategory}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"25px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">시즌</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              value={season}\r\n              label=\"season\"\r\n              required\r\n              onChange={onChangeSeason}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl> */}\r\n          <form onSubmit={TagSearch} style={{ width: \"50%\" }}>\r\n            <IconButton type=\"submit\" aria-label=\"search\">\r\n              <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n            </IconButton>\r\n            <TextField\r\n              id=\"search-bar\"\r\n              className=\"text\"\r\n              sx={{ display: \"inline-block\", width: \"80%\" }}\r\n              value={value}\r\n              onChange={onChangeValue}\r\n              label=\"#상의 #검정\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Search...\"\r\n              size=\"small\"\r\n              inputRef={searchBar}\r\n            />\r\n          </form>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={0} color=\"error\"></Badge>\r\n            </IconButton> */}\r\n            <>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                sx={{marginRight:\"10px\"}}\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"false\"\r\n                color=\"primary\"\r\n                onClick={uploadClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </>\r\n            {!isLoggedIn ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"100%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={Logout}\r\n                >\r\n                  로그아웃\r\n                </Button>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { useCallback, useEffect,useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport AlignItemsList from \"./AlignItemsList\";\r\nimport Grid from '@mui/material/Grid';\r\nimport { useInput } from '@mui/base';\r\nimport axios from 'axios';\r\nimport Image from \"next/image\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\ntype ResponsiveGridProps = {\r\n  setPost: any;\r\n  posts : any[];\r\n};\r\n\r\nexport default function ResponsiveGrid({ setPost, posts }: ResponsiveGridProps) {\r\n  \r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n        {posts.map((post, index) => (\r\n          <Grid item xs={6} sm={4} md={2.4} lg ={4} key={index}>\r\n            <Item>\r\n            <li\r\n              style={{\r\n                maxWidth: \"320px\",\r\n                display: \"inline-block\",\r\n                // marginRight: \"4%\",\r\n                // marginLeft: \"1%\",\r\n                // marginTop: \"1%\",\r\n              }}\r\n            >\r\n            <AlignItemsList name={post.name} index={index} setPost={setPost} posts={posts} id={post.id} category={post.category} brand={post.brand} src={post.Images[0].src}link={post.link} season={post.season} hashtags ={post.Hashtags} reason ={post.reason}/> </li>\r\n            </Item>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from '@mui/material/Button';\r\n\r\ntype SignupProps = {\r\n  setModalOpen: any;\r\n  setIsLoggedIn : any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({ setIsLoggedIn, setModalOpen }: SignupProps): ReactElement {\r\n  const API = \"http://15.164.224.172:8080/signups\";\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password,setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email : any) => {\r\n    let res = false;\r\n  \r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n  \r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  // const modalRef = useRef<HTMLDivElement>(null);\r\n  // useEffect(() => {\r\n  //   // 이벤트 핸들러 함수\r\n  //   const handler = (event: any) => {\r\n  //     // mousedown 이벤트가 발생한 영역이 모달창이 아닐 때, 모달창 제거 처리\r\n  //     if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n  //       setModalOpen(false);\r\n  //     }\r\n  //   };\r\n\r\n  //   // 이벤트 핸들러 등록\r\n  //   document.addEventListener(\"mousedown\", handler);\r\n  //   // document.addEventListener('touchstart', handler); // 모바일 대응\r\n\r\n  //   return () => {\r\n  //     // 이벤트 핸들러 해제\r\n  //     document.removeEventListener(\"mousedown\", handler);\r\n  //     // document.removeEventListener('touchstart', handler); // 모바일 대응\r\n  //   };\r\n  // }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if (password !== passwordCheck) {\r\n        return setPasswordError(true);\r\n      }\r\n      e.preventDefault();\r\n      // if (!term) {\r\n      //   return setTermError(true);\r\n      // }\r\n      console.log(email, nickname, password);\r\n      axios\r\n        .post(\r\n          API,\r\n          // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n          // 회원가입창에서 클라이언트가 입력하는 데이터\r\n          {\r\n            email: email,\r\n            name: nickname,\r\n            password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // 'Accept': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        // 그러면 서버에서 클라이언트로 response(응답)으로\r\n        // {ok: true} 아니면 {ok: false}가 온다.\r\n        // .then((response) => {\r\n        //   console.log(response); // response.data로 해야?\r\n        // })\r\n        .then((result) => {\r\n          console.log(result);\r\n          console.log(\"singupDB!\");\r\n          console.log(result.data);\r\n          setIsLoggedIn(true);\r\n          // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n          // history.replace('/login');\r\n        })\r\n        .catch((error) => {\r\n          alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n          console.log(error);\r\n        });\r\n    },\r\n    [email, password, passwordCheck,setIsLoggedIn , nickname]\r\n  );\r\n\r\n    return (\r\n      <Modal\r\n        open={true}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box \r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}>\r\n          {/* <form onSubmit={onSubmit}> */}\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            회원가입\r\n          </Typography>\r\n            <TextField\r\n              label=\"이메일\"\r\n              name=\"user-email\"\r\n              fullWidth\r\n              type=\"email\"\r\n              value={email}\r\n              required\r\n              // error={checkEmail(email)}\r\n              onChange={onChangeEmail}\r\n            />\r\n            <TextField\r\n              label=\"이름\"\r\n              name=\"user-nick\"\r\n              fullWidth\r\n              value={nickname}\r\n              required\r\n              onChange={onChangeNickname}\r\n            />\r\n            <TextField\r\n              label=\"비밀번호\"\r\n              fullWidth\r\n              name=\"user-password\"\r\n              type=\"password\"\r\n              value={password}\r\n              required\r\n              onChange={onChangePassword}\r\n            />\r\n            <TextField\r\n              label=\"비밀번호체크\"\r\n              fullWidth\r\n              name=\"user-password-check\"\r\n              type=\"password\"\r\n              value={passwordCheck}\r\n              required\r\n              onChange={setPasswordCheck}\r\n            />\r\n            {passwordError && <span>비밀번호가 일치하지 않습니다.</span>}\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n                size=\"large\"\r\n              >\r\n                회원가입\r\n              </Button>\r\n          {/* </form> */}\r\n        </Box>\r\n        {/* <Button onClick={closeModal}>닫기</Button> */}\r\n      </Modal>\r\n      // {/* <div className={\"container\"} ref={modalRef}>\r\n      //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n      //       <br />\r\n      //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n      //     </TextField>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-nick\">닉네임</label>\r\n      //       <br />\r\n      //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n      //     </div>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-password\">비밀번호</label>\r\n      //       <br />\r\n      //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n      //     </div>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n      //       <br />\r\n      //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n      //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n      //     </div>\r\n      //     {/* <div>\r\n      //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n      //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n      //     </div> */}\r\n      //     <div style={{ marginTop: 10 }}>\r\n      //       <button>가입하기</button>\r\n      //     </div>\r\n      //     <button className={\"close\"} onClick={closeModal}>\r\n      //         X\r\n      //     </button>\r\n      //   </div> */}\r\n      // }\r\n    );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\ntype UploadProps = {\r\n  setuploadModalOpen: any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload({ setuploadModalOpen }: UploadProps) {\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  // const handleChange = (file: any) => {\r\n  //   setFile(file);\r\n  //   console.log(file);\r\n  // };\r\n  const API = \"http://15.164.224.172:8080/uploads\";\r\n  const [imageFile, setImageFile] = useState<File>();\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [reason, onChangeReason] = useInput(\"\");\r\n  const [brand, onChangeBrand] = useInput(\"\");\r\n  const [link, onChangeLink] = useInput(\"\");\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const closeModal = () => {\r\n    setuploadModalOpen(false);\r\n  };\r\n  const { title, desc, photos } = post;\r\n  // const handlechange = e =>{\r\n  //   setPost({\r\n  //     ...post,\r\n  //     [e.target.name]: e.target.value;\r\n  //   })\r\n  // }\r\n\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n\r\n  const [text, onChangeText, setText] = useInput('');\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = (files: FileList | null) => {\r\n    let photosArr: any[] = [];\r\n    if (files != undefined) {\r\n      if (files.length > 1) {\r\n        alert(\"이미지는 1개만 넣어주세요\");\r\n      } else {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          setImageFile(files[i]);\r\n          console.log(files[i]);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              photos: [...photos, ...photosArr],\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handeldelete = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    let target = (e.target as HTMLSpanElement).parentElement;\r\n    console.log(target?.dataset);\r\n    let targetindex = 1;\r\n    console.log(targetindex);\r\n    setPost({\r\n      ...post,\r\n      photos: [\r\n        ...photos.slice(0, targetindex),\r\n        ...photos.slice(targetindex + 1),\r\n      ],\r\n    });\r\n    console.log(photos);\r\n    setIsImage(false);\r\n  };\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    console.log(\"leave\");\r\n    setHighlight(false);\r\n  }, []);\r\n  const handledrop = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let dt = e.dataTransfer;\r\n    let files = dt?.files;\r\n    setHighlight(false);\r\n    handfiles(files);\r\n  };\r\n\r\n  const uploadClick = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const USERINFOAPI = `http://15.164.224.172:8080/USERINFO`\r\n  const [userInfo, setUserInfo]= useState({name : \"\"});\r\n\r\n  useEffect(()=>{\r\n    axios.get(USERINFOAPI,{\r\n    }).then((result)=>{\r\n      console.log(result.data)\r\n      setUserInfo(result.data)\r\n    })\r\n    .catch((err)=>{\r\n\r\n      console.log(err)\r\n    })\r\n  },[]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if(category==\"\" || season==\"\"){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"카테고리, 시즌 필수\")\r\n      }\r\n      else if(brand==\"\" || link ==\"\"){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"브랜드, 링크 입력 필수\")\r\n      }\r\n      else if(imageFile == undefined){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"이미지 필수\")\r\n\r\n      }\r\n      else{\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        console.log(imageFile);\r\n        const formData = new FormData();\r\n        formData.append(\"image\", imageFile as File);\r\n        formData.append(\"nickname\", nickname);\r\n        formData.append(\"brand\", brand);\r\n        formData.append(\"link\", link);\r\n        formData.append(\"category\", category);\r\n        formData.append(\"season\", season);\r\n        formData.append(\"hashtag\", text);\r\n        // alert(formData)\r\n        axios.post(API, formData)\r\n        .then((result)=>{\r\n          console.log(\"result\")\r\n          console.log(result) \r\n        })\r\n        .catch((err)=>{\r\n          console.log(err);\r\n        });\r\n      }\r\n      //   axios\r\n      //     .post(\r\n      //       API,\r\n      //       // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n      //       // 회원가입창에서 클라이언트가 입력하는 데이터\r\n      //       {\r\n      //         nickname: nickname,\r\n      //         brand: brand,\r\n      //         link: link, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n      //         image : (imageFile as File).name\r\n      //       },\r\n      //       {\r\n      //         headers: {\r\n      //           \"Content-Type\": \"application/json\",\r\n      //           // 'Accept': 'application/json',\r\n      //         },\r\n      //       }\r\n      //     )\r\n      //     // 그러면 서버에서 클라이언트로 response(응답)으로\r\n      //     // {ok: true} 아니면 {ok: false}가 온다.\r\n      //     // .then((response) => {\r\n      //     //   console.log(response); // response.data로 해야?\r\n      //     // })\r\n      //     .then((result) => {\r\n      //       console.log(result);\r\n      //       // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n      //       // history.replace('/login');\r\n      //     })\r\n      //     .catch((error) => {\r\n      //       alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n      //       console.log(error);\r\n      //     });\r\n    },\r\n    [brand, link, nickname, imageFile, category, text, season]\r\n  );\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography sx={{textAlign: \"center\"}} component=\"h1\" variant=\"h5\">\r\n          업로드\r\n        </Typography>\r\n        {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n        <TextField\r\n          required\r\n          label=\"브랜드\"\r\n          fullWidth\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-brand\"\r\n          type=\"text\"\r\n          value={brand}\r\n          variant=\"standard\"\r\n          onChange={onChangeBrand}\r\n        />\r\n        <TextField\r\n          label=\"Link\"\r\n          fullWidth\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={link}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeLink}\r\n        />\r\n        \r\n        <TextField\r\n          label=\"선정이유\"\r\n          fullWidth\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={reason}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeReason}\r\n        />\r\n\r\n        <FormControl \r\n        sx={{width: \"40%\", marginRight : \"10%\", marginTop : \"25px\"}}>\r\n          <InputLabel id=\"demo-simple-select-label\">카테고리</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={category}\r\n            label=\"category\"\r\n            required\r\n            onChange={handleCategoryChange}\r\n          >\r\n            <MenuItem value={\"상의\"}>상의</MenuItem>\r\n            <MenuItem value={\"하의\"}>하의</MenuItem>\r\n            <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n            <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n            <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n            <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl \r\n        sx={{width: \"40%\", marginTop : \"25px\"}}>\r\n          <InputLabel id=\"demo-simple-select-label\">시즌</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={season}\r\n            label=\"season\"\r\n            required\r\n            onChange={handleSeasonChange}\r\n          >\r\n            <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n            <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          sx={{marginTop : \"30px\"}}\r\n          value={text}\r\n          onChange={onChangeText}\r\n          fullWidth\r\n          label=\"해시태그입력 #검정 #반팔 \"\r\n          variant= \"outlined\"\r\n        />\r\n\r\n        {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n        <div className=\"file-upload\"\r\n          style={{marginTop : \"6px\"}}>\r\n          <div className=\"custom-form-group\">\r\n            {!isImage && (\r\n              <div\r\n                className={\r\n                  highlight\r\n                    ? \"custom-file-drop-area highlight\"\r\n                    : \"custom-file-drop-area\"\r\n                }\r\n                onDragEnter={handlehighlight}\r\n                onDragOver={handlehighlight}\r\n                onDragLeave={handleunhighlight}\r\n                onDrop={handledrop}\r\n              >\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"photos\"\r\n                  placeholder=\"Enter photos\"\r\n                  multiple={false}\r\n                  id=\"filephotos\"\r\n                  onChange={handlefilechange}\r\n                />\r\n                <label htmlFor=\"filephotos\">Drag & Drop</label>\r\n              </div>\r\n            )}\r\n            <div className=\"custom-file-preview\">\r\n              {photos.length > 0 &&\r\n                photos.map((item: any, index) =>\r\n                  index != 0 ? (\r\n                    <div className=\"prev-img\" key={index}>\r\n                      <span onClick={handeldelete}>&times;</span>\r\n                      {item && <Image src={item.src} alt={item.name} />}\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n  );\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios from 'axios';\nimport React, { useCallback, useState, useEffect } from 'react';\nimport Link from 'next/link'\n// const inter = Inter({ subsets: [\"latin\"] });\n\nexport default function Home() {\n  \n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [posts, setPost] = useState<any[]>([])\n\n  const LOADAPI = \"http://15.164.224.172:8080/loadpost\";\n\n  const loadPost = useCallback(() => {\n    axios.get(LOADAPI)\n      .then((result) => {\n        console.log(result.data)\n        setPost(result.data);\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\n        // history.replace('/login');\n      })\n      .catch((error) => {\n        alert('로그인이 정상적으로 되지 않았습니다.?');\n        console.log(error); \n      })\n\n  },[setPost])\n\n  useEffect(()=>{\n    loadPost()\n  },[loadPost])\n  \n  const LOGINCHECKAPI = \"http://15.164.224.172:8080/logincheck\";\n  useEffect( ()=>{\n    axios.get(LOGINCHECKAPI)\n      .then((result) => {\n        console.log(result.data.login)\n        if(result.data.login){\n          setIsLoggedIn(true);\n        }\n      })\n      .catch((error) => {\n        console.log(error); \n      })\n  },[])\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPost}><h1 id=\"title\">CRUMP REFERENCE</h1></a>\n        <div style={{marginBottom: \"40px\"}}>\n          <Navbar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} setPost={setPost}/>\n          {/* <LoginForm /> */}\n          {/* <SignupForm /> */}\n        </div>\n        <ResponsiveGrid setPost={setPost} posts={posts}/>\n      </div>\n    </>\n  );\n}\n","module.exports = require(\"@mui/icons-material/AccountCircle\");","module.exports = require(\"@mui/icons-material/Add\");","module.exports = require(\"@mui/icons-material/Delete\");","module.exports = require(\"@mui/icons-material/Edit\");","module.exports = require(\"@mui/icons-material/Mail\");","module.exports = require(\"@mui/icons-material/MoreVert\");","module.exports = require(\"@mui/icons-material/Notifications\");","module.exports = require(\"@mui/icons-material/Search\");","module.exports = require(\"@mui/material\");","module.exports = require(\"@mui/material/AppBar\");","module.exports = require(\"@mui/material/Badge\");","module.exports = require(\"@mui/material/Box\");","module.exports = require(\"@mui/material/Button\");","module.exports = require(\"@mui/material/Card\");","module.exports = require(\"@mui/material/CardContent\");","module.exports = require(\"@mui/material/CardMedia\");","module.exports = require(\"@mui/material/FormControl\");","module.exports = require(\"@mui/material/Grid\");","module.exports = require(\"@mui/material/IconButton\");","module.exports = require(\"@mui/material/InputBase\");","module.exports = require(\"@mui/material/InputLabel\");","module.exports = require(\"@mui/material/Menu\");","module.exports = require(\"@mui/material/MenuItem\");","module.exports = require(\"@mui/material/Modal\");","module.exports = require(\"@mui/material/Paper\");","module.exports = require(\"@mui/material/Select\");","module.exports = require(\"@mui/material/TextField\");","module.exports = require(\"@mui/material/Toolbar\");","module.exports = require(\"@mui/material/Typography\");","module.exports = require(\"@mui/material/styles\");","module.exports = require(\"next/dist/shared/lib/amp-context.js\");","module.exports = require(\"next/dist/shared/lib/amp-mode.js\");","module.exports = require(\"next/dist/shared/lib/head-manager-context.js\");","module.exports = require(\"next/dist/shared/lib/image-blur-svg.js\");","module.exports = require(\"next/dist/shared/lib/image-config-context.js\");","module.exports = require(\"next/dist/shared/lib/image-config.js\");","module.exports = require(\"next/dist/shared/lib/image-loader\");","module.exports = require(\"next/dist/shared/lib/side-effect.js\");","module.exports = require(\"next/dist/shared/lib/utils/warn-once.js\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react/jsx-runtime\");","module.exports = import(\"axios\");;"],"names":["React","Card","CardContent","CardMedia","Typography","DeleteIcon","EditIcon","CardActionArea","CardActions","useCallback","useEffect","useState","axios","category","상의","하의","아우터","디테일","이미지","악세사리","season","AlignItemsList","props","setCategory","setSeason","DELAPI","id","console","log","delClick","post","then","result","Posts","posts","filter","setPost","catch","err","editClick","alert","sx","maxWidth","marginTop","boxShadow","href","link","target","component","height","image","src","alt","span","style","fontWeight","fontSize","name","brand","variant","color","reason","div","width","onClick","margin","className","parseInt","display","a","hashtags","map","hashtag","index","useInput","Modal","Button","Box","TextField","position","top","left","transform","bgcolor","border","p","LoginForm","setIsLoggedIn","setloginModalOpen","API","email","onChangeEmail","password","onChangePassword","onFinish","values","User","setUser","closeModal","onSubmitForm","event","preventDefault","headers","data","error","open","onClose","aria-labelledby","aria-describedby","noValidate","autoComplete","onSubmit","label","fullWidth","type","value","required","onChange","mt","mb","size","inter","useRef","styled","alpha","AppBar","Toolbar","IconButton","InputBase","Badge","MenuItem","Menu","AddIcon","SearchIcon","AccountCircle","MailIcon","NotificationsIcon","MoreIcon","Signup","Upload","background","padding","Search","theme","borderRadius","shape","backgroundColor","marginRight","spacing","marginLeft","breakpoints","up","SearchIconWrapper","pointerEvents","alignItems","justifyContent","StyledInputBase","paddingLeft","transition","transitions","create","Navbar","isLoggedIn","HASHAPI","modalOpen","setModalOpen","uploadModalOpen","setuploadModalOpen","loginModalOpen","onChangeValue","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","searchBar","current","focus","onChangeCategory","onChangeSeason","showModal","reloadPost","showLoginModal","showUploadModal","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","Logout","LOGOUTAPI","get","message","uploadClick","handleMobileMenuOpen","TagSearch","e","split","length","stopPropagation","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","aria-label","badgeContent","aria-controls","aria-haspopup","flexGrow","noWrap","xs","sm","form","fill","placeholder","inputRef","md","edge","experimentalStyled","Paper","Grid","Item","palette","mode","typography","body2","textAlign","text","secondary","ResponsiveGrid","container","columns","item","lg","li","Images","Hashtags","nickname","onChangeNickname","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","checkEmail","res","check","test","FormControl","InputLabel","Select","Image","fileTypes","file","setFile","imageFile","setImageFile","setValue","isImage","setIsImage","highlight","setHighlight","onChangeReason","onChangeBrand","onChangeLink","title","desc","photos","onChangeText","setText","handleCategoryChange","handleSeasonChange","handlefilechange","files","handfiles","photosArr","undefined","i","reader","FileReader","readAsDataURL","addEventListener","fileobj","push","handeldelete","parentElement","dataset","targetindex","slice","handlehighlight","handleunhighlight","handledrop","dt","dataTransfer","USERINFOAPI","userInfo","setUserInfo","formData","FormData","append","labelId","onDragEnter","onDragOver","onDragLeave","onDrop","input","multiple","htmlFor","initValue","setter","handler","Head","Home","LOADAPI","loadPost","LOGINCHECKAPI","login","meta","content","h1","marginBottom"],"sourceRoot":""}