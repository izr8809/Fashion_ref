{"version":3,"file":"../pages/index.js","mappings":"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AI3F,OAAO;4BAAEsF,cAAc;wBAAO;kCACjC,iEAACyE,mEAAMA;4BACL7H,YAAYA;4BACZuE,eAAeA;4BACfhE,SAASA;4BACTkE,QAAUA;4BACVC,WAAaA;4BACbC,UAAWA;4BACXC,aAAeA;;;kCAMnB,mDAACwH,2EAAcA;wBACbpM,YAAYA;wBACZuE,eAAeA;wBACfhE,SAASA;wBACTF,OAAOA;;;;;;AAKjB,CAAC;;;;;;;;;;AC1FD;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA","sources":["webpack://fashion_ref/./Components/AlignItemsList.tsx","webpack://fashion_ref/./Components/LoginForm.tsx","webpack://fashion_ref/./Components/Navbar.tsx","webpack://fashion_ref/./Components/ResponsiveGrid.tsx","webpack://fashion_ref/./Components/signup.tsx","webpack://fashion_ref/./Components/upload.tsx","webpack://fashion_ref/./hooks/useInput.ts","webpack://fashion_ref/./pages/index.tsx","webpack://fashion_ref/external commonjs \"@mui/icons-material/AccountCircle\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Add\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Delete\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Edit\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/MoreVert\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Search\"","webpack://fashion_ref/external commonjs \"@mui/material\"","webpack://fashion_ref/external commonjs \"@mui/material/AppBar\"","webpack://fashion_ref/external commonjs \"@mui/material/Box\"","webpack://fashion_ref/external commonjs \"@mui/material/Button\"","webpack://fashion_ref/external commonjs \"@mui/material/Card\"","webpack://fashion_ref/external commonjs \"@mui/material/CardContent\"","webpack://fashion_ref/external commonjs \"@mui/material/CardMedia\"","webpack://fashion_ref/external commonjs \"@mui/material/FormControl\"","webpack://fashion_ref/external commonjs \"@mui/material/Grid\"","webpack://fashion_ref/external commonjs \"@mui/material/IconButton\"","webpack://fashion_ref/external commonjs \"@mui/material/InputBase\"","webpack://fashion_ref/external commonjs \"@mui/material/InputLabel\"","webpack://fashion_ref/external commonjs \"@mui/material/Menu\"","webpack://fashion_ref/external commonjs \"@mui/material/MenuItem\"","webpack://fashion_ref/external commonjs \"@mui/material/Modal\"","webpack://fashion_ref/external commonjs \"@mui/material/Paper\"","webpack://fashion_ref/external commonjs \"@mui/material/Select\"","webpack://fashion_ref/external commonjs \"@mui/material/TextField\"","webpack://fashion_ref/external commonjs \"@mui/material/Toolbar\"","webpack://fashion_ref/external commonjs \"@mui/material/Typography\"","webpack://fashion_ref/external commonjs \"@mui/material/styles\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/amp-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/amp-mode.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/head-manager-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-blur-svg.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-config-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-config.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-loader\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/side-effect.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/utils/warn-once.js\"","webpack://fashion_ref/external commonjs \"next/head\"","webpack://fashion_ref/external commonjs \"react\"","webpack://fashion_ref/external commonjs \"react/jsx-runtime\"","webpack://fashion_ref/external module \"axios\""],"sourcesContent":["import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\ntype AlignItemsListProps = {\r\n  category: string;\r\n  brand: string;\r\n  link: string;\r\n  src: string;\r\n  season: string;\r\n  reason: string;\r\n  hashtags: any[];\r\n  id: number;\r\n  setPost: any;\r\n  posts: any[];\r\n  index: number;\r\n  name: string;\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nconst category = {\r\n  상의: 1,\r\n  하의: 2,\r\n  아우터: 3,\r\n  디테일: 4,\r\n  이미지: 5,\r\n  악세사리: 6,\r\n};\r\n\r\nconst season = {\r\n  \"23SS\": 7,\r\n  \"23FW\": 8,\r\n};\r\nexport default function AlignItemsList(props: AlignItemsListProps) {\r\n  const [category, setCategory] = useState(\"\");\r\n  const [season, setSeason] = useState(\"\");\r\n\r\n  const HASHAPI = `${process.env.NEXT_PUBLIC_API}/hashtagsearch`;\r\n  const DELAPI = `${process.env.NEXT_PUBLIC_API}/deletpost/${props.id}`;\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  \r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n  const delClick = useCallback(() => {\r\n    setModalOpen(true)\r\n    // if (props.isLoggedIn) {\r\n    //   axios\r\n    //     .post(DELAPI, {})\r\n    //     .then((result) => {\r\n    //       const Posts = props.posts.filter((post) => post.id !== props.id);\r\n    //       props.setPost(Posts);\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.log(err);\r\n    //     });\r\n    // } else {\r\n    //   //로그인 모달 띄우기\r\n    //   alert(\"로그인 해주세요\");\r\n    // }\r\n  }, [DELAPI, props]);\r\n\r\n\r\n  const onSubmit = useCallback((e:any)=>{\r\n    // e.preventDefault();\r\n    if (props.isLoggedIn) {\r\n      axios\r\n        .post(DELAPI, {})\r\n        .then((result) => {\r\n          const Posts = props.posts.filter((post) => post.id !== props.id);\r\n          props.setPost(Posts);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      //로그인 모달 띄우기\r\n      alert(\"로그인 해주세요\");\r\n    }\r\n  },[props.isLoggedIn, props.posts])\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const editClick = useCallback(() => {\r\n    alert(\"만드는 중입니다..\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCategory(props.category);\r\n    setSeason(\"23SS\");\r\n  }, [props.category]);\r\n\r\n  const TagClick = React.useCallback((e: any, hashname: string) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    axios\r\n      .post(\r\n        HASHAPI,\r\n        {\r\n          hashtags: \"#\" + hashname,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            // 'Accept': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then((result) => {\r\n        props.setPost(result.data);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    { modalOpen && \r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h2\" variant=\"h5\" sx={{ textAlign: \"center\" }}>\r\n          정말 삭제하시겠습니까?\r\n        </Typography>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2, width:\"40%\", marginLeft:\"5%\", marginRight:\"10%\" }}\r\n          size=\"large\"\r\n        >\r\n          삭제\r\n        </Button>\r\n        \r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2, width:\"40%\" }}\r\n          size=\"large\"\r\n          onClick={closeModal}\r\n        >\r\n          취소\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    }\r\n    <Card\r\n      sx={{\r\n        maxWidth: \"15\",\r\n        marginTop: \"20px\",\r\n        // borderRadius: \"24px\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <CardActionArea href={`${props.link}`} target=\"_blank\">\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"400\"\r\n          image={`../${props.src}` || \"\"}\r\n          alt=\"green iguana\"\r\n        />\r\n        <CardContent>\r\n          <Typography>\r\n            <span\r\n              style={{ fontWeight: 900, fontSize: \"130%\", marginBottom: \"4%\" }}\r\n            >\r\n              {props.name[0]}_{`${props.brand}`}\r\n            </span>\r\n          </Typography>\r\n\r\n          {/* <span style={{fontWeight :900, fontSize: \"100%\", marginBottom: 5}}>\r\n            참고할 부분\r\n          </span> */}\r\n          <Typography\r\n            sx={{ fontWeight: 900, marginBottom: \"1%\" }}\r\n            variant=\"subtitle2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            참고할 부분\r\n          </Typography>\r\n\r\n          <Typography\r\n            sx={{ marginBottom: \"1%\" }}\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <div style={{ width: \"100%\", marginBottom: \"3%\" }}>\r\n          <EditIcon id=\"editicon\" onClick={editClick} />\r\n          <DeleteIcon id=\"delicon\" onClick={delClick} />\r\n        </div>\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n        {/* <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${parseInt(props.season) % 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`TagCategory Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div> */}\r\n        {props.hashtags.map((hashtag, index) => (\r\n          <div style={{ margin: \"2px\" }} key={index}>\r\n            <div\r\n              className={`Tag${\r\n                parseInt(hashtag.PostHashtag.HashtagId) % 8\r\n              } Tag`}\r\n              style={{ display: \"inline-block\", margin: \"2px\" }}\r\n              onClick={(e) => {\r\n                TagClick(e, hashtag.name);\r\n              }}\r\n            >\r\n              <a href=\"\">#{hashtag.name}</a>\r\n            </div>{\" \"}\r\n            &nbsp;\r\n          </div>\r\n        ))}\r\n      </CardActions>\r\n    </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  setIsLoggedIn: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function LoginForm({\r\n  setIsLoggedIn,\r\n  setloginModalOpen,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: LoginFormProps): ReactElement {\r\n  const API = `${process.env.NEXT_PUBLIC_API}/login`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [User, setUser] = useState({\r\n    id: 0,\r\n    name: null,\r\n  });\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback(\r\n    (event: any) => {\r\n      event.preventDefault();\r\n      if(email == \"\"){\r\n        alert(\"이메일을 입력해주세요\")\r\n      }\r\n      else if(password == \"\"){\r\n        alert(\"비밀번호를 입력해주세요\")\r\n      }\r\n      else{\r\n        axios\r\n        .post(\r\n          API,\r\n          // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n          // 회원가입창에서 클라이언트가 입력하는 데이터\r\n          {\r\n            email: email,\r\n            password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // 'Accept': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        .then((result) => {\r\n          setUser(result.data.data);\r\n          setIsLoggedIn(true);\r\n          setUserId(result.data.data.id);\r\n          setUserName(result.data.data.name);\r\n          console.log(result.data.data)\r\n          // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n          // history.replace('/login');\r\n        })\r\n        .catch((error) => {\r\n          alert(\"로그인 정보가 일치하지 않습니다.\");\r\n          console.log(error);\r\n        });\r\n      }\r\n      \r\n    },\r\n    [email, password, setIsLoggedIn]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          로그인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement, useRef } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\n// import { useNavigate  } from 'react-router-dom'; // 설치한 패키지\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/signup\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Upload from \"@/Components/upload\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\nconst inter = Inter({ subsets: [\"latin\"] });\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(\"#F8F8F8\", 0.73),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(\"#F8F8F8\", 0.33),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n    height: \"40%\",\r\n  },\r\n}));\r\n\r\ntype NavbarProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\n\r\nexport default function Navbar({\r\n  isLoggedIn,\r\n  setIsLoggedIn,\r\n  setPost,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName\r\n}: NavbarProps): ReactElement {\r\n  // const navigate = useNavigate();\r\n  const HASHAPI = `${process.env.NEXT_PUBLIC_API}/hashtagsearch`;\r\n  const GETHASHAPI = `${process.env.NEXT_PUBLIC_API}/getHash`;\r\n  const API = `${process.env.NEXT_PUBLIC_API}/loadpost`;\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  \r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchBar.current) {\r\n      searchBar.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  const showModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const showUploadModal = () => {\r\n    setuploadModalOpen(true);\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    const LOGOUTAPI = `${process.env.NEXT_PUBLIC_API}/logout`;\r\n    axios\r\n      .get(LOGOUTAPI)\r\n      .then((result) => {\r\n        if (result.data.message == \"ok\") setIsLoggedIn(false);\r\n        setloginModalOpen(false);\r\n      })\r\n      .catch((err) => {alert(\"서버와 연결 끊겼네요. 새로고침.!\")});\r\n  }, [setIsLoggedIn]);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (isLoggedIn) {\r\n      setuploadModalOpen(true);\r\n    } else {\r\n      setloginModalOpen(true);\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onReady = useCallback(()=>{alert(\"준비중입니다.\")},[])\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      // e.preventDeafult();\r\n      // e.stopPropagation();\r\n      if (value == \"\") {\r\n        axios\r\n          .get(API)\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n          });\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        let upperCaseValue = value.toUpperCase();\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        axios\r\n          .post(\r\n            HASHAPI,\r\n            {\r\n              hashtags: upperCaseValue,\r\n              category: category,\r\n              season: season,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n            console.log(error);\r\n          });\r\n      }\r\n    },\r\n    [value, setPost, category, season]\r\n  );\r\n\r\n  const getHashtags = useCallback(()=>{\r\n    axios\r\n    .get(GETHASHAPI)\r\n    .then((result) => {\r\n      console.log(result)\r\n      // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n      // history.replace('/login');\r\n    })\r\n    .catch((error) => {\r\n      alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n    });\r\n  },[])\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <p>만드는 중입니다</p>\r\n      </MenuItem>\r\n      {/* <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>프로필</p>\r\n      </MenuItem> */}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {!isLoggedIn && modalOpen && (\r\n        <Signup setIsLoggedIn={setIsLoggedIn} setModalOpen={setModalOpen} \r\n        userId = {userId}\r\n        setUserId = {setUserId}\r\n        userName= {userName}\r\n        setUserName = {setUserName}/>\r\n      )}\r\n      {isLoggedIn && uploadModalOpen && (\r\n        <Upload setuploadModalOpen={setuploadModalOpen} \r\n        userId = {userId}\r\n        setUserId = {setUserId}\r\n        userName= {userName}\r\n        setUserName = {setUserName}/>\r\n      )}\r\n      {!isLoggedIn && loginModalOpen && (\r\n        <LoginForm\r\n          setIsLoggedIn={setIsLoggedIn}\r\n          setloginModalOpen={setloginModalOpen}\r\n          userId = {userId}\r\n          setUserId = {setUserId}\r\n          userName= {userName}\r\n          setUserName = {setUserName}\r\n        />\r\n      )}\r\n      \r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          {/* <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            태그모음\r\n          </Button> */}\r\n          {/* <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n            onClick={reloadPost}\r\n          >\r\n            <HomeIcon color=\"disabled\" />\r\n          </IconButton> */}\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            {/* <p>검색할 태그</p> */}\r\n          </Typography>\r\n          {/* <Search>\r\n            <StyledInputBase\r\n              onChange={(event) => {\r\n                setValue(event.target.value);\r\n              }}\r\n              placeholder=\"태그 입력\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyPress={(event) => {\r\n                if (event.which == 32) alert(value);\r\n              }}\r\n            />\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n          </Search> */}\r\n          {/* <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">\r\n              카테고리\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              required\r\n              value={category}\r\n              label=\"category\"\r\n              onChange={onChangeCategory}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"25px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">시즌</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              value={season}\r\n              label=\"season\"\r\n              required\r\n              onChange={onChangeSeason}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl> */}\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n          <form\r\n            onSubmit={TagSearch}\r\n            style={{ width: \"70%\", flex: \"auto\", marginLeft: \"15%\" }}\r\n          >\r\n            <IconButton\r\n              type=\"submit\"\r\n              aria-label=\"search\"\r\n              sx={{ display: { xs: \"none\", md: \"inline-block\" } }}\r\n            >\r\n              <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n            </IconButton>\r\n            <TextField\r\n              id=\"search-bar\"\r\n              className=\"text\"\r\n              sx={{ display: \"inline-block\", width: \"80%\" }}\r\n              value={value}\r\n              onChange={onChangeValue}\r\n              label=\"#상의 #검정\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Search...\"\r\n              size=\"small\"\r\n              inputRef={searchBar}\r\n            />\r\n          </form>\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={0} color=\"error\"></Badge>\r\n            </IconButton> */}\r\n            <>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                sx={{ marginRight: \"10px\" }}\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"false\"\r\n                color=\"primary\"\r\n                onClick={uploadClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </>\r\n            {!isLoggedIn ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"100%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                    whiteSpace: \"nowrap\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={Logout}\r\n                >\r\n                  로그아웃\r\n                </Button>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                  onClick={onReady}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" }, float: \"right\" }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { useCallback, useEffect,useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport AlignItemsList from \"./AlignItemsList\";\r\nimport Grid from '@mui/material/Grid';\r\nimport { useInput } from '@mui/base';\r\nimport axios from 'axios';\r\nimport Image from \"next/image\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\ntype ResponsiveGridProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n  posts : any[];\r\n};\r\n\r\nexport default function ResponsiveGrid({ setIsLoggedIn, isLoggedIn, setPost, posts }: ResponsiveGridProps) {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n        {posts.map((post, index) => (\r\n          <Grid item xs={6} sm={4} md={3} lg ={4} key={index}>\r\n            <Item>\r\n            <li\r\n              style={{\r\n                maxWidth: \"320px\",\r\n                display: \"inline-block\",\r\n                // marginRight: \"4%\",\r\n                // marginLeft: \"1%\",\r\n                // marginTop: \"1%\",-\r\n              }}\r\n            >\r\n            <AlignItemsList isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} name={post.name} index={index} setPost={setPost} posts={posts} id={post.id} category={post.category} brand={post.brand} src={post.Images[0].src}link={post.link} season={post.season} hashtags ={post.Hashtags} reason ={post.reason}/> </li>\r\n            </Item>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { color } from \"@mui/system\";\r\n\r\ntype SignupProps = {\r\n  setModalOpen: any;\r\n  setIsLoggedIn: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({\r\n  setIsLoggedIn,\r\n  setModalOpen,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: SignupProps): ReactElement {\r\n  const API = `${process.env.NEXT_PUBLIC_API}/signups`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password, setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email: any) => {\r\n    let res = false;\r\n\r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n\r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (password !== passwordCheck) {\r\n        setPasswordError(true);\r\n      } else if (!checkEmail(email)) {\r\n        setEmailError(true);\r\n      } else {\r\n        axios\r\n          .post(\r\n            API,\r\n            // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n            // 회원가입창에서 클라이언트가 입력하는 데이터\r\n            {\r\n              email: email,\r\n              name: nickname,\r\n              password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          // 그러면 서버에서 클라이언트로 response(응답)으로\r\n          // {ok: true} 아니면 {ok: false}가 온다.\r\n          // .then((response) => {\r\n          //   console.log(response); // response.data로 해야?\r\n          // })\r\n          .then((result) => {\r\n            setIsLoggedIn(true);\r\n            setUserId(result.data.userId);\r\n            setUserName(result.data.userName);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.data.message == \"already exist\") {\r\n              alert(\"이미 존재하는 이메일입니다.\");\r\n            } else {\r\n              alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n            }\r\n          });\r\n      }\r\n      // if (!term) {\r\n      //   return setTermError(true);\r\n      // }\r\n    },\r\n    [email, password, passwordCheck, setIsLoggedIn, nickname]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\" sx={{ textAlign: \"center\" }}>\r\n          회원가입\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          // error={checkEmail(email)}\r\n          onChange={onChangeEmail}\r\n        />\r\n        {emailError && (\r\n          <span style={{ color: \"red\" }}>Email 형식이 잘못되었습니다</span>\r\n        )}\r\n        <TextField\r\n          label=\"이름\"\r\n          name=\"user-nick\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          onChange={onChangeNickname}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          fullWidth\r\n          name=\"user-password\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={password}\r\n          required\r\n          onChange={onChangePassword}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호체크\"\r\n          fullWidth\r\n          name=\"user-password-check\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={passwordCheck}\r\n          required\r\n          onChange={setPasswordCheck}\r\n        />\r\n        {passwordError && (\r\n          <span style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다</span>\r\n        )}\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    // {/* <div className={\"container\"} ref={modalRef}>\r\n    //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n    //       <br />\r\n    //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n    //     </TextField>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-nick\">닉네임</label>\r\n    //       <br />\r\n    //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password\">비밀번호</label>\r\n    //       <br />\r\n    //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n    //       <br />\r\n    //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n    //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n    //     </div>\r\n    //     {/* <div>\r\n    //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n    //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n    //     </div> */}\r\n    //     <div style={{ marginTop: 10 }}>\r\n    //       <button>가입하기</button>\r\n    //     </div>\r\n    //     <button className={\"close\"} onClick={closeModal}>\r\n    //         X\r\n    //     </button>\r\n    //   </div> */}\r\n    // }\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nimport Router from \"next/router\";\r\n\r\n\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\ntype UploadProps = {\r\n  setuploadModalOpen: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload(props: UploadProps) {\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  const button = useRef();\r\n  // const handleChange = (file: any) => {\r\n  //   setFile(file);\r\n  //   console.log(file);\r\n  // };\r\n  const API = `${process.env.NEXT_PUBLIC_API}/uploads`;\r\n  const [imageFile, setImageFile] = useState<File>();\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [reason, onChangeReason] = useInput(\"\");\r\n  const [brand, onChangeBrand] = useInput(\"\");\r\n  const [link, onChangeLink] = useInput(\"\");\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const closeModal = () => {\r\n    props.setuploadModalOpen(false);\r\n  };\r\n  const { title, desc, photos } = post;\r\n  // const handlechange = e =>{\r\n  //   setPost({\r\n  //     ...post,\r\n  //     [e.target.name]: e.target.value;\r\n  //   })\r\n  // }\r\n\r\n  const inputRef = useRef(null);\r\n  const [category, setCategory] = React.useState(\"상의\");\r\n  const [season, setSeason] = React.useState(\"23SS\");\r\n\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = (files: FileList | null) => {\r\n    let photosArr: any[] = [];\r\n    if (files != undefined) {\r\n      if (files.length > 1) {\r\n        alert(\"이미지는 1개만 넣어주세요\");\r\n      } else {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          setImageFile(files[i]);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              photos: [...photos, ...photosArr],\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handeldelete = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    let target = (e.target as HTMLSpanElement).parentElement;\r\n    let targetindex = 1;\r\n    setPost({\r\n      ...post,\r\n      photos: [\r\n        ...photos.slice(0, targetindex),\r\n        ...photos.slice(targetindex + 1),\r\n      ],\r\n    });\r\n    setIsImage(false);\r\n  };\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(false);\r\n  }, []);\r\n  const handledrop = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let dt = e.dataTransfer;\r\n    let files = dt?.files;\r\n    setHighlight(false);\r\n    handfiles(files);\r\n  };\r\n\r\n  const uploadClick = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const USERINFOAPI = `${process.env.NEXT_PUBLIC_API}/USERINFO`;\r\n  const [userInfo, setUserInfo] = useState({ name: \"\" });\r\n\r\n  useEffect(() => {\r\n    console.log(props.userId)\r\n    console.log(props.userName)\r\n    axios\r\n      .get(USERINFOAPI, {})\r\n      .then((result) => {\r\n        setUserInfo(result.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [props.userId]);\r\n\r\n  const onSubmit = \r\n    (e: any) => {\r\n      console.log(\"!\");\r\n      if (brand == \"\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"브랜드입력 필수\");\r\n      } else if (imageFile == undefined) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"이미지 필수\");\r\n      } else {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        console.log(\"submit\");\r\n        console.log(props.userId);\r\n        console.log(props.userName);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"image\", imageFile as File);\r\n        formData.append(\"userId\", props.userId);\r\n        formData.append(\"userName\", props.userName);\r\n        formData.append(\"brand\", brand);\r\n        formData.append(\"link\", link);\r\n        formData.append(\"category\", category);\r\n        formData.append(\"season\", season);\r\n        formData.append(\"hashtag\", text);\r\n        formData.append(\"reason\", reason);\r\n        // alert(formData)\r\n\r\n        axios\r\n          .post(API, formData)\r\n          .then((result) => {\r\n            console.log(result)\r\n            location.reload();\r\n            // const ele = document.getElementById('submit_bt');\r\n            // ele?.click();\r\n            \r\n          })\r\n          .catch((err) => {\r\n            console.log(err)\r\n            location.reload();\r\n          });\r\n      }\r\n      //   axios\r\n      //     .post(\r\n      //       API,\r\n      //       // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n      //       // 회원가입창에서 클라이언트가 입력하는 데이터\r\n      //       {\r\n      //         nickname: nickname,\r\n      //         brand: brand,\r\n      //         link: link, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n      //         image : (imageFile as File).name\r\n      //       },\r\n      //       {\r\n      //         headers: {\r\n      //           \"Content-Type\": \"application/json\",\r\n      //           // 'Accept': 'application/json',\r\n      //         },\r\n      //       }\r\n      //     )\r\n      //     // 그러면 서버에서 클라이언트로 response(응답)으로\r\n      //     // {ok: true} 아니면 {ok: false}가 온다.\r\n      //     // .then((response) => {\r\n      //     //   console.log(response); // response.data로 해야?\r\n      //     // })\r\n      //     .then((result) => {\r\n      //       console.log(result);\r\n      //       // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n      //       // history.replace('/login');\r\n      //     })\r\n      //     .catch((error) => {\r\n      //       alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n      //       console.log(error);\r\n      //     });\r\n    };\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography sx={{ textAlign: \"center\" }} component=\"h1\" variant=\"h5\">\r\n          업로드\r\n        </Typography>\r\n        {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n        <TextField\r\n          required\r\n          label=\"브랜드\"\r\n          fullWidth\r\n          sx={{ marginTop: \"5px\" }}\r\n          name=\"user-brand\"\r\n          type=\"text\"\r\n          value={brand}\r\n          variant=\"standard\"\r\n          onChange={onChangeBrand}\r\n        />\r\n        <TextField\r\n          label=\"Link\"\r\n          fullWidth\r\n          sx={{ marginTop: \"5px\" }}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={link}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeLink}\r\n        />\r\n\r\n        <TextField\r\n          label=\"선정이유\"\r\n          fullWidth\r\n          sx={{ marginTop: \"5px\" }}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={reason}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeReason}\r\n        />\r\n\r\n        <FormControl\r\n          sx={{ width: \"40%\", marginRight: \"10%\", marginTop: \"25px\" }}\r\n        >\r\n          <InputLabel id=\"demo-simple-select-label\">상의</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            defaultValue={\"상의\"}\r\n            value={category}\r\n            label=\"카테고리\"\r\n            required\r\n            onChange={handleCategoryChange}\r\n          >\r\n            <MenuItem value={\"상의\"}>상의</MenuItem>\r\n            <MenuItem value={\"하의\"}>하의</MenuItem>\r\n            <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n            <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n            <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n            <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl sx={{ width: \"40%\", marginTop: \"25px\" }}>\r\n          <InputLabel id=\"demo-simple-select-label\">23SS</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            defaultValue={\"23SS\"}\r\n            value={season}\r\n            label=\"시즌\"\r\n            required\r\n            onChange={handleSeasonChange}\r\n          >\r\n            <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n            <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          sx={{ marginTop: \"30px\" }}\r\n          value={text}\r\n          onChange={onChangeText}\r\n          fullWidth\r\n          label=\"해시태그입력 #검정 #반팔 \"\r\n          variant=\"outlined\"\r\n        />\r\n\r\n        {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n        <div className=\"file-upload\" style={{ marginTop: \"6px\" }}>\r\n          <div className=\"custom-form-group\">\r\n            {!isImage && (\r\n              <div\r\n                className={\r\n                  highlight\r\n                    ? \"custom-file-drop-area highlight\"\r\n                    : \"custom-file-drop-area\"\r\n                }\r\n                onDragEnter={handlehighlight}\r\n                onDragOver={handlehighlight}\r\n                onDragLeave={handleunhighlight}\r\n                onDrop={handledrop}\r\n              >\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"photos\"\r\n                  placeholder=\"Enter photos\"\r\n                  multiple={false}\r\n                  id=\"filephotos\"\r\n                  onChange={handlefilechange}\r\n                />\r\n                <label htmlFor=\"filephotos\">Drag & Drop</label>\r\n              </div>\r\n            )}\r\n            <div className=\"custom-file-preview\">\r\n              {photos.length > 0 &&\r\n                photos.map((item: any, index) =>\r\n                  index != 0 ? (\r\n                    <div className=\"prev-img\" key={index}>\r\n                      <span onClick={handeldelete}>&times;</span>\r\n                      {item && <Image src={item.src} alt={item.name} />}\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button id=\"submit_bt\" style={{display: \"none\"}} type=\"submit\">\r\n\r\n        </button>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n  );\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios from \"axios\";\nimport React, { useCallback, useState, useEffect,useMemo  } from \"react\";\nimport Link from \"next/link\";\n// const inter = Inter({ subsets: [\"latin\"] });\n\nexport default function Home() {\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [posts, setPost] = useState<any[]>([]);\n  const [userId, setUserId] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n\n  const LOADAPI = `${process.env.NEXT_PUBLIC_API}/loadpost`;\n\n  const loadPost = useCallback(() => {\n    axios\n      .get(LOADAPI)\n      .then((result) => {\n        console.log(result)\n        for(let i =0; i++; i< result.data.length){\n          console.log(result.data[i].src)\n        }\n        // setPost(result.data);\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\n        // history.replace('/login');\n      })\n      .catch((error) => {\n        alert(\"로딩이 정상적으로 되지 않았습니다.\");\n        setPost([]);\n        console.log(error);\n      });\n  }, [setPost]);\n\n  useEffect(() => {\n    loadPost();\n  }, [loadPost]);\n\n  const LOGINCHECKAPI = `${process.env.NEXT_PUBLIC_API}/logincheck`;\n  useEffect(() => {\n    axios\n      .get(LOGINCHECKAPI)\n      .then((result) => {\n        if (result.data.login) {\n          setIsLoggedIn(true);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPost}>\n          <h1 id=\"title\">CRUMP REFERENCE</h1>\n        </a>\n        <div style={{ marginBottom: \"40px\" }}>\n          <Navbar\n            isLoggedIn={isLoggedIn}\n            setIsLoggedIn={setIsLoggedIn}\n            setPost={setPost}\n            userId = {userId}\n            setUserId = {setUserId}\n            userName= {userName}\n            setUserName = {setUserName}\n\n          />\n          {/* <LoginForm /> */}\n          {/* <SignupForm /> */}\n        </div>\n        <ResponsiveGrid\n          isLoggedIn={isLoggedIn}\n          setIsLoggedIn={setIsLoggedIn}\n          setPost={setPost}\n          posts={posts}\n        />\n      </div>\n    </>\n  );\n}\n","module.exports = require(\"@mui/icons-material/AccountCircle\");","module.exports = require(\"@mui/icons-material/Add\");","module.exports = require(\"@mui/icons-material/Delete\");","module.exports = require(\"@mui/icons-material/Edit\");","module.exports = require(\"@mui/icons-material/MoreVert\");","module.exports = require(\"@mui/icons-material/Search\");","module.exports = require(\"@mui/material\");","module.exports = require(\"@mui/material/AppBar\");","module.exports = require(\"@mui/material/Box\");","module.exports = require(\"@mui/material/Button\");","module.exports = require(\"@mui/material/Card\");","module.exports = require(\"@mui/material/CardContent\");","module.exports = require(\"@mui/material/CardMedia\");","module.exports = require(\"@mui/material/FormControl\");","module.exports = require(\"@mui/material/Grid\");","module.exports = require(\"@mui/material/IconButton\");","module.exports = require(\"@mui/material/InputBase\");","module.exports = require(\"@mui/material/InputLabel\");","module.exports = require(\"@mui/material/Menu\");","module.exports = require(\"@mui/material/MenuItem\");","module.exports = require(\"@mui/material/Modal\");","module.exports = require(\"@mui/material/Paper\");","module.exports = require(\"@mui/material/Select\");","module.exports = require(\"@mui/material/TextField\");","module.exports = require(\"@mui/material/Toolbar\");","module.exports = require(\"@mui/material/Typography\");","module.exports = require(\"@mui/material/styles\");","module.exports = require(\"next/dist/shared/lib/amp-context.js\");","module.exports = require(\"next/dist/shared/lib/amp-mode.js\");","module.exports = require(\"next/dist/shared/lib/head-manager-context.js\");","module.exports = require(\"next/dist/shared/lib/image-blur-svg.js\");","module.exports = require(\"next/dist/shared/lib/image-config-context.js\");","module.exports = require(\"next/dist/shared/lib/image-config.js\");","module.exports = require(\"next/dist/shared/lib/image-loader\");","module.exports = require(\"next/dist/shared/lib/side-effect.js\");","module.exports = require(\"next/dist/shared/lib/utils/warn-once.js\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react/jsx-runtime\");","module.exports = import(\"axios\");;"],"names":["React","Card","CardContent","CardMedia","Typography","DeleteIcon","EditIcon","Button","CardActionArea","CardActions","useCallback","useEffect","useState","axios","Modal","Box","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","category","상의","하의","아우터","디테일","이미지","악세사리","season","AlignItemsList","props","setCategory","setSeason","HASHAPI","process","env","NEXT_PUBLIC_API","DELAPI","id","modalOpen","setModalOpen","closeModal","delClick","onSubmit","e","isLoggedIn","post","then","result","Posts","posts","filter","setPost","catch","err","console","log","alert","editClick","TagClick","hashname","preventDefault","stopPropagation","hashtags","headers","data","error","open","onClose","aria-labelledby","aria-describedby","component","noValidate","autoComplete","sx","variant","textAlign","type","mt","mb","marginLeft","marginRight","size","fullWidth","onClick","maxWidth","marginTop","href","link","target","height","image","src","alt","span","fontWeight","fontSize","marginBottom","name","brand","color","reason","div","map","hashtag","index","margin","className","parseInt","PostHashtag","HashtagId","display","a","useInput","TextField","LoginForm","setIsLoggedIn","setloginModalOpen","userId","setUserId","userName","setUserName","API","email","onChangeEmail","password","onChangePassword","User","setUser","onSubmitForm","event","label","value","required","onChange","inter","useRef","styled","alpha","AppBar","Toolbar","IconButton","InputBase","MenuItem","Menu","AddIcon","SearchIcon","AccountCircle","MoreIcon","Signup","Upload","background","padding","Search","theme","borderRadius","shape","backgroundColor","spacing","breakpoints","up","SearchIconWrapper","pointerEvents","alignItems","justifyContent","StyledInputBase","paddingLeft","transition","transitions","create","Navbar","GETHASHAPI","uploadModalOpen","setuploadModalOpen","loginModalOpen","onChangeValue","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","searchBar","current","focus","showModal","showLoginModal","showUploadModal","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","Logout","LOGOUTAPI","get","message","uploadClick","handleMobileMenuOpen","onReady","TagSearch","split","length","upperCaseValue","toUpperCase","getHashtags","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","flexGrow","noWrap","xs","sm","md","form","flex","aria-label","fill","placeholder","inputRef","edge","aria-haspopup","whiteSpace","aria-controls","float","experimentalStyled","Paper","Grid","Item","palette","mode","typography","body2","text","secondary","ResponsiveGrid","container","columns","item","lg","li","Images","Hashtags","emailError","setEmailError","nickname","onChangeNickname","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","checkEmail","res","check","test","response","FormControl","InputLabel","Select","Image","fileTypes","file","setFile","button","imageFile","setImageFile","setValue","isImage","setIsImage","highlight","setHighlight","onChangeReason","onChangeBrand","onChangeLink","title","desc","photos","onChangeText","setText","handleCategoryChange","handleSeasonChange","handlefilechange","files","handfiles","photosArr","undefined","i","reader","FileReader","readAsDataURL","addEventListener","fileobj","push","handeldelete","parentElement","targetindex","slice","handlehighlight","handleunhighlight","handledrop","dt","dataTransfer","USERINFOAPI","userInfo","setUserInfo","formData","FormData","append","location","reload","labelId","defaultValue","onDragEnter","onDragOver","onDragLeave","onDrop","input","multiple","htmlFor","initValue","setter","handler","Head","Home","LOADAPI","loadPost","LOGINCHECKAPI","login","meta","content","h1"],"sourceRoot":""}