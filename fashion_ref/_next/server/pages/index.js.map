{"version":3,"file":"../pages/index.js","mappings":"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","sources":["webpack://fashion_ref/./Components/Cardpost.tsx","webpack://fashion_ref/./Components/LoginForm.tsx","webpack://fashion_ref/./Components/Navbar.tsx","webpack://fashion_ref/./Components/NoticeModal.tsx","webpack://fashion_ref/./Components/ResponsiveGrid.tsx","webpack://fashion_ref/./Components/Searchbar.tsx","webpack://fashion_ref/./Components/Signup.tsx","webpack://fashion_ref/./Components/Upload.tsx","webpack://fashion_ref/./Components/UserPage.tsx","webpack://fashion_ref/./hooks/useInput.ts","webpack://fashion_ref/./pages/index.tsx","webpack://fashion_ref/external commonjs \"@mui/icons-material/AccountCircle\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Add\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/ArrowLeft\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/ArrowRight\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Brightness1Rounded\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Close\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Delete\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Edit\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Favorite\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/FavoriteBorderTwoTone\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/FileCopy\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/MoreVert\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Search\"","webpack://fashion_ref/external commonjs \"@mui/lab\"","webpack://fashion_ref/external commonjs \"@mui/lab/LoadingButton\"","webpack://fashion_ref/external commonjs \"@mui/material\"","webpack://fashion_ref/external commonjs \"@mui/material/AppBar\"","webpack://fashion_ref/external commonjs \"@mui/material/Box\"","webpack://fashion_ref/external commonjs \"@mui/material/Button\"","webpack://fashion_ref/external commonjs \"@mui/material/Card\"","webpack://fashion_ref/external commonjs \"@mui/material/CardContent\"","webpack://fashion_ref/external commonjs \"@mui/material/CardMedia\"","webpack://fashion_ref/external commonjs \"@mui/material/FormControl\"","webpack://fashion_ref/external commonjs \"@mui/material/Grid\"","webpack://fashion_ref/external commonjs \"@mui/material/IconButton\"","webpack://fashion_ref/external commonjs \"@mui/material/InputLabel\"","webpack://fashion_ref/external commonjs \"@mui/material/Menu\"","webpack://fashion_ref/external commonjs \"@mui/material/MenuItem\"","webpack://fashion_ref/external commonjs \"@mui/material/Modal\"","webpack://fashion_ref/external commonjs \"@mui/material/Paper\"","webpack://fashion_ref/external commonjs \"@mui/material/Select\"","webpack://fashion_ref/external commonjs \"@mui/material/Stack\"","webpack://fashion_ref/external commonjs \"@mui/material/TextField\"","webpack://fashion_ref/external commonjs \"@mui/material/Toolbar\"","webpack://fashion_ref/external commonjs \"@mui/material/Typography\"","webpack://fashion_ref/external commonjs \"@mui/material/styles\"","webpack://fashion_ref/external commonjs \"next-redux-wrapper\"","webpack://fashion_ref/external commonjs \"next/head\"","webpack://fashion_ref/external commonjs \"react\"","webpack://fashion_ref/external commonjs \"react-redux\"","webpack://fashion_ref/external commonjs \"react/jsx-runtime\"","webpack://fashion_ref/external commonjs \"redux\"","webpack://fashion_ref/external commonjs \"redux-devtools-extension\"","webpack://fashion_ref/external commonjs \"redux-saga/effects\"","webpack://fashion_ref/external module \"@redux-saga/core\"","webpack://fashion_ref/external module \"axios\"","webpack://fashion_ref/external module \"immer\"","webpack://fashion_ref/external module \"redux-saga\""],"sourcesContent":["import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft';\r\nimport Brightness1RoundedIcon from '@mui/icons-material/Brightness1Rounded';\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  DELETE_POST_REQUEST,\r\n  DUPLICATE_POST_REQUEST,\r\n  HASHTAG_SEARCH_REQUEST,\r\n  LIKE_POST_REQUEST,\r\n  loadPost,\r\n  TOGGLE_ISEDIT_REQUEST,\r\n  UNLIKE_POST_REQUEST,\r\n} from \"@/reducers/post\";\r\nimport FavoriteBorderTwoToneIcon from \"@mui/icons-material/FavoriteBorderTwoTone\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport Upload from \"./Upload\";\r\n\r\ntype CardpostProps = {\r\n  index: number;\r\n  setIsUserpage:any;\r\n  // posts: any[];\r\n  category: string;\r\n  id: number;\r\n  brand: string;\r\n  link: string;\r\n  Images: {\r\n    src: string;\r\n  }[];\r\n  season: string;\r\n  reason: string;\r\n  name: string;\r\n  hashtags: {\r\n    PostHashtag: {\r\n      HashtagId: number;\r\n    };\r\n    name: string;\r\n  }[];\r\n  likers: any[];\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst StyledCardAction = styled(CardActions)`\r\n  display: flex;\r\n  -webkit-box-align: center;\r\n  align-items: center;\r\n  padding: 8px;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport default function Cardpost(props: CardpostProps) {\r\n  const { logInDone } = useSelector((state: any) => state.user);\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n  const dispatch = useDispatch();\r\n  // const isLoggedIn = false;\r\n  const [uploadModalClicked, setUploadModalClicked] = useState(false);\r\n  const [like, setLike] = useState(false);\r\n  const {isEdit} = useSelector((state: any) => state.post);\r\n  const [likeClick, setLikeClick] = useState(props.likers?.length || 0);\r\n  const [loginModalOpen, setIsLoginFormOpen] = useState(false);\r\n  const [isUploadFormOpen, setIsUploadFormOpen] = useState(false);\r\n  const [imageIndex, setImageIndex] = useState(0);\r\n\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [ImagePath, setImagePath] = React.useState(\"\");\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    if (user) {\r\n      setLike((prev) => !prev);\r\n\r\n      if (!like) {\r\n        dispatch({\r\n          type: LIKE_POST_REQUEST,\r\n          data: props.id,\r\n        });\r\n        setLikeClick((prev) => prev + 1);\r\n      } else {\r\n        dispatch({\r\n          type: UNLIKE_POST_REQUEST,\r\n          data: props.id,\r\n        });\r\n        setLikeClick((prev) => prev - 1);\r\n      }\r\n    } else {\r\n      alert(\"로그인 해주세요\");\r\n      setIsLoginFormOpen(true);\r\n      //로그인 모달 띄우기 넣어야\r\n    }\r\n  }, [user, like, props.id]);\r\n\r\n  const delClick = useCallback(() => {\r\n    if (user) {\r\n      setModalOpen(true);\r\n    } else {\r\n      alert(\"로그인 해주세요\");\r\n      setIsLoginFormOpen(true);\r\n      //로그인 모달 띄우기 넣어야\r\n    }\r\n  }, [user]);\r\n\r\n  const duplicateClick = useCallback(() => {\r\n    if (!user) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n\r\n    return dispatch({\r\n      type: DUPLICATE_POST_REQUEST,\r\n      data: props.id,\r\n    });\r\n  }, [dispatch, props.id, user]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      if (!user) {\r\n        return alert(\"로그인이 필요합니다.\");\r\n      }\r\n\r\n      return dispatch({\r\n        type: DELETE_POST_REQUEST,\r\n        data: props.id,\r\n      });\r\n    },\r\n    [dispatch, props.id, user]\r\n  );\r\n\r\n  const editClick = () => {\r\n    if (!user) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n    setIsUploadFormOpen(true);\r\n    if(!isEdit){\r\n      dispatch({\r\n        type: TOGGLE_ISEDIT_REQUEST,\r\n        data : true,\r\n      })\r\n    }\r\n\r\n    // alert(\"준비중입니다.\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.Images[imageIndex] == undefined) {\r\n    } else {\r\n      // console.log(\"props\")\r\n      // console.log(props)\r\n      setImagePath(`../${props.Images[imageIndex].src}`);\r\n    }\r\n  }, [props.Images,imageIndex]);\r\n\r\n  const onClickRightArrow = useCallback(()=>{\r\n    if(imageIndex < props.Images.length){\r\n      setImageIndex((prev)=> prev+1)\r\n    }\r\n  },[props.Images, imageIndex])\r\n  \r\n  const onClickLeftArrow = useCallback(()=>{\r\n    if(imageIndex > 0){\r\n      setImageIndex((prev)=> prev-1)\r\n    }\r\n  },[imageIndex])\r\n\r\n\r\n  const TagClick = React.useCallback(\r\n    (e: any, hashname: string) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      dispatch({\r\n        type: HASHTAG_SEARCH_REQUEST,\r\n        data: {\r\n          hashtags: \"#\" + hashname,\r\n        },\r\n      });\r\n      props.setIsUserpage(false);\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    },\r\n    [dispatch, props]\r\n  );\r\n\r\n  useEffect(() => {\r\n    //like 눌렀는지\r\n    if (user?.data && props.likers) {\r\n      const isUserLiked = props.likers.find((v) => v.id === user?.data.id);\r\n      if (isUserLiked) setLike(true);\r\n      else setLike(false);\r\n    }\r\n  }, [props.likers, user, props.id, logInDone]);\r\n\r\n  return (\r\n    <>\r\n      {isUploadFormOpen && isEdit && (\r\n        <Upload\r\n          setUploadModalClicked ={setUploadModalClicked}\r\n          uploadModalClicked={uploadModalClicked}\r\n          setImageIndex ={setImageIndex}\r\n          setuploadModalOpen={setIsUploadFormOpen}\r\n          uploadModalOpen={isUploadFormOpen}\r\n          postId={props.id}\r\n          clipboardFile={null}\r\n        />\r\n      )}\r\n      {loginModalOpen && (\r\n        <LoginForm\r\n          loginModalOpen={loginModalOpen}\r\n          setloginModalOpen={setIsLoginFormOpen}\r\n        />\r\n      )}\r\n      {modalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closeModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={onSubmit}\r\n            sx={style}\r\n          >\r\n            {/* <form onSubmit={onSubmit}> */}\r\n            <Typography\r\n              component=\"h2\"\r\n              variant=\"h5\"\r\n              sx={{ textAlign: \"center\", marginBottom: \"15px\" }}\r\n            >\r\n              정말 삭제하시겠습니까?\r\n            </Typography>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              sx={{\r\n                mt: 3,\r\n                mb: 2,\r\n                width: \"40%\",\r\n                marginLeft: \"5%\",\r\n                marginRight: \"10%\",\r\n              }}\r\n              size=\"large\"\r\n            >\r\n              삭제\r\n            </Button>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2, width: \"40%\" }}\r\n              size=\"large\"\r\n              onClick={closeModal}\r\n            >\r\n              취소\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Card\r\n        sx={{\r\n          maxWidth: \"15\",\r\n          marginTop: \"20px\",\r\n          // borderRadius: \"24px\",\r\n          boxShadow: \"none\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <CardActionArea href={`${props.link}`} target=\"_blank\">\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"400\"\r\n            image={ImagePath}\r\n            // alt=\"이미지 오류, 삭제 후 다시 등록해주세요\"\r\n          />\r\n        </CardActionArea>\r\n        {props.Images && props.Images.length > 1 && (\r\n          <>\r\n            <ArrowRightIcon\r\n              onClick={onClickRightArrow}\r\n              style={{ position: \"absolute\", top: \"30%\", right: \"0%\", zIndex: 100, color:\"#3D3D3D\", cursor:\"pointer\"}}\r\n            />\r\n            <Brightness1RoundedIcon \r\n              style={{ position: \"absolute\", top: \"30%\", right: \"0%\", color:\"#B5B5B7\" }}\r\n            />\r\n            <ArrowLeftIcon\r\n              onClick={onClickLeftArrow}\r\n              style={{ position: \"absolute\", top: \"30%\", left: \"0%\", zIndex: 100, color:\"#3D3D3D\",cursor:\"pointer\" }}\r\n            />\r\n            <Brightness1RoundedIcon \r\n              style={{ position: \"absolute\", top: \"30%\", left: \"0%\", color:\"#B5B5B7\" }}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        <CardContent>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              marginBottom: \"3%\",\r\n              display: \"inline-block\",\r\n            }}\r\n          >\r\n            <FileCopyIcon\r\n              id=\"copyicon\"\r\n              onClick={duplicateClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                marginRight: \"17px\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n            <EditIcon\r\n              id=\"editicon\"\r\n              onClick={editClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n            <DeleteIcon\r\n              id=\"delicon\"\r\n              onClick={delClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                marginLeft: \"17px\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n          </div>\r\n          <Typography>\r\n            <span\r\n              style={{\r\n                fontWeight: 900,\r\n                fontSize: \"130%\",\r\n                marginBottom: \"4%\",\r\n              }}\r\n            >\r\n              {`${props.brand}`}\r\n            </span>\r\n          </Typography>\r\n\r\n          {/* <span style={{fontWeight :900, fontSize: \"100%\", marginBottom: 5}}>\r\n            참고할 부분\r\n          </span> */}\r\n          <Typography\r\n            sx={{ fontWeight: 900, marginBottom: \"2%\" }}\r\n            variant=\"subtitle2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            참고할 부분\r\n          </Typography>\r\n\r\n          <Typography\r\n            sx={{ marginBottom: \"1%\" }}\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n        <StyledCardAction>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"inline-block\",\r\n              marginBottom: \"5px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: \"20%\",\r\n                marginBottom: \"3%\",\r\n                verticalAlign: \"center\",\r\n                display: \"inline-block\",\r\n                float: \"left\",\r\n              }}\r\n            >\r\n              {like ? (\r\n                <FavoriteIcon\r\n                  onClick={onToggleLike}\r\n                  sx={{ cursor: \"pointer\", opacity: \"80%\", color: \"#FF3040\" }}\r\n                />\r\n              ) : (\r\n                <FavoriteBorderTwoToneIcon\r\n                  onClick={onToggleLike}\r\n                  sx={{ cursor: \"pointer\", opacity: \"40%\" }}\r\n                />\r\n              )}\r\n              <span\r\n                style={{\r\n                  position: \"relative\",\r\n                  top: \"-7px\",\r\n                  marginLeft: \"5px\",\r\n                  color: \"#A6A6A6\",\r\n                }}\r\n              >\r\n                {likeClick ? likeClick : 0}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n          {/* <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${parseInt(props.season) % 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`TagCategory Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div> */}\r\n          {props.hashtags.map((hashtag, index) => (\r\n            <div style={{ margin: \"2px\" }} key={index}>\r\n              <div\r\n                className={`Tag${hashtag.PostHashtag.HashtagId % 8} Tag`}\r\n                style={{ display: \"inline-block\", margin: \"2px\" }}\r\n                onClick={(e) => {\r\n                  TagClick(e, hashtag.name);\r\n                }}\r\n              >\r\n                <a href=\"\">#{hashtag.name}</a>\r\n              </div>{\" \"}\r\n              &nbsp;\r\n            </div>\r\n          ))}\r\n\r\n          <div style={{ width: \"100%\" }}>\r\n            <span\r\n              style={{\r\n                float: \"left\",\r\n                color: \"#A6A6A6\",\r\n                fontSize: \"80%\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              작성자 : {props.name}\r\n            </span>\r\n          </div>\r\n        </StyledCardAction>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TOGGLE_LOGIN_DONE, loginRequestAction } from \"@/reducers/user\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  loginModalOpen : boolean;\r\n};\r\nexport default function LoginForm({\r\n  setloginModalOpen,\r\n  loginModalOpen,\r\n}: LoginFormProps): ReactElement {\r\n  \r\n  const dispatch = useDispatch();\r\n  const [isInitialOpen, setIsInitialOpen]= useState(true);\r\n  const {logInDone} = useSelector((state : any) => state.user)\r\n  const {logInLoading} = useSelector((state : any) => state.user)\r\n  const {logInError} = useSelector((state : any) => state.user)\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback(\r\n    (event: any) => {\r\n      event.preventDefault();\r\n      if (email == \"\") {\r\n        alert(\"이메일을 입력해주세요\");\r\n      } else if (password == \"\") {\r\n        alert(\"비밀번호를 입력해주세요\");\r\n      } else {\r\n        dispatch(loginRequestAction({email,password}))\r\n      }\r\n    },\r\n    [email, password, dispatch]\r\n  );\r\n\r\n  useEffect(()=>{\r\n    if(logInDone && !isInitialOpen){\r\n      setloginModalOpen(false);\r\n      dispatch({\r\n        type: TOGGLE_LOGIN_DONE,\r\n      })\r\n    }\r\n    setIsInitialOpen(false);\r\n\r\n  },[logInDone])\r\n\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        {logInError && <span style={{marginTop:\"10px\", color:\"#F73334\"}}> 로그인 정보가 일치하지 않습니다.</span>}\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n          loading={logInLoading}\r\n        >\r\n          로그인\r\n        </LoadingButton>\r\n        {/* </form> */}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement, useRef } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/Signup\";\r\nimport Upload from \"@/Components/Upload\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginRequestAction, logoutRequestAction } from \"@/reducers/user\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { GET_HASHTAGS_REQUEST, GET_USER_POST_REQUEST, TOGGLE_SCROLL_REQUEST } from \"@/reducers/post\";\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\n\r\ntype NavbarProps = {\r\n  setIsUserpage :any;\r\n};\r\n\r\nexport default function Navbar({\r\n  \r\n  setIsUserpage\r\n}: NavbarProps): ReactElement {\r\n\r\n  //redux\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { logOutLoading } = useSelector((state: any) => state.user);\r\n  const { hashtags } = useSelector((state: any) => state.post);\r\n  const { isEdit } = useSelector((state: any) => state.post);\r\n  const [clipboardFile, setClipboardFile] = useState(null);\r\n  const [uploadModalClicked, setUploadModalClicked] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n\r\n\r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    dispatch(logoutRequestAction());\r\n    //왜인지 모르겠는데 로그아웃 후 모달 켜짐\r\n    setloginModalOpen(false);\r\n  }, []);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (user) {\r\n      setuploadModalOpen(true);\r\n      setUploadModalClicked(true)\r\n    } else {\r\n      setloginModalOpen(true);\r\n      // setIsEdit(true);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onReady = useCallback(() => {\r\n    alert(\"준비중입니다.\");\r\n  }, []);\r\n\r\n  const getHashtags = useCallback(() => {\r\n    //dispatch\r\n    dispatch({\r\n      type: GET_HASHTAGS_REQUEST,\r\n    });\r\n    setShowHashModalOpen(true);\r\n  }, [dispatch]);\r\n\r\n  const profileClick = useCallback(()=>{\r\n    if(user){\r\n      setIsUserpage(true);\r\n      \r\n      dispatch({\r\n        type: GET_USER_POST_REQUEST,\r\n        data: null,\r\n      });\r\n      dispatch({\r\n        type: TOGGLE_SCROLL_REQUEST,\r\n      })\r\n    }else{\r\n      alert(\"준비중입니다.\");\r\n    }\r\n  },[user])\r\n\r\n\r\n  //Render Menu\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <p>만드는 중입니다</p>\r\n      </MenuItem>\r\n      {/* <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>프로필</p>\r\n      </MenuItem> */}\r\n    </Menu>\r\n  );\r\n\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {isModalOpen && (\r\n        <Signup\r\n          setIsModalOpen={setIsModalOpen}\r\n        />\r\n      )}\r\n      {user && uploadModalOpen && !isEdit && (\r\n        <Upload\r\n          uploadModalClicked={uploadModalClicked}\r\n          setUploadModalClicked={setUploadModalClicked}\r\n          setImageIndex={null}\r\n          uploadModalOpen={uploadModalOpen}\r\n          setuploadModalOpen={setuploadModalOpen}\r\n          postId={null}\r\n          clipboardFile={clipboardFile}\r\n        />\r\n      )}\r\n      {!user && loginModalOpen && (\r\n        <LoginForm\r\n          loginModalOpen={loginModalOpen}\r\n          setloginModalOpen={setloginModalOpen}\r\n        />\r\n      )}\r\n      {showHashModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closehashtagsModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <div\r\n              className=\"hashlistdiv\"\r\n              style={{ height: \"300px\", overflow: \"overlay\" }}\r\n            >\r\n              {hashtags &&\r\n                hashtags.map((hashtag: any, index: any) => (\r\n                  <li\r\n                    id=\"hashlist\"\r\n                    key={hashtag.id}\r\n                    style={{ listStyle: \"none\", marginBottom: \"5px\" }}\r\n                  >\r\n                    {\" \"}\r\n                    #{hashtag.name}\r\n                  </li>\r\n                ))}\r\n            </div>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closehashtagsModal}\r\n            >\r\n              확인\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          ></Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Searchbar setIsUserpage={setIsUserpage}/>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            <>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                sx={{ marginRight: \"10px\" }}\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"false\"\r\n                color=\"primary\"\r\n                onClick={uploadClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </>\r\n            {!user ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <LoadingButton\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"100%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                    whiteSpace: \"nowrap\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={Logout}\r\n                  loading={logOutLoading}\r\n                >\r\n                  로그아웃\r\n                </LoadingButton>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                  onClick={profileClick}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" }, float: \"right\" }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect,useState, useRef } from \"react\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\ntype NoticeModalProps = {};\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function NoticeModal({}: NoticeModalProps) {\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const closeNoticeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    var now = new Date();\r\n    var date = now.getDate();\t// 일\r\n    if(date-31 ==0)\r\n      setIsModalOpen(true)\r\n  },[])\r\n  return (\r\n    <>\r\n      {isModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closeNoticeModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <h1 > 3.31 업데이트 안내 🐇</h1>\r\n            <p style={{marginTop:\"-20px\", marginBottom:\"20px\",color:\"#7F7F7F\"}}> *하루동안 떠요</p>\r\n            <h2 style={{marginBottom:\"10px\"}}> 기능 추가 목록 </h2>\r\n            <ol type=\"1\">\r\n              <li style={{marginBottom:\"10px\"}}> 이미지 복사 후 (클립보드 복사 or PrintScreen) </li>\r\n              <li style={{marginBottom:\"10px\"}}> 바탕화면에서 Ctrl + v 누르면 자동으로 이미지 등록 </li>\r\n              <li style={{marginBottom:\"10px\"}}> 업로드 화면에서도 마찬가지 </li>\r\n            </ol>\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closeNoticeModal}\r\n            >\r\n              확인\r\n            </Button>\r\n          </Box>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Cardpost from \"./Cardpost\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { useInput } from \"@mui/base\";\r\nimport axios from \"axios\";\r\nimport Image from \"next/image\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\ntype ResponsiveGridProps = {\r\n  setIsUserpage:any\r\n};\r\n\r\nexport default function ResponsiveGrid({setIsUserpage}: ResponsiveGridProps) {\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n\r\n  useEffect(() => {\r\n  }, [postArray]);\r\n\r\n\r\n\r\n  //check if I like\r\n  return (\r\n    <>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Grid\r\n          container\r\n          spacing={{ xs: 2, md: 3 }}\r\n          columns={{ xs: 4, sm: 8, md: 12 }}\r\n        >\r\n          {postArray &&\r\n            (postArray as Array<any>).map((post, index) => (\r\n              <Grid item xs={6} sm={4} md={3} lg={4} key={post.id}>\r\n                <Item>\r\n                  <li\r\n                    style={{\r\n                      maxWidth: \"320px\",\r\n                      display: \"inline-block\",\r\n                      // marginRight: \"4%\",\r\n                      // marginLeft: \"1%\",\r\n                      // marginTop: \"1%\",-\r\n                    }}\r\n                  >\r\n                    <Cardpost\r\n                      setIsUserpage={setIsUserpage}\r\n                      index={index}\r\n                      name={post.name}\r\n                      // posts={postArray}\r\n                      id={post.id}\r\n                      likers={post.Likers}\r\n                      category={post.category}\r\n                      brand={post.brand}\r\n                      Images={post.Images}\r\n                      link={post.link}\r\n                      season={post.season}\r\n                      hashtags={post.Hashtags}\r\n                      reason={post.reason}\r\n                    />{\" \"}\r\n                  </li>\r\n                </Item>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { HASHTAG_SEARCH_REQUEST, loadPost } from \"@/reducers/post\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {useEffect, useRef} from 'react';\r\n\r\ntype SearchbarProps = {\r\n  setIsUserpage:any\r\n};\r\n\r\nexport default function Searchbar({setIsUserpage}: SearchbarProps) {\r\n  const [value, onChangeValue, setValue] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (searchBar.current) {\r\n      searchBar.current.focus();\r\n    }\r\n  }, []);\r\n\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      // e.preventDeafult();\r\n      // e.stopPropagation();\r\n      if (value == \"\") {\r\n        dispatch(loadPost())\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        let upperCaseValue = value.toUpperCase();\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        dispatch({\r\n          type: HASHTAG_SEARCH_REQUEST,\r\n          data: {\r\n            hashtags: \"#\" + upperCaseValue,\r\n          }\r\n        })\r\n        setValue(\"\")\r\n        setIsUserpage(false)\r\n      }\r\n    },\r\n    [dispatch, value]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={TagSearch}\r\n        style={{ width: \"70%\", flex: \"auto\", marginLeft: \"15%\" }}\r\n      >\r\n        <IconButton\r\n          type=\"submit\"\r\n          aria-label=\"search\"\r\n          sx={{ display: { xs: \"none\", md: \"inline-block\" } }}\r\n        >\r\n          <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n        </IconButton>\r\n        <TextField\r\n          id=\"search-bar\"\r\n          className=\"text\"\r\n          sx={{ display: \"inline-block\", width: \"80%\", '> div' : {width :\"100%\"}}}\r\n          value={value}\r\n          onChange={onChangeValue}\r\n          label=\"#상의 #검정\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Search...\"\r\n          size=\"small\"\r\n          inputRef={searchBar}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { TOGGLE_SIGNUP_DONE, loginRequestAction, signupRequestAction } from \"@/reducers/user\";\r\n\r\ntype SignupProps = {\r\n  setIsModalOpen: any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({\r\n  setIsModalOpen,\r\n}: SignupProps): ReactElement {\r\n  const dispatch = useDispatch();\r\n  const [isInitialOpen, setIsInitialOpen]= useState(true);\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const { signUpLoading } = useSelector((state: any) => state.user);\r\n  const { signUpDone } = useSelector((state: any) => state.user);\r\n  const { signUpError } = useSelector((state: any) => state.user);\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [name, onChangeName] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [nameError, setNameError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password, setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email: any) => {\r\n    let res = false;\r\n\r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      // e.stopPropagation();\r\n      if (password !== passwordCheck) {\r\n        setPasswordError(true);\r\n      } else if (!checkEmail(email) || email.replace(\" \",\"\") ==\"\") {\r\n        setEmailError(true);\r\n      } else if(name.replace(\" \",\"\") ==\"\"){\r\n        setNameError(true);\r\n      }\r\n      else {\r\n        dispatch(\r\n          signupRequestAction({\r\n            email,\r\n            name,\r\n            password,\r\n          })\r\n        );\r\n      }\r\n    },[email, password, passwordCheck, name]);\r\n\r\n    useEffect(()=>{\r\n      console.log(\"signupDone\",signUpDone)\r\n      if(signUpDone && !isInitialOpen){\r\n        console.log(\"modal\")\r\n        setIsModalOpen(false);\r\n        dispatch({\r\n          type: TOGGLE_SIGNUP_DONE,\r\n        })\r\n      }\r\n      setIsInitialOpen(false);\r\n    },[signUpDone])\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\" sx={{ textAlign: \"center\" }}>\r\n          회원가입\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          // error={checkEmail(email)}\r\n          onChange={onChangeEmail}\r\n        />\r\n        {emailError && (\r\n          <span style={{ color: \"red\" }}>Email 형식이 잘못되었습니다</span>\r\n        )}\r\n        <TextField\r\n          label=\"이름\"\r\n          name=\"user-nick\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          value={name}\r\n          required\r\n          onChange={onChangeName}\r\n        />\r\n        {nameError && (\r\n          <span style={{ color: \"red\" }}>이름을 입력해주세요</span>\r\n        )}\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          fullWidth\r\n          name=\"user-password\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={password}\r\n          required\r\n          onChange={onChangePassword}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호체크\"\r\n          fullWidth\r\n          name=\"user-password-check\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={passwordCheck}\r\n          required\r\n          onChange={setPasswordCheck}\r\n        />\r\n        {passwordError && (\r\n          <span style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다</span>\r\n        )}\r\n        {signUpError && (\r\n          <span style={{ color: \"red\" }}>회원가입 실패했습니다</span>\r\n        )}\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n          loading={signUpLoading}\r\n        >\r\n          확인\r\n        </LoadingButton>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    // {/* <div className={\"container\"} ref={modalRef}>\r\n    //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n    //       <br />\r\n    //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n    //     </TextField>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-nick\">닉네임</label>\r\n    //       <br />\r\n    //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password\">비밀번호</label>\r\n    //       <br />\r\n    //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n    //       <br />\r\n    //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n    //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n    //     </div>\r\n    //     {/* <div>\r\n    //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n    //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n    //     </div> */}\r\n    //     <div style={{ marginTop: 10 }}>\r\n    //       <button>가입하기</button>\r\n    //     </div>\r\n    //     <button className={\"close\"} onClick={closeModal}>\r\n    //         X\r\n    //     </button>\r\n    //   </div> */}\r\n    // }\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Router from \"next/router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  addPost,\r\n  ADD_POST_REQUEST,\r\n  EDIT_POST_REQUEST,\r\n  GET_HASHTAGS_REQUEST,\r\n  loadPost,\r\n  TOGGLE_ADD_POST_DONE_REQUEST,\r\n  TOGGLE_EDIT_POST_DONE_REQUEST,\r\n  TOGGLE_ISEDIT_REQUEST,\r\n} from \"@/reducers/post\";\r\nimport { and } from \"sequelize\";\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype UploadProps = {\r\n  setImageIndex: any;\r\n  setuploadModalOpen: any;\r\n  uploadModalOpen: boolean;\r\n  postId: number | null;\r\n  clipboardFile: any;\r\n  uploadModalClicked: boolean;\r\n  setUploadModalClicked: any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload(props: UploadProps) {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n  const { hashtags } = useSelector((state: any) => state.post);\r\n  const { isEdit } = useSelector((state: any) => state.post);\r\n  const { editPostWithImagesDone } = useSelector((state: any) => state.post);\r\n  const { addPostError } = useSelector((state: any) => state.post);\r\n  const { editPostError } = useSelector((state: any) => state.post);\r\n  const fileInput = useRef<HTMLInputElement>(null);\r\n\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  const postInfoArray = [];\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [reason, onChangeReason, setReason] = useInput(\"\");\r\n  const [brand, onChangeBrand, setBrand] = useInput(\"\");\r\n  const [link, onChangeLink, setLink] = useInput(\"\");\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n  const { addPostLoading } = useSelector((state: any) => state.post);\r\n  const { addPostDone } = useSelector((state: any) => state.post);\r\n  const { editPostDone } = useSelector((state: any) => state.post);\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const [imageFile, setImageFile] = useState<any>(post.photos || []);\r\n  const closeModal = useCallback(() => {\r\n    props.setuploadModalOpen(false);\r\n    props.setUploadModalClicked(false);\r\n    setPost({\r\n      title: \"\",\r\n      desc: \"\",\r\n      photos: [null],\r\n    });\r\n    dispatch({\r\n      type: TOGGLE_ISEDIT_REQUEST,\r\n      data: false,\r\n    });\r\n    //저장하시겠습니까?\r\n  }, [props]);\r\n\r\n  const { title, desc, photos } = post;\r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n  const inputRef = useRef(null);\r\n  const [category, setCategory] = React.useState(\"상의\");\r\n  const [season, setSeason] = React.useState(\"23SS\");\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n  const [cardPost, setCardPost] = useState([]);\r\n  const [prevBrandName, setPrevBrandName] = useState(\"\");\r\n\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = useCallback(\r\n    (files: FileList | null) => {\r\n      let photosArr: any[] = [];\r\n      let fileArr: any[] = [];\r\n      if (files != undefined) {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          fileArr.push(file);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              // photos: [...photos, ...photosArr],\r\n              photos: photos.concat(photosArr),\r\n            });\r\n          });\r\n        }\r\n\r\n        setImageFile(imageFile.concat(fileArr));\r\n      }\r\n    },\r\n    [post, photos, imageFile]\r\n  );\r\n\r\n  const addIconClick = useCallback(() => {\r\n    if (fileInput.current) {\r\n      (fileInput.current as any).click();\r\n    }\r\n  }, [fileInput]);\r\n\r\n  const handeldelete = useCallback(\r\n    (e: React.MouseEvent<HTMLSpanElement>) => {\r\n      let target = (e.target as HTMLSpanElement).parentElement;\r\n      var index = Array.from(\r\n        ((target as HTMLDivElement).parentElement as HTMLDivElement).children\r\n      ).indexOf(target as HTMLDivElement);\r\n      let targetindex = index;\r\n      setPost({\r\n        ...post,\r\n        photos: [...photos.slice(0, index + 1), ...photos.slice(index + 2)],\r\n      });\r\n      setImageFile([...photos.slice(0, index + 1), ...photos.slice(index + 2)]);\r\n\r\n      // setImageFile( (prev) => prev.filter())\r\n\r\n      //이미지 다 없어지면 다시 업로드 창 뜨도록\r\n      if (post.photos.length == 2) {\r\n        //랜더링 되기 전이라 2\r\n        setIsImage(false);\r\n      }\r\n    },\r\n    [post, photos]\r\n  );\r\n\r\n  //clipboard\r\n  useEffect(() => {\r\n    if (!props.uploadModalClicked) {\r\n      if (props.clipboardFile) {\r\n        handfiles(props.clipboardFile);\r\n      }\r\n    }\r\n  }, [props.clipboardFile, props.uploadModalClicked, props.uploadModalOpen]);\r\n\r\n  useEffect(() => {\r\n    const handlePaste = (event: any) => {\r\n      if (event.clipboardData.files.length > 0) {\r\n        handfiles(event.clipboardData.files);\r\n      }\r\n    };\r\n    window.addEventListener(\"paste\", handlePaste);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"paste\", handlePaste);\r\n    };\r\n  }, [post]);\r\n\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(false);\r\n  }, []);\r\n\r\n  const handledrop = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      let dt = e.dataTransfer;\r\n      let files = dt?.files;\r\n      setHighlight(false);\r\n      handfiles(files);\r\n    },\r\n    [post]\r\n  );\r\n\r\n  const [hashTags, setHashTags] = React.useState({\r\n    data: [{ name: \"\" }],\r\n  });\r\n\r\n  const getHashtags = useCallback(() => {\r\n    dispatch({\r\n      type: GET_HASHTAGS_REQUEST,\r\n    });\r\n    setShowHashModalOpen(true);\r\n  }, [dispatch]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if (brand == \"\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"브랜드입력 필수\");\r\n      } else {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        //수정일 때\r\n        if (isEdit) {\r\n          //이미지 새로 올렸을 때\r\n          if (post.photos.length == 1) {\r\n            alert(\"이미지 필수\");\r\n            return;\r\n          }\r\n          const formData = new FormData();\r\n          //if first element is null\r\n          if (!imageFile[0]) imageFile.shift();\r\n\r\n          [].forEach.call(imageFile, (f) => {\r\n            //file check\r\n            const isFile = (f as any).name || null;\r\n            if (isFile) {\r\n              formData.append(\"image\", f);\r\n            } else {\r\n              formData.append(\"imagePath\", (f as any).src);\r\n            }\r\n          });\r\n\r\n          formData.append(\"postId\", props.postId?.toString() as string);\r\n          formData.append(\"brand\", brand.replaceAll(\" \", \"\"));\r\n          formData.append(\"link\", link);\r\n          formData.append(\"category\", category);\r\n          formData.append(\"season\", season);\r\n          formData.append(\"hashtag\", text);\r\n          formData.append(\"reason\", reason);\r\n          formData.append(\"name\", userName);\r\n          dispatch({\r\n            type: EDIT_POST_REQUEST,\r\n            data: formData,\r\n          });\r\n        }\r\n        //수정 아닐 떄\r\n        else {\r\n          if (!imageFile) {\r\n            alert(\"이미지 필수\");\r\n            return;\r\n          }\r\n          const formData = new FormData();\r\n          [].forEach.call(imageFile, (f) => {\r\n            formData.append(\"image\", f);\r\n          });\r\n          formData.append(\"userId\", user.id);\r\n          formData.append(\"userName\", user.userName);\r\n          formData.append(\"brand\", brand.replaceAll(\" \", \"\"));\r\n          formData.append(\"link\", link);\r\n          formData.append(\"category\", category);\r\n          formData.append(\"season\", season);\r\n          formData.append(\"hashtag\", text);\r\n          formData.append(\"reason\", reason);\r\n          dispatch(addPost(formData));\r\n        }\r\n      }\r\n    },\r\n    [\r\n      brand,\r\n      category,\r\n      season,\r\n      text,\r\n      reason,\r\n      link,\r\n      user,\r\n      dispatch,\r\n      imageFile,\r\n      post.photos,\r\n      isEdit,\r\n      props.postId,\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      dispatch({\r\n        type: TOGGLE_ADD_POST_DONE_REQUEST,\r\n      });\r\n      closeModal();\r\n    }\r\n    if (editPostDone) {\r\n      dispatch({\r\n        type: TOGGLE_EDIT_POST_DONE_REQUEST,\r\n      });\r\n      closeModal();\r\n      // props.setIsEdit(false);\r\n      dispatch({\r\n        type: TOGGLE_ISEDIT_REQUEST,\r\n        data: false,\r\n      });\r\n      if (props.setImageIndex) props.setImageIndex(0);\r\n    }\r\n    if (editPostWithImagesDone && isEdit) {\r\n      dispatch({\r\n        type: TOGGLE_EDIT_POST_DONE_REQUEST,\r\n      });\r\n      // closeModal();\r\n      // props.setIsEdit(false);\r\n\r\n      dispatch({\r\n        type: TOGGLE_ISEDIT_REQUEST,\r\n        data: false,\r\n      });\r\n\r\n      if (props.setImageIndex) props.setImageIndex(0);\r\n    }\r\n  }, [\r\n    addPostDone,\r\n    dispatch,\r\n    closeModal,\r\n    editPostDone,\r\n    isEdit,\r\n    props,\r\n    editPostWithImagesDone,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const targetPost = postArray.find(\r\n        (post: any) => post.id === props.postId\r\n      );\r\n\r\n      //카테고리, 시즌, 이름, 브랜드명 제외\r\n      let postHashtags = \"\";\r\n      if (targetPost.Hashtags.length > 4) {\r\n        for (let i = 0; i < targetPost.Hashtags.length; i++) {\r\n          const hashname = targetPost.Hashtags[i]?.name;\r\n          if(hashname != targetPost.category.toUpperCase() && \r\n             hashname != targetPost.season.toUpperCase() &&\r\n             hashname != targetPost.brand.toUpperCase() && \r\n             hashname != targetPost.name.toUpperCase())\r\n             {\r\n             postHashtags = postHashtags.concat(\r\n              `#${hashname} `\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      setCardPost(targetPost.Images);\r\n      setImageFile(targetPost.Images);\r\n      setUserName(targetPost.name);\r\n      setCategory(targetPost.category);\r\n      setSeason(targetPost.season);\r\n      setText(postHashtags);\r\n      setBrand(targetPost.brand);\r\n      setPrevBrandName(targetPost.brand);\r\n      setReason(targetPost.reason);\r\n      setLink(targetPost.link);\r\n      setIsImage(true);\r\n      setPost({\r\n        ...post,\r\n        photos: photos.concat(targetPost.Images),\r\n      });\r\n\r\n    }\r\n  }, [isEdit, postArray]);\r\n\r\n  const addDrop = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      let dt = e.dataTransfer;\r\n      let files = dt?.files;\r\n      handfiles(files);\r\n    },\r\n    [post]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {showHashModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closehashtagsModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <div\r\n              className=\"hashlistdiv\"\r\n              style={{ height: \"300px\", overflow: \"overlay\" }}\r\n            >\r\n              {hashtags &&\r\n                hashtags.map((hashtag: any, index: number) => (\r\n                  <li id=\"hashlist\" key={index} style={{ listStyle: \"none\" }}>\r\n                    {\" \"}\r\n                    #{hashtag.name}\r\n                  </li>\r\n                ))}\r\n            </div>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closehashtagsModal}\r\n            >\r\n              확인\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Modal\r\n        open={true}\r\n        // onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box\r\n          component=\"form\"\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          onSubmit={onSubmit}\r\n          sx={style}\r\n        >\r\n          {/* <form onSubmit={onSubmit}> */}\r\n          <CloseIcon\r\n            style={{\r\n              position: \"absolute\",\r\n              cursor: \"pointer\",\r\n              top: \"15px\",\r\n              right: \"15px\",\r\n            }}\r\n            onClick={closeModal}\r\n          ></CloseIcon>\r\n          <Typography sx={{ textAlign: \"center\" }} component=\"h1\" variant=\"h5\">\r\n            업로드\r\n          </Typography>\r\n          {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n          <TextField\r\n            required\r\n            label=\"브랜드\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-brand\"\r\n            type=\"text\"\r\n            value={brand}\r\n            variant=\"standard\"\r\n            onChange={onChangeBrand}\r\n          />\r\n          <TextField\r\n            label=\"Link\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={link}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeLink}\r\n          />\r\n\r\n          <TextField\r\n            label=\"선정이유\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={reason}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeReason}\r\n          />\r\n\r\n          <FormControl\r\n            sx={{ width: \"40%\", marginRight: \"10%\", marginTop: \"25px\" }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-label\">상의</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"상의\"}\r\n              value={category}\r\n              label=\"카테고리\"\r\n              required\r\n              onChange={handleCategoryChange}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl sx={{ width: \"40%\", marginTop: \"25px\" }}>\r\n            <InputLabel id=\"demo-simple-select-label\">23SS</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"23SS\"}\r\n              value={season}\r\n              label=\"시즌\"\r\n              required\r\n              onChange={handleSeasonChange}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            sx={{ marginTop: \"30px\" }}\r\n            value={text}\r\n            onChange={onChangeText}\r\n            fullWidth\r\n            label=\"해시태그입력 #검정 #반팔 \"\r\n            variant=\"outlined\"\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n          <div className=\"file-upload\" style={{ marginTop: \"10px\" }}>\r\n            <div className=\"custom-form-group\">\r\n              {!isImage && (\r\n                <div\r\n                  className={\r\n                    highlight\r\n                      ? \"custom-file-drop-area highlight\"\r\n                      : \"custom-file-drop-area\"\r\n                  }\r\n                  onDragEnter={handlehighlight}\r\n                  onDragOver={handlehighlight}\r\n                  onDragLeave={handleunhighlight}\r\n                  onDrop={handledrop}\r\n                >\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"photos\"\r\n                    placeholder=\"Enter photos\"\r\n                    multiple={false}\r\n                    id=\"filephotos\"\r\n                    onChange={handlefilechange}\r\n                  />\r\n                  <label htmlFor=\"filephotos\">\r\n                    이미지를 드래그해서 넣어주세요\r\n                  </label>\r\n                </div>\r\n              )}\r\n              <div\r\n                className=\"custom-file-preview\"\r\n                onDragEnter={handlehighlight}\r\n                onDragOver={handlehighlight}\r\n                onDragLeave={handleunhighlight}\r\n                onDrop={addDrop}\r\n              >\r\n                {photos.length > 0 &&\r\n                  photos.map((item: any, index) =>\r\n                    index != 0 ? (\r\n                      <div className=\"prev-img\" key={index}>\r\n                        <span onClick={handeldelete}>&times;</span>\r\n                        {item && <img src={item.src} alt={item.name} />}\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )\r\n                  )}\r\n                {isImage ? (\r\n                  <>\r\n                    <AddIcon\r\n                      onClick={addIconClick}\r\n                      sx={{ marginLeft: \"54px\", marginTop: \"39px\" }}\r\n                    />\r\n                    <input\r\n                      type=\"file\"\r\n                      style={{ visibility: \"hidden\" }}\r\n                      name=\"photos\"\r\n                      placeholder=\"Enter photos\"\r\n                      multiple={false}\r\n                      id=\"filephotos\"\r\n                      onChange={handlefilechange}\r\n                      ref={fileInput}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {addPostError && (\r\n            <span style={{ color: \"red\" }}>업로드 실패했습니다</span>\r\n          )}\r\n          {editPostDone && (\r\n            <span style={{ color: \"red\" }}>업로드 실패했습니다</span>\r\n          )}\r\n          <button\r\n            id=\"submit_bt\"\r\n            style={{ display: \"none\" }}\r\n            type=\"submit\"\r\n          ></button>\r\n          <LoadingButton\r\n            type=\"submit\"\r\n            loading={addPostLoading}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            size=\"large\"\r\n            // loading={true}\r\n          >\r\n            확인\r\n          </LoadingButton>\r\n          {/* </form> */}\r\n        </Box>\r\n        {/* <Button onClick={closeModal}>닫기</Button> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport {useEffect, useState, useRef, useCallback} from 'react';\r\nimport {\r\n  GET_USER_LIKED_POST_REQUEST,\r\n  GET_USER_POST_REQUEST, POST_SORT_REQUEST, TOGGLE_SCROLL_REQUEST,\r\n} from \"@/reducers/post\";\r\ntype UserPageProps = {};\r\n\r\nexport default function UserPage({}: UserPageProps) {\r\n  const {postArray} = useSelector((state: any) => state.post);\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const loadUserPost = useCallback(() => {\r\n    dispatch({\r\n      type: GET_USER_POST_REQUEST,\r\n      data: null,\r\n    });\r\n    setIsLiked(false);\r\n  }, []);\r\n\r\n  const likedSorting = useCallback(() => {\r\n    var sortedArray = [...postArray];\r\n    sortedArray.sort(function(a:any,b:any){\r\n      return  b.Likers.length- a.Likers.length \r\n    })\r\n    dispatch({\r\n      type: POST_SORT_REQUEST,\r\n      data: sortedArray,\r\n    });\r\n  }, [postArray, user]);\r\n  \r\n  const dateSorting = useCallback(() => {\r\n    var sortedArray = [...postArray];\r\n    sortedArray.sort(function(a:any,b:any){\r\n      return a.createdAt - b.createdAt\r\n    })\r\n    dispatch({\r\n      type: POST_SORT_REQUEST,\r\n      data: sortedArray,\r\n    });\r\n  }, [postArray, user]);\r\n\r\n\r\n  \r\n  const loadUserLikedPost = useCallback(() => {\r\n    setIsLiked(true);\r\n\r\n    dispatch({\r\n      type:GET_USER_LIKED_POST_REQUEST\r\n    })\r\n\r\n  }, [postArray, user]);\r\n\r\n  useEffect(()=>{\r\n\r\n    console.log(postArray)\r\n  },[postArray])\r\n\r\n  return (\r\n    <>\r\n    <Stack spacing={2} direction=\"row\">\r\n        <Button disabled style={{marginTop:\"-20px\", fontWeight: 900}}>{user.data.name}님의 페이지</Button>\r\n    </Stack>\r\n      <Stack spacing={2} direction=\"row\">\r\n        <Button variant=\"text\" style={{fontWeight: 900}} onClick={loadUserPost}> 작성한 게시물</Button>\r\n        <Button variant=\"text\" style={{fontWeight: 900}} onClick={loadUserLikedPost}> 좋아요 누른 게시물</Button>\r\n        <Button variant=\"outlined\" size=\"small\" style={{position:\"absolute\", right:\"18%\",fontWeight: 900}} onClick={dateSorting}> 최신 순</Button>\r\n        <Button variant=\"outlined\" size=\"small\" style={{position:\"absolute\", right:\"12%\", fontWeight: 900}}onClick={likedSorting}> 좋아요 순 </Button>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios, { AxiosHeaders } from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport {\n  initialState as postinitialState,\n  LOAD_POST_REQUEST,\n  RELOAD_POST_REQUEST,\n  GET_USER_POST_REQUEST,\n} from \"@/reducers/post\";\nimport { initialState as userinitialState } from \"@/reducers/user\";\nimport React, { useCallback, useState, useEffect, useMemo } from \"react\";\nimport { loadPost } from \"@/reducers/post\";\nimport { loadUser } from \"@/reducers/user\";\nimport { useDispatch } from \"react-redux\";\nimport wrapper from \"@/store/configureStore\";\nimport { END } from \"redux-saga\";\nimport userpage from \"./userpage\";\nimport NoticeModal from \"@/Components/NoticeModal\";\nimport UserPage from \"@/Components/UserPage\";\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie: any = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch(loadPost());\n    context.store.dispatch(loadUser());\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default function Home() {\n  // const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  const { user } = useSelector((state: any) => state.user);\n  const { loadPostLoading } = useSelector((state: any) => state.post);\n  const { onInfiniteScroll } = useSelector((state: any) => state.post);\n  const { hasMorePost } = useSelector((state: any) => state.post);\n  const { postArray } = useSelector((state: any) => state.post);\n  const dispatch = useDispatch();\n  const [isUserpage, setIsUserpage] = useState(false);\n\n  useEffect(() => {\n    function onScroll() {\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 350\n      ) {\n        if (hasMorePost && !loadPostLoading && onInfiniteScroll) {\n          const lastId = postArray[postArray.length - 1].id;\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data: lastId,\n          });\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePost, loadPostLoading, dispatch, postArray, onInfiniteScroll]);\n\n  const loadPosts = useCallback(() => {\n    dispatch({\n      type: RELOAD_POST_REQUEST,\n    });\n    dispatch(loadPost());\n    setIsUserpage(false);\n  }, [dispatch]);\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n\n      <NoticeModal />\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPosts}>\n          <h1 id=\"title\" style={{ cursor: \"pointer\" }}>\n            CRUMP REFERENCE\n          </h1>\n        </a>\n        <div style={{ marginBottom: \"40px\" }}>\n          <Navbar setIsUserpage={setIsUserpage} />\n        </div>\n        <div style={{marginBottom :\"10px\"}}>\n          {isUserpage && <UserPage/>}\n        </div>\n        <ResponsiveGrid setIsUserpage={setIsUserpage}/>\n        {/* <div>\n          <Stack spacing={2} sx={{alignItems:\"center\", marginTop:\"30px\", marginBottom:\"50px\"}}>\n            <Pagination page={page} count={count} color=\"primary\" onChange={handleChange}/>\n          </Stack>\n        </div> */}\n        {loadPostLoading && (\n          <div id=\"bottomloading\">\n            <span style={{ fontSize: \"240%\" }}> 로딩중...</span>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","module.exports = require(\"@mui/icons-material/AccountCircle\");","module.exports = require(\"@mui/icons-material/Add\");","module.exports = require(\"@mui/icons-material/ArrowLeft\");","module.exports = require(\"@mui/icons-material/ArrowRight\");","module.exports = require(\"@mui/icons-material/Brightness1Rounded\");","module.exports = require(\"@mui/icons-material/Close\");","module.exports = require(\"@mui/icons-material/Delete\");","module.exports = require(\"@mui/icons-material/Edit\");","module.exports = require(\"@mui/icons-material/Favorite\");","module.exports = require(\"@mui/icons-material/FavoriteBorderTwoTone\");","module.exports = require(\"@mui/icons-material/FileCopy\");","module.exports = require(\"@mui/icons-material/MoreVert\");","module.exports = require(\"@mui/icons-material/Search\");","module.exports = require(\"@mui/lab\");","module.exports = require(\"@mui/lab/LoadingButton\");","module.exports = require(\"@mui/material\");","module.exports = require(\"@mui/material/AppBar\");","module.exports = require(\"@mui/material/Box\");","module.exports = require(\"@mui/material/Button\");","module.exports = require(\"@mui/material/Card\");","module.exports = require(\"@mui/material/CardContent\");","module.exports = require(\"@mui/material/CardMedia\");","module.exports = require(\"@mui/material/FormControl\");","module.exports = require(\"@mui/material/Grid\");","module.exports = require(\"@mui/material/IconButton\");","module.exports = require(\"@mui/material/InputLabel\");","module.exports = require(\"@mui/material/Menu\");","module.exports = require(\"@mui/material/MenuItem\");","module.exports = require(\"@mui/material/Modal\");","module.exports = require(\"@mui/material/Paper\");","module.exports = require(\"@mui/material/Select\");","module.exports = require(\"@mui/material/Stack\");","module.exports = require(\"@mui/material/TextField\");","module.exports = require(\"@mui/material/Toolbar\");","module.exports = require(\"@mui/material/Typography\");","module.exports = require(\"@mui/material/styles\");","module.exports = require(\"next-redux-wrapper\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"react/jsx-runtime\");","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"redux-saga/effects\");","module.exports = import(\"@redux-saga/core\");;","module.exports = import(\"axios\");;","module.exports = import(\"immer\");;","module.exports = import(\"redux-saga\");;"],"names":["React","Card","experimentalStyled","styled","CardContent","CardMedia","Typography","DeleteIcon","EditIcon","Button","CardActionArea","CardActions","useCallback","useEffect","useState","Modal","Box","FileCopyIcon","ArrowRightIcon","ArrowLeftIcon","Brightness1RoundedIcon","FavoriteIcon","useSelector","useDispatch","DELETE_POST_REQUEST","DUPLICATE_POST_REQUEST","HASHTAG_SEARCH_REQUEST","LIKE_POST_REQUEST","TOGGLE_ISEDIT_REQUEST","UNLIKE_POST_REQUEST","FavoriteBorderTwoToneIcon","LoginForm","Upload","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","StyledCardAction","Cardpost","props","logInDone","state","user","postArray","post","dispatch","uploadModalClicked","setUploadModalClicked","like","setLike","isEdit","likeClick","setLikeClick","likers","length","loginModalOpen","setIsLoginFormOpen","isUploadFormOpen","setIsUploadFormOpen","imageIndex","setImageIndex","modalOpen","setModalOpen","ImagePath","setImagePath","closeModal","onToggleLike","prev","type","data","id","alert","delClick","duplicateClick","onSubmit","e","preventDefault","stopPropagation","editClick","Images","undefined","src","onClickRightArrow","onClickLeftArrow","TagClick","hashname","hashtags","setIsUserpage","window","scrollTo","behavior","isUserLiked","find","v","setuploadModalOpen","uploadModalOpen","postId","clipboardFile","setloginModalOpen","open","onClose","aria-labelledby","aria-describedby","component","noValidate","autoComplete","sx","variant","textAlign","marginBottom","mt","mb","marginLeft","marginRight","size","fullWidth","onClick","maxWidth","marginTop","href","link","target","height","image","right","zIndex","color","cursor","div","display","opacity","span","fontWeight","fontSize","brand","reason","verticalAlign","float","map","hashtag","index","margin","className","PostHashtag","HashtagId","name","a","useInput","LoadingButton","TextField","TOGGLE_LOGIN_DONE","loginRequestAction","isInitialOpen","setIsInitialOpen","logInLoading","logInError","email","onChangeEmail","password","onChangePassword","onSubmitForm","event","label","value","required","onChange","loading","AppBar","Toolbar","IconButton","MenuItem","Menu","AddIcon","AccountCircle","MoreIcon","Signup","logoutRequestAction","Searchbar","GET_HASHTAGS_REQUEST","GET_USER_POST_REQUEST","TOGGLE_SCROLL_REQUEST","background","padding","modalstyle","Navbar","logOutLoading","setClipboardFile","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isModalOpen","setIsModalOpen","showHashModalOpen","setShowHashModalOpen","closehashtagsModal","showModal","showLoginModal","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","Logout","uploadClick","handleMobileMenuOpen","onReady","getHashtags","profileClick","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","flexGrow","overflow","li","listStyle","backgroundColor","whiteSpace","noWrap","xs","sm","md","edge","aria-label","aria-haspopup","aria-controls","useRef","NoticeModal","onChangeValue","searchBar","closeNoticeModal","now","Date","date","getDate","h1","h2","ol","br","Paper","Grid","Item","theme","palette","mode","typography","body2","spacing","text","secondary","ResponsiveGrid","container","columns","item","lg","Likers","category","season","Hashtags","SearchIcon","loadPost","setValue","current","focus","TagSearch","split","upperCaseValue","toUpperCase","form","flex","fill","placeholder","inputRef","TOGGLE_SIGNUP_DONE","signupRequestAction","signUpLoading","signUpDone","signUpError","emailError","setEmailError","onChangeName","passwordCheck","setPasswordCheck","passwordError","setPasswordError","nameError","setNameError","onChangePasswordCheck","checkEmail","res","check","test","replace","console","log","FormControl","InputLabel","CloseIcon","Select","addPost","EDIT_POST_REQUEST","TOGGLE_ADD_POST_DONE_REQUEST","TOGGLE_EDIT_POST_DONE_REQUEST","fileTypes","editPostWithImagesDone","addPostError","editPostError","fileInput","file","setFile","postInfoArray","isImage","setIsImage","highlight","setHighlight","userName","setUserName","onChangeReason","setReason","onChangeBrand","setBrand","onChangeLink","setLink","addPostLoading","addPostDone","editPostDone","setPost","title","desc","photos","imageFile","setImageFile","setCategory","setSeason","onChangeText","setText","cardPost","setCardPost","prevBrandName","setPrevBrandName","handleCategoryChange","handleSeasonChange","handlefilechange","files","handfiles","photosArr","fileArr","i","push","reader","FileReader","readAsDataURL","addEventListener","fileobj","result","concat","addIconClick","click","handeldelete","parentElement","Array","from","children","indexOf","targetindex","slice","handlePaste","clipboardData","removeEventListener","handlehighlight","handleunhighlight","handledrop","dt","dataTransfer","hashTags","setHashTags","formData","FormData","shift","forEach","call","f","isFile","append","toString","replaceAll","targetPost","postHashtags","addDrop","labelId","defaultValue","onDragEnter","onDragOver","onDragLeave","onDrop","input","multiple","htmlFor","img","alt","visibility","ref","button","Stack","GET_USER_LIKED_POST_REQUEST","POST_SORT_REQUEST","UserPage","isLiked","setIsLiked","loadUserPost","likedSorting","sortedArray","sort","b","dateSorting","createdAt","loadUserLikedPost","direction","disabled","initValue","setter","handler","Head","axios","LOAD_POST_REQUEST","RELOAD_POST_REQUEST","loadUser","wrapper","END","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise","Home","loadPostLoading","onInfiniteScroll","hasMorePost","isUserpage","onScroll","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","loadPosts","meta","content"],"sourceRoot":""}