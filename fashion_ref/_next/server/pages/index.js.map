{"version":3,"file":"../pages/index.js","mappings":"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","sources":["webpack://fashion_ref/./Components/AlignItemsList.tsx","webpack://fashion_ref/./Components/LoginForm.tsx","webpack://fashion_ref/./Components/Navbar.tsx","webpack://fashion_ref/./Components/ResponsiveGrid.tsx","webpack://fashion_ref/./Components/signup.tsx","webpack://fashion_ref/./Components/upload.tsx","webpack://fashion_ref/./hooks/useInput.ts","webpack://fashion_ref/./pages/index.tsx","webpack://fashion_ref/external commonjs \"@mui/icons-material/AccountCircle\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Add\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Delete\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Edit\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/FavoriteBorder\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/FileCopy\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/MoreVert\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Search\"","webpack://fashion_ref/external commonjs \"@mui/material\"","webpack://fashion_ref/external commonjs \"@mui/material/AppBar\"","webpack://fashion_ref/external commonjs \"@mui/material/Box\"","webpack://fashion_ref/external commonjs \"@mui/material/Button\"","webpack://fashion_ref/external commonjs \"@mui/material/Card\"","webpack://fashion_ref/external commonjs \"@mui/material/CardContent\"","webpack://fashion_ref/external commonjs \"@mui/material/CardMedia\"","webpack://fashion_ref/external commonjs \"@mui/material/FormControl\"","webpack://fashion_ref/external commonjs \"@mui/material/Grid\"","webpack://fashion_ref/external commonjs \"@mui/material/IconButton\"","webpack://fashion_ref/external commonjs \"@mui/material/InputBase\"","webpack://fashion_ref/external commonjs \"@mui/material/InputLabel\"","webpack://fashion_ref/external commonjs \"@mui/material/Menu\"","webpack://fashion_ref/external commonjs \"@mui/material/MenuItem\"","webpack://fashion_ref/external commonjs \"@mui/material/Modal\"","webpack://fashion_ref/external commonjs \"@mui/material/Paper\"","webpack://fashion_ref/external commonjs \"@mui/material/Select\"","webpack://fashion_ref/external commonjs \"@mui/material/TextField\"","webpack://fashion_ref/external commonjs \"@mui/material/Toolbar\"","webpack://fashion_ref/external commonjs \"@mui/material/Typography\"","webpack://fashion_ref/external commonjs \"@mui/material/styles\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/amp-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/amp-mode.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/head-manager-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-blur-svg.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-config-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-config.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-loader\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/side-effect.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/utils/warn-once.js\"","webpack://fashion_ref/external commonjs \"next/head\"","webpack://fashion_ref/external commonjs \"react\"","webpack://fashion_ref/external commonjs \"react/jsx-runtime\"","webpack://fashion_ref/external module \"axios\""],"sourcesContent":["import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\n\r\ntype AlignItemsListProps = {\r\n  category: string;\r\n  brand: string;\r\n  link: string;\r\n  Images: [{\r\n    src :string,\r\n  }\r\n  ];\r\n  season: string;\r\n  reason: string;\r\n  hashtags: any[];\r\n  id: number;\r\n  setPost: any;\r\n  posts: any[];\r\n  index: number;\r\n  name: string;\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nconst category = {\r\n  상의: 1,\r\n  하의: 2,\r\n  아우터: 3,\r\n  디테일: 4,\r\n  이미지: 5,\r\n  악세사리: 6,\r\n};\r\n\r\nconst season = {\r\n  \"23SS\": 7,\r\n  \"23FW\": 8,\r\n};\r\nexport default function AlignItemsList(props: AlignItemsListProps) {\r\n  const [category, setCategory] = useState(\"\");\r\n  const [season, setSeason] = useState(\"\");\r\n\r\n  const HASHAPI = `${process.env.NEXT_PUBLIC_API}/hashtagsearch`;\r\n  const DELAPI = `${process.env.NEXT_PUBLIC_API}/deletpost/${props.id}`;\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [ImagePath, setImagePath] = React.useState(\"\");\r\n  \r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n  const delClick = useCallback(() => {\r\n    if(props.isLoggedIn)\r\n    {\r\n      setModalOpen(true)\r\n    }\r\n    else{\r\n      alert(\"로그인 해주세요\")\r\n    }\r\n    // if (props.isLoggedIn) {\r\n    //   axios\r\n    //     .post(DELAPI, {})\r\n    //     .then((result) => {\r\n    //       const Posts = props.posts.filter((post) => post.id !== props.id);\r\n    //       props.setPost(Posts);\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.log(err);\r\n    //     });\r\n    // } else {\r\n    //   //로그인 모달 띄우기\r\n    //   alert(\"로그인 해주세요\");\r\n    // }\r\n  }, [DELAPI, props]);\r\n\r\n  const copyClick = useCallback(()=>{\r\n\r\n    alert(\"준비중입니다.\")\r\n  },[])\r\n\r\n\r\n  const onSubmit = useCallback((e:any)=>{\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    if (props.isLoggedIn) {\r\n      axios\r\n        .post(DELAPI, {})\r\n        .then((result) => {\r\n          const Posts = props.posts.filter((post) => post.id !== props.id);\r\n          props.setPost(Posts);\r\n          setModalOpen(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"버그 발생!\")\r\n        });\r\n    } else {\r\n      //로그인 모달 띄우기\r\n      alert(\"로그인 해주세요\");\r\n    }\r\n  },[props.isLoggedIn, props.posts])\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const editClick = useCallback(() => {\r\n    alert(\"만드는 중입니다..\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCategory(props.category);\r\n    setSeason(\"23SS\");\r\n    if(props.Images[0] == undefined){\r\n\r\n    }\r\n    else{\r\n      // console.log(\"props\")\r\n      // console.log(props)\r\n      setImagePath(`../${props.Images[0].src}`)\r\n    }\r\n  }, [props.category,props.Images]);\r\n\r\n  const TagClick = React.useCallback((e: any, hashname: string) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    axios\r\n      .post(\r\n        HASHAPI,\r\n        {\r\n          hashtags: \"#\" + hashname,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            // 'Accept': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then((result) => {\r\n        props.setPost(result.data);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    { modalOpen && \r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h2\" variant=\"h5\" sx={{ textAlign: \"center\", marginBottom:\"15px\" }}>\r\n          정말 삭제하시겠습니까?\r\n        </Typography>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2, width:\"40%\", marginLeft:\"5%\", marginRight:\"10%\" }}\r\n          size=\"large\"\r\n        >\r\n          삭제\r\n        </Button>\r\n        \r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2, width:\"40%\" }}\r\n          size=\"large\"\r\n          onClick={closeModal}\r\n        >\r\n          취소\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    }\r\n    <Card\r\n      sx={{\r\n        maxWidth: \"15\",\r\n        marginTop: \"20px\",\r\n        // borderRadius: \"24px\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <CardActionArea href={`${props.link}`} target=\"_blank\">\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"400\"\r\n          image={ImagePath}\r\n          alt=\"이미지 오류, 삭제 후 다시 등록해주세요\"\r\n        />\r\n        <CardContent>\r\n          <Typography>\r\n            <span\r\n              style={{ fontWeight: 900, fontSize: \"130%\", marginBottom: \"4%\" }}\r\n            >\r\n              {props.name[0]}_{`${props.brand}`}\r\n            </span>\r\n          </Typography>\r\n\r\n          {/* <span style={{fontWeight :900, fontSize: \"100%\", marginBottom: 5}}>\r\n            참고할 부분\r\n          </span> */}\r\n          <Typography\r\n            sx={{ fontWeight: 900, marginBottom: \"1%\" }}\r\n            variant=\"subtitle2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            참고할 부분\r\n          </Typography>\r\n\r\n          <Typography\r\n            sx={{ marginBottom: \"1%\" }}\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <div style={{ width: \"100%\", display:\"inline-block\", marginBottom:\"5px\"}}>\r\n          <div style={{ width: \"20%\", marginBottom: \"3%\", verticalAlign:\"center\" , display:\"inline-block\"}}>\r\n            <FavoriteBorderIcon onClick={() => alert(\"준비중입니다\")}  sx={{opacity:\"40%\"}}/>\r\n            <span style={{position:\"relative\", top:\"-7px\", marginLeft:\"5px\", color:\"#A6A6A6\"}}>0</span>\r\n          </div>\r\n          <div style={{ width: \"60%\", marginBottom: \"3%\", display:\"inline-block\", float:\"right\"}}>\r\n            <DeleteIcon id=\"delicon\" onClick={delClick} sx={{marginRight:\"10px\", opacity:\"40%\", float:\"right\"}}/>\r\n            <EditIcon id=\"editicon\" onClick={editClick} sx={{marginRight:\"10px\", opacity:\"40%\", float:\"right\"}}/>\r\n            <FileCopyIcon id=\"copyicon\" onClick={copyClick} sx={{marginRight:\"10px\", opacity:\"40%\", float:\"right\"}}/>\r\n          </div>\r\n        </div>\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n        {/* <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${parseInt(props.season) % 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`TagCategory Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div> */}\r\n        {props.hashtags.map((hashtag, index) => (\r\n          <div style={{ margin: \"2px\" }} key={index}>\r\n            <div\r\n              className={`Tag${\r\n                parseInt(hashtag.PostHashtag.HashtagId) % 8\r\n              } Tag`}\r\n              style={{ display: \"inline-block\", margin: \"2px\" }}\r\n              onClick={(e) => {\r\n                TagClick(e, hashtag.name);\r\n              }}\r\n            >\r\n              <a href=\"\">#{hashtag.name}</a>\r\n            </div>{\" \"}\r\n            &nbsp;\r\n          </div>\r\n        ))}\r\n      </CardActions>\r\n    </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  setIsLoggedIn: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function LoginForm({\r\n  setIsLoggedIn,\r\n  setloginModalOpen,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: LoginFormProps): ReactElement {\r\n  const API = `${process.env.NEXT_PUBLIC_API}/login`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [User, setUser] = useState({\r\n    id: 0,\r\n    name: null,\r\n  });\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback(\r\n    (event: any) => {\r\n      event.preventDefault();\r\n      if(email == \"\"){\r\n        alert(\"이메일을 입력해주세요\")\r\n      }\r\n      else if(password == \"\"){\r\n        alert(\"비밀번호를 입력해주세요\")\r\n      }\r\n      else{\r\n        axios\r\n        .post(\r\n          API,\r\n          // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n          // 회원가입창에서 클라이언트가 입력하는 데이터\r\n          {\r\n            email: email,\r\n            password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // 'Accept': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        .then((result) => {\r\n          setUser(result.data.data);\r\n          setIsLoggedIn(true);\r\n          setUserId(result.data.data.id);\r\n          setUserName(result.data.data.name);\r\n          console.log(result.data.data)\r\n          // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n          // history.replace('/login');\r\n        })\r\n        .catch((error) => {\r\n          alert(\"로그인 정보가 일치하지 않습니다.\");\r\n          console.log(error);\r\n        });\r\n      }\r\n      \r\n    },\r\n    [email, password, setIsLoggedIn]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          로그인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement, useRef } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\n// import { useNavigate  } from 'react-router-dom'; // 설치한 패키지\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/signup\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Upload from \"@/Components/upload\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nconst inter = Inter({ subsets: [\"latin\"] });\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(\"#F8F8F8\", 0.73),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(\"#F8F8F8\", 0.33),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n    height: \"40%\",\r\n  },\r\n}));\r\n\r\ntype NavbarProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\n\r\nexport default function Navbar({\r\n  isLoggedIn,\r\n  setIsLoggedIn,\r\n  setPost,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName\r\n}: NavbarProps): ReactElement {\r\n  // const navigate = useNavigate();\r\n  const HASHAPI = `${process.env.NEXT_PUBLIC_API}/hashtagsearch`;\r\n  const GETHASHAPI = `${process.env.NEXT_PUBLIC_API}/getHash`;\r\n  const API = `${process.env.NEXT_PUBLIC_API}/loadpost`;\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n  const [hashTags, setHashTags] = React.useState({\r\n    data :[\r\n      {name : \"\"},\r\n    ]\r\n  });\r\n\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n  \r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchBar.current) {\r\n      searchBar.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  const showModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const showUploadModal = () => {\r\n    setuploadModalOpen(true);\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    const LOGOUTAPI = `${process.env.NEXT_PUBLIC_API}/logout`;\r\n    axios\r\n      .get(LOGOUTAPI)\r\n      .then((result) => {\r\n        if (result.data.message == \"ok\") setIsLoggedIn(false);\r\n        setloginModalOpen(false);\r\n      })\r\n      .catch((err) => {alert(\"서버와 연결 끊겼네요. 새로고침.!\")});\r\n  }, [setIsLoggedIn]);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (isLoggedIn) {\r\n      setuploadModalOpen(true);\r\n    } else {\r\n      setloginModalOpen(true);\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onReady = useCallback(()=>{alert(\"준비중입니다.\")},[])\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      // e.preventDeafult();\r\n      // e.stopPropagation();\r\n      if (value == \"\") {\r\n        axios\r\n          .get(API)\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n          });\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        let upperCaseValue = value.toUpperCase();\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        axios\r\n          .post(\r\n            HASHAPI,\r\n            {\r\n              hashtags: upperCaseValue,\r\n              category: category,\r\n              season: season,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n            console.log(error);\r\n          });\r\n      }\r\n    },\r\n    [value, setPost, category, season]\r\n  );\r\n\r\n  const getHashtags = useCallback(()=>{\r\n    axios\r\n    .get(GETHASHAPI)\r\n    .then((result) => {\r\n      setShowHashModalOpen(true);\r\n      setHashTags(result)\r\n      // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n      // history.replace('/login');\r\n    })\r\n    .catch((error) => {\r\n      alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n    });\r\n  },[])\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <p>만드는 중입니다</p>\r\n      </MenuItem>\r\n      {/* <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>프로필</p>\r\n      </MenuItem> */}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {!isLoggedIn && modalOpen && (\r\n        <Signup setIsLoggedIn={setIsLoggedIn} setModalOpen={setModalOpen} \r\n        userId = {userId}\r\n        setUserId = {setUserId}\r\n        userName= {userName}\r\n        setUserName = {setUserName}/>\r\n      )}\r\n      {isLoggedIn && uploadModalOpen && (\r\n        <Upload setuploadModalOpen={setuploadModalOpen} \r\n        userId = {userId}\r\n        setUserId = {setUserId}\r\n        userName= {userName}\r\n        setUserName = {setUserName}/>\r\n      )}\r\n      {!isLoggedIn && loginModalOpen && (\r\n        <LoginForm\r\n          setIsLoggedIn={setIsLoggedIn}\r\n          setloginModalOpen={setloginModalOpen}\r\n          userId = {userId}\r\n          setUserId = {setUserId}\r\n          userName= {userName}\r\n          setUserName = {setUserName}\r\n        />\r\n      )}\r\n      {showHashModalOpen && <Modal\r\n      open={true}\r\n      onClose={closehashtagsModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        sx={modalstyle}\r\n      >\r\n      <div style={{height:\"300px\", overflow : \"overlay\"}}>\r\n      {hashTags.data.map((hashtag, index)=> (\r\n        <li key={index} style={{listStyle: \"none\"}}> #{hashtag.name}</li>\r\n      ))}\r\n      </div>\r\n        \r\n      <Button\r\n        fullWidth\r\n        variant=\"contained\"\r\n        sx={{ mt: 3, mb: 2}}\r\n        size=\"large\"\r\n        onClick={closehashtagsModal}\r\n      >\r\n        확인\r\n      </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n\r\n      }\r\n      \r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          {/* <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n            onClick={reloadPost}\r\n          >\r\n            <HomeIcon color=\"disabled\" />\r\n          </IconButton> */}\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            {/* <p>검색할 태그</p> */}\r\n          </Typography>\r\n          {/* <Search>\r\n            <StyledInputBase\r\n              onChange={(event) => {\r\n                setValue(event.target.value);\r\n              }}\r\n              placeholder=\"태그 입력\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyPress={(event) => {\r\n                if (event.which == 32) alert(value);\r\n              }}\r\n            />\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n          </Search> */}\r\n          {/* <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">\r\n              카테고리\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              required\r\n              value={category}\r\n              label=\"category\"\r\n              onChange={onChangeCategory}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"25px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">시즌</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              value={season}\r\n              label=\"season\"\r\n              required\r\n              onChange={onChangeSeason}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl> */}\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n          <form\r\n            onSubmit={TagSearch}\r\n            style={{ width: \"70%\", flex: \"auto\", marginLeft: \"15%\" }}\r\n          >\r\n            <IconButton\r\n              type=\"submit\"\r\n              aria-label=\"search\"\r\n              sx={{ display: { xs: \"none\", md: \"inline-block\" } }}\r\n            >\r\n              <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n            </IconButton>\r\n            <TextField\r\n              id=\"search-bar\"\r\n              className=\"text\"\r\n              sx={{ display: \"inline-block\", width: \"80%\" }}\r\n              value={value}\r\n              onChange={onChangeValue}\r\n              label=\"#상의 #검정\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Search...\"\r\n              size=\"small\"\r\n              inputRef={searchBar}\r\n            />\r\n          </form>\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={0} color=\"error\"></Badge>\r\n            </IconButton> */}\r\n            <>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                sx={{ marginRight: \"10px\" }}\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"false\"\r\n                color=\"primary\"\r\n                onClick={uploadClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </>\r\n            {!isLoggedIn ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"100%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                    whiteSpace: \"nowrap\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={Logout}\r\n                >\r\n                  로그아웃\r\n                </Button>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                  onClick={onReady}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" }, float: \"right\" }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { useCallback, useEffect,useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport AlignItemsList from \"./AlignItemsList\";\r\nimport Grid from '@mui/material/Grid';\r\nimport { useInput } from '@mui/base';\r\nimport axios from 'axios';\r\nimport Image from \"next/image\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\ntype ResponsiveGridProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n  posts : any[];\r\n};\r\n\r\nexport default function ResponsiveGrid({ setIsLoggedIn, isLoggedIn, setPost, posts }: ResponsiveGridProps) {\r\n  const [Imagesrc, setImagesrc] = useState(\"\");\r\n  useEffect(()=>{\r\n  },[])\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n        {posts.map((post, index) => (\r\n          <Grid item xs={6} sm={4} md={3} lg ={4} key={index}>\r\n            <Item>\r\n            <li\r\n              style={{\r\n                maxWidth: \"320px\",\r\n                display: \"inline-block\",\r\n                // marginRight: \"4%\",\r\n                // marginLeft: \"1%\",\r\n                // marginTop: \"1%\",-\r\n              }}\r\n            >\r\n            <AlignItemsList isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} name={post.name} index={index} setPost={setPost} posts={posts} id={post.id} category={post.category} brand={post.brand} Images={post.Images}link={post.link} season={post.season} hashtags ={post.Hashtags} reason ={post.reason}/> </li>\r\n            </Item>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { color } from \"@mui/system\";\r\n\r\ntype SignupProps = {\r\n  setModalOpen: any;\r\n  setIsLoggedIn: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({\r\n  setIsLoggedIn,\r\n  setModalOpen,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: SignupProps): ReactElement {\r\n  const API = `${process.env.NEXT_PUBLIC_API}/signups`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password, setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email: any) => {\r\n    let res = false;\r\n\r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n\r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (password !== passwordCheck) {\r\n        setPasswordError(true);\r\n      } else if (!checkEmail(email)) {\r\n        setEmailError(true);\r\n      } else {\r\n        axios\r\n          .post(\r\n            API,\r\n            // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n            // 회원가입창에서 클라이언트가 입력하는 데이터\r\n            {\r\n              email: email,\r\n              name: nickname,\r\n              password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          // 그러면 서버에서 클라이언트로 response(응답)으로\r\n          // {ok: true} 아니면 {ok: false}가 온다.\r\n          // .then((response) => {\r\n          //   console.log(response); // response.data로 해야?\r\n          // })\r\n          .then((result) => {\r\n            setIsLoggedIn(true);\r\n            setUserId(result.data.userId);\r\n            setUserName(result.data.userName);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.data.message == \"already exist\") {\r\n              alert(\"이미 존재하는 이메일입니다.\");\r\n            } else {\r\n              alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n            }\r\n          });\r\n      }\r\n      // if (!term) {\r\n      //   return setTermError(true);\r\n      // }\r\n    },\r\n    [email, password, passwordCheck, setIsLoggedIn, nickname]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\" sx={{ textAlign: \"center\" }}>\r\n          회원가입\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          // error={checkEmail(email)}\r\n          onChange={onChangeEmail}\r\n        />\r\n        {emailError && (\r\n          <span style={{ color: \"red\" }}>Email 형식이 잘못되었습니다</span>\r\n        )}\r\n        <TextField\r\n          label=\"이름\"\r\n          name=\"user-nick\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          onChange={onChangeNickname}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          fullWidth\r\n          name=\"user-password\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={password}\r\n          required\r\n          onChange={onChangePassword}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호체크\"\r\n          fullWidth\r\n          name=\"user-password-check\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={passwordCheck}\r\n          required\r\n          onChange={setPasswordCheck}\r\n        />\r\n        {passwordError && (\r\n          <span style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다</span>\r\n        )}\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    // {/* <div className={\"container\"} ref={modalRef}>\r\n    //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n    //       <br />\r\n    //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n    //     </TextField>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-nick\">닉네임</label>\r\n    //       <br />\r\n    //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password\">비밀번호</label>\r\n    //       <br />\r\n    //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n    //       <br />\r\n    //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n    //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n    //     </div>\r\n    //     {/* <div>\r\n    //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n    //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n    //     </div> */}\r\n    //     <div style={{ marginTop: 10 }}>\r\n    //       <button>가입하기</button>\r\n    //     </div>\r\n    //     <button className={\"close\"} onClick={closeModal}>\r\n    //         X\r\n    //     </button>\r\n    //   </div> */}\r\n    // }\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nimport Router from \"next/router\";\r\n\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype UploadProps = {\r\n  setuploadModalOpen: any;\r\n  userId: string;\r\n  setUserId: any;\r\n  userName: string;\r\n  setUserName: any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload(props: UploadProps) {\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  const button = useRef();\r\n  // const handleChange = (file: any) => {\r\n  //   setFile(file);\r\n  //   console.log(file);\r\n  // };\r\n  const API = `${process.env.NEXT_PUBLIC_API}/uploads`;\r\n  const [imageFile, setImageFile] = useState<File>();\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [reason, onChangeReason] = useInput(\"\");\r\n  const [brand, onChangeBrand] = useInput(\"\");\r\n  const [link, onChangeLink] = useInput(\"\");\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n  const GETHASHAPI = `${process.env.NEXT_PUBLIC_API}/getHash`;\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const closeModal = () => {\r\n    props.setuploadModalOpen(false);\r\n  };\r\n  const { title, desc, photos } = post;\r\n  // const handlechange = e =>{\r\n  //   setPost({\r\n  //     ...post,\r\n  //     [e.target.name]: e.target.value;\r\n  //   })\r\n  // }\r\n\r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n  const inputRef = useRef(null);\r\n  const [category, setCategory] = React.useState(\"상의\");\r\n  const [season, setSeason] = React.useState(\"23SS\");\r\n\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = (files: FileList | null) => {\r\n    let photosArr: any[] = [];\r\n    if (files != undefined) {\r\n      if (files.length > 1) {\r\n        alert(\"이미지는 1개만 넣어주세요\");\r\n      } else {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          setImageFile(files[i]);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              photos: [...photos, ...photosArr],\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handeldelete = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    let target = (e.target as HTMLSpanElement).parentElement;\r\n    let targetindex = 1;\r\n    setPost({\r\n      ...post,\r\n      photos: [\r\n        ...photos.slice(0, targetindex),\r\n        ...photos.slice(targetindex + 1),\r\n      ],\r\n    });\r\n    setIsImage(false);\r\n  };\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(false);\r\n  }, []);\r\n  const handledrop = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let dt = e.dataTransfer;\r\n    let files = dt?.files;\r\n    setHighlight(false);\r\n    handfiles(files);\r\n  };\r\n\r\n  const uploadClick = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const USERINFOAPI = `${process.env.NEXT_PUBLIC_API}/USERINFO`;\r\n  const [userInfo, setUserInfo] = useState({ name: \"\" });\r\n\r\n  const [hashTags, setHashTags] = React.useState({\r\n    data: [{ name: \"\" }],\r\n  });\r\n  useEffect(() => {\r\n    console.log(props.userId);\r\n    console.log(props.userName);\r\n    axios\r\n      .get(USERINFOAPI, {})\r\n      .then((result) => {\r\n        setUserInfo(result.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [props.userId]);\r\n\r\n  const getHashtags = useCallback(() => {\r\n    axios\r\n      .get(GETHASHAPI)\r\n      .then((result) => {\r\n        console.log(result);\r\n        setShowHashModalOpen(true);\r\n        setHashTags(result);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n      });\r\n  }, []);\r\n  const onSubmit = (e: any) => {\r\n    console.log(\"!\");\r\n    if (brand == \"\") {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      alert(\"브랜드입력 필수\");\r\n    } else if (imageFile == undefined) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      alert(\"이미지 필수\");\r\n    } else {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      // location.reload();\r\n      console.log(\"submit\");\r\n      console.log(props.userId);\r\n      console.log(props.userName);\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"image\", imageFile as File);\r\n      formData.append(\"userId\", props.userId);\r\n      formData.append(\"userName\", props.userName);\r\n      formData.append(\"brand\", brand);\r\n      formData.append(\"link\", link);\r\n      formData.append(\"category\", category);\r\n      formData.append(\"season\", season);\r\n      formData.append(\"hashtag\", text);\r\n      formData.append(\"reason\", reason);\r\n      // alert(formData)\r\n\r\n      axios\r\n        .post(API, formData)\r\n        .then((result) => {\r\n          console.log(result);\r\n          location.reload();\r\n          // const ele = document.getElementById('submit_bt');\r\n          // ele?.click();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          location.reload();\r\n        });\r\n    }\r\n    //   axios\r\n    //     .post(\r\n    //       API,\r\n    //       // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n    //       // 회원가입창에서 클라이언트가 입력하는 데이터\r\n    //       {\r\n    //         nickname: nickname,\r\n    //         brand: brand,\r\n    //         link: link, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n    //         image : (imageFile as File).name\r\n    //       },\r\n    //       {\r\n    //         headers: {\r\n    //           \"Content-Type\": \"application/json\",\r\n    //           // 'Accept': 'application/json',\r\n    //         },\r\n    //       }\r\n    //     )\r\n    //     // 그러면 서버에서 클라이언트로 response(응답)으로\r\n    //     // {ok: true} 아니면 {ok: false}가 온다.\r\n    //     // .then((response) => {\r\n    //     //   console.log(response); // response.data로 해야?\r\n    //     // })\r\n    //     .then((result) => {\r\n    //       console.log(result);\r\n    //       // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n    //       // history.replace('/login');\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n    //       console.log(error);\r\n    //     });\r\n  };\r\n  return (\r\n    <>\r\n      {showHashModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closehashtagsModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <div style={{ height: \"300px\", overflow: \"overlay\" }}>\r\n              {hashTags.data.map((hashtag, index) => (\r\n                <li key={index} style={{ listStyle: \"none\" }}>\r\n                  {\" \"}\r\n                  #{hashtag.name}\r\n                </li>\r\n              ))}\r\n            </div>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closehashtagsModal}\r\n            >\r\n              확인\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Modal\r\n        open={true}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box\r\n          component=\"form\"\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          onSubmit={onSubmit}\r\n          sx={style}\r\n        >\r\n          {/* <form onSubmit={onSubmit}> */}\r\n          <Typography sx={{ textAlign: \"center\" }} component=\"h1\" variant=\"h5\">\r\n            업로드\r\n          </Typography>\r\n          {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n          <TextField\r\n            required\r\n            label=\"브랜드\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-brand\"\r\n            type=\"text\"\r\n            value={brand}\r\n            variant=\"standard\"\r\n            onChange={onChangeBrand}\r\n          />\r\n          <TextField\r\n            label=\"Link\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={link}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeLink}\r\n          />\r\n\r\n          <TextField\r\n            label=\"선정이유\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={reason}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeReason}\r\n          />\r\n\r\n          <FormControl\r\n            sx={{ width: \"40%\", marginRight: \"10%\", marginTop: \"25px\" }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-label\">상의</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"상의\"}\r\n              value={category}\r\n              label=\"카테고리\"\r\n              required\r\n              onChange={handleCategoryChange}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl sx={{ width: \"40%\", marginTop: \"25px\" }}>\r\n            <InputLabel id=\"demo-simple-select-label\">23SS</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"23SS\"}\r\n              value={season}\r\n              label=\"시즌\"\r\n              required\r\n              onChange={handleSeasonChange}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            sx={{ marginTop: \"30px\" }}\r\n            value={text}\r\n            onChange={onChangeText}\r\n            fullWidth\r\n            label=\"해시태그입력 #검정 #반팔 \"\r\n            variant=\"outlined\"\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n          <div className=\"file-upload\" style={{ marginTop: \"10px\" }}>\r\n            <div className=\"custom-form-group\">\r\n              {!isImage && (\r\n                <div\r\n                  className={\r\n                    highlight\r\n                      ? \"custom-file-drop-area highlight\"\r\n                      : \"custom-file-drop-area\"\r\n                  }\r\n                  onDragEnter={handlehighlight}\r\n                  onDragOver={handlehighlight}\r\n                  onDragLeave={handleunhighlight}\r\n                  onDrop={handledrop}\r\n                >\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"photos\"\r\n                    placeholder=\"Enter photos\"\r\n                    multiple={false}\r\n                    id=\"filephotos\"\r\n                    onChange={handlefilechange}\r\n                  />\r\n                  <label htmlFor=\"filephotos\">Drag & Drop</label>\r\n                </div>\r\n              )}\r\n              <div className=\"custom-file-preview\">\r\n                {photos.length > 0 &&\r\n                  photos.map((item: any, index) =>\r\n                    index != 0 ? (\r\n                      <div className=\"prev-img\" key={index}>\r\n                        <span onClick={handeldelete}>&times;</span>\r\n                        {item && <Image src={item.src} alt={item.name} />}\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )\r\n                  )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            id=\"submit_bt\"\r\n            style={{ display: \"none\" }}\r\n            type=\"submit\"\r\n          ></button>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            size=\"large\"\r\n          >\r\n            확인\r\n          </Button>\r\n          {/* </form> */}\r\n        </Box>\r\n        {/* <Button onClick={closeModal}>닫기</Button> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios from \"axios\";\nimport React, { useCallback, useState, useEffect,useMemo  } from \"react\";\nimport Link from \"next/link\";\n// const inter = Inter({ subsets: [\"latin\"] });\n\nexport default function Home() {\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [posts, setPost] = useState<any[]>([]);\n  const [userId, setUserId] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n\n  const LOADAPI = `${process.env.NEXT_PUBLIC_API}/loadpost`;\n\n  const loadPost = useCallback(() => {\n    axios\n      .get(LOADAPI)\n      .then((result) => {\n        setPost(result.data);\n        // for(let i=0; i< result.data.length ; i++){\n        //   console.log(result.data[i].Images[0])\n        //   console.log(i)\n\n        // }\n        // for(let i=0 ; i< result.data.lengths\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\n        // history.replace('/login');\n      })\n      .catch((error) => {\n        \n        alert(\"로딩이 정상적으로 되지 않았습니다.\");\n        setPost([]);\n        console.log(error);\n      });\n  }, [setPost]);\n\n  useEffect(() => {\n    loadPost();\n  }, [loadPost]);\n\n  const LOGINCHECKAPI = `${process.env.NEXT_PUBLIC_API}/logincheck`;\n  useEffect(() => {\n    axios\n      .get(LOGINCHECKAPI)\n      .then((result) => {\n        if (result.data.login) {\n          setIsLoggedIn(true);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPost}>\n          <h1 id=\"title\">CRUMP REFERENCE</h1>\n        </a>\n        <div style={{ marginBottom: \"40px\" }}>\n          <Navbar\n            isLoggedIn={isLoggedIn}\n            setIsLoggedIn={setIsLoggedIn}\n            setPost={setPost}\n            userId = {userId}\n            setUserId = {setUserId}\n            userName= {userName}\n            setUserName = {setUserName}\n\n          />\n          {/* <LoginForm /> */}\n          {/* <SignupForm /> */}\n        </div>\n        <ResponsiveGrid\n          isLoggedIn={isLoggedIn}\n          setIsLoggedIn={setIsLoggedIn}\n          setPost={setPost}\n          posts={posts}\n        />\n      </div>\n    </>\n  );\n}\n","module.exports = require(\"@mui/icons-material/AccountCircle\");","module.exports = require(\"@mui/icons-material/Add\");","module.exports = require(\"@mui/icons-material/Delete\");","module.exports = require(\"@mui/icons-material/Edit\");","module.exports = require(\"@mui/icons-material/FavoriteBorder\");","module.exports = require(\"@mui/icons-material/FileCopy\");","module.exports = require(\"@mui/icons-material/MoreVert\");","module.exports = require(\"@mui/icons-material/Search\");","module.exports = require(\"@mui/material\");","module.exports = require(\"@mui/material/AppBar\");","module.exports = require(\"@mui/material/Box\");","module.exports = require(\"@mui/material/Button\");","module.exports = require(\"@mui/material/Card\");","module.exports = require(\"@mui/material/CardContent\");","module.exports = require(\"@mui/material/CardMedia\");","module.exports = require(\"@mui/material/FormControl\");","module.exports = require(\"@mui/material/Grid\");","module.exports = require(\"@mui/material/IconButton\");","module.exports = require(\"@mui/material/InputBase\");","module.exports = require(\"@mui/material/InputLabel\");","module.exports = require(\"@mui/material/Menu\");","module.exports = require(\"@mui/material/MenuItem\");","module.exports = require(\"@mui/material/Modal\");","module.exports = require(\"@mui/material/Paper\");","module.exports = require(\"@mui/material/Select\");","module.exports = require(\"@mui/material/TextField\");","module.exports = require(\"@mui/material/Toolbar\");","module.exports = require(\"@mui/material/Typography\");","module.exports = require(\"@mui/material/styles\");","module.exports = require(\"next/dist/shared/lib/amp-context.js\");","module.exports = require(\"next/dist/shared/lib/amp-mode.js\");","module.exports = require(\"next/dist/shared/lib/head-manager-context.js\");","module.exports = require(\"next/dist/shared/lib/image-blur-svg.js\");","module.exports = require(\"next/dist/shared/lib/image-config-context.js\");","module.exports = require(\"next/dist/shared/lib/image-config.js\");","module.exports = require(\"next/dist/shared/lib/image-loader\");","module.exports = require(\"next/dist/shared/lib/side-effect.js\");","module.exports = require(\"next/dist/shared/lib/utils/warn-once.js\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react/jsx-runtime\");","module.exports = import(\"axios\");;"],"names":["React","Card","CardContent","CardMedia","Typography","DeleteIcon","EditIcon","Button","CardActionArea","CardActions","useCallback","useEffect","useState","axios","Modal","Box","FileCopyIcon","FavoriteBorderIcon","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","category","상의","하의","아우터","디테일","이미지","악세사리","season","AlignItemsList","props","setCategory","setSeason","HASHAPI","process","env","NEXT_PUBLIC_API","DELAPI","id","modalOpen","setModalOpen","ImagePath","setImagePath","closeModal","delClick","isLoggedIn","alert","copyClick","onSubmit","e","preventDefault","stopPropagation","post","then","result","Posts","posts","filter","setPost","catch","err","console","log","editClick","Images","undefined","src","TagClick","hashname","hashtags","headers","data","error","open","onClose","aria-labelledby","aria-describedby","component","noValidate","autoComplete","sx","variant","textAlign","marginBottom","type","mt","mb","marginLeft","marginRight","size","fullWidth","onClick","maxWidth","marginTop","href","link","target","height","image","alt","span","fontWeight","fontSize","name","brand","color","reason","div","display","verticalAlign","opacity","float","map","hashtag","index","margin","className","parseInt","PostHashtag","HashtagId","a","useInput","TextField","LoginForm","setIsLoggedIn","setloginModalOpen","userId","setUserId","userName","setUserName","API","email","onChangeEmail","password","onChangePassword","User","setUser","onSubmitForm","event","label","value","required","onChange","inter","useRef","styled","alpha","AppBar","Toolbar","IconButton","InputBase","MenuItem","Menu","AddIcon","SearchIcon","AccountCircle","MoreIcon","Signup","Upload","background","padding","modalstyle","Search","theme","borderRadius","shape","backgroundColor","spacing","breakpoints","up","SearchIconWrapper","pointerEvents","alignItems","justifyContent","StyledInputBase","paddingLeft","transition","transitions","create","Navbar","GETHASHAPI","uploadModalOpen","setuploadModalOpen","loginModalOpen","onChangeValue","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","searchBar","showHashModalOpen","setShowHashModalOpen","hashTags","setHashTags","closehashtagsModal","current","focus","showModal","showLoginModal","showUploadModal","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","Logout","LOGOUTAPI","get","message","uploadClick","handleMobileMenuOpen","onReady","TagSearch","split","length","upperCaseValue","toUpperCase","getHashtags","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","flexGrow","overflow","li","listStyle","whiteSpace","noWrap","xs","sm","md","form","flex","aria-label","fill","placeholder","inputRef","edge","aria-haspopup","aria-controls","experimentalStyled","Paper","Grid","Item","palette","mode","typography","body2","text","secondary","ResponsiveGrid","Imagesrc","setImagesrc","container","columns","item","lg","Hashtags","emailError","setEmailError","nickname","onChangeNickname","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","checkEmail","res","check","test","response","FormControl","InputLabel","Select","Image","fileTypes","file","setFile","button","imageFile","setImageFile","setValue","isImage","setIsImage","highlight","setHighlight","onChangeReason","onChangeBrand","onChangeLink","title","desc","photos","onChangeText","setText","handleCategoryChange","handleSeasonChange","handlefilechange","files","handfiles","photosArr","i","reader","FileReader","readAsDataURL","addEventListener","fileobj","push","handeldelete","parentElement","targetindex","slice","handlehighlight","handleunhighlight","handledrop","dt","dataTransfer","USERINFOAPI","userInfo","setUserInfo","formData","FormData","append","location","reload","labelId","defaultValue","onDragEnter","onDragOver","onDragLeave","onDrop","input","multiple","htmlFor","initValue","setter","handler","Head","Home","LOADAPI","loadPost","LOGINCHECKAPI","login","meta","content","h1"],"sourceRoot":""}