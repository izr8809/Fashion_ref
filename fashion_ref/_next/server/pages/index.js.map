{"version":3,"file":"../pages/index.js","mappings":"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","sources":["webpack://fashion_ref/./Components/AlignItemsList.tsx","webpack://fashion_ref/./Components/LoginForm.tsx","webpack://fashion_ref/./Components/Navbar.tsx","webpack://fashion_ref/./Components/ResponsiveGrid.tsx","webpack://fashion_ref/./Components/signup.tsx","webpack://fashion_ref/./Components/upload.tsx","webpack://fashion_ref/./hooks/useInput.ts","webpack://fashion_ref/./pages/index.tsx","webpack://fashion_ref/external commonjs \"@mui/icons-material/AccountCircle\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Add\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Delete\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Edit\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/MoreVert\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Search\"","webpack://fashion_ref/external commonjs \"@mui/material\"","webpack://fashion_ref/external commonjs \"@mui/material/AppBar\"","webpack://fashion_ref/external commonjs \"@mui/material/Box\"","webpack://fashion_ref/external commonjs \"@mui/material/Button\"","webpack://fashion_ref/external commonjs \"@mui/material/Card\"","webpack://fashion_ref/external commonjs \"@mui/material/CardContent\"","webpack://fashion_ref/external commonjs \"@mui/material/CardMedia\"","webpack://fashion_ref/external commonjs \"@mui/material/FormControl\"","webpack://fashion_ref/external commonjs \"@mui/material/Grid\"","webpack://fashion_ref/external commonjs \"@mui/material/IconButton\"","webpack://fashion_ref/external commonjs \"@mui/material/InputBase\"","webpack://fashion_ref/external commonjs \"@mui/material/InputLabel\"","webpack://fashion_ref/external commonjs \"@mui/material/Menu\"","webpack://fashion_ref/external commonjs \"@mui/material/MenuItem\"","webpack://fashion_ref/external commonjs \"@mui/material/Modal\"","webpack://fashion_ref/external commonjs \"@mui/material/Paper\"","webpack://fashion_ref/external commonjs \"@mui/material/Select\"","webpack://fashion_ref/external commonjs \"@mui/material/TextField\"","webpack://fashion_ref/external commonjs \"@mui/material/Toolbar\"","webpack://fashion_ref/external commonjs \"@mui/material/Typography\"","webpack://fashion_ref/external commonjs \"@mui/material/styles\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/amp-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/amp-mode.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/head-manager-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-blur-svg.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-config-context.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-config.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/image-loader\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/side-effect.js\"","webpack://fashion_ref/external commonjs \"next/dist/shared/lib/utils/warn-once.js\"","webpack://fashion_ref/external commonjs \"next/head\"","webpack://fashion_ref/external commonjs \"react\"","webpack://fashion_ref/external commonjs \"react/jsx-runtime\"","webpack://fashion_ref/external module \"axios\""],"sourcesContent":["import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\ntype AlignItemsListProps = {\r\n  category: string;\r\n  brand: string;\r\n  link: string;\r\n  src: string;\r\n  season: string;\r\n  reason: string;\r\n  hashtags: any[];\r\n  id: number;\r\n  setPost: any;\r\n  posts: any[];\r\n  index: number;\r\n  name: string;\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n};\r\n\r\nconst category = {\r\n  상의: 1,\r\n  하의: 2,\r\n  아우터: 3,\r\n  디테일: 4,\r\n  이미지: 5,\r\n  악세사리: 6,\r\n};\r\n\r\nconst season = {\r\n  \"23SS\": 7,\r\n  \"23FW\": 8,\r\n};\r\nexport default function AlignItemsList(props: AlignItemsListProps) {\r\n  const [category, setCategory] = useState(\"\");\r\n  const [season, setSeason] = useState(\"\");\r\n\r\n  const HASHAPI = `${process.env.NEXT_PUBLIC_API}/hashtagsearch`;\r\n  const DELAPI = `${process.env.NEXT_PUBLIC_API}/deletpost/${props.id}`;\r\n  const delClick = useCallback(() => {\r\n    if (props.isLoggedIn) {\r\n      axios\r\n        .post(DELAPI, {})\r\n        .then((result) => {\r\n          const Posts = props.posts.filter((post) => post.id !== props.id);\r\n          props.setPost(Posts);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      //로그인 모달 띄우기\r\n      alert(\"로그인 해주세요\");\r\n    }\r\n  }, [DELAPI, props]);\r\n  const editClick = useCallback(() => {\r\n    alert(\"만드는 중입니다..\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCategory(props.category);\r\n    setSeason(\"23SS\");\r\n  }, [props.category]);\r\n\r\n  const TagClick = React.useCallback((e: any, hashname: string) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    axios\r\n      .post(\r\n        HASHAPI,\r\n        {\r\n          hashtags: \"#\" + hashname,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            // 'Accept': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then((result) => {\r\n        props.setPost(result.data);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        maxWidth: \"15\",\r\n        marginTop: \"20px\",\r\n        // borderRadius: \"24px\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <CardActionArea href={`${props.link}`} target=\"_blank\">\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"400\"\r\n          image={`../${props.src}`}\r\n          alt=\"green iguana\"\r\n        />\r\n        <CardContent>\r\n          <Typography>\r\n            <span\r\n              style={{ fontWeight: 900, fontSize: \"130%\", marginBottom: \"4%\" }}\r\n            >\r\n              {props.name[0]}_{`${props.brand}`}\r\n            </span>\r\n          </Typography>\r\n\r\n          {/* <span style={{fontWeight :900, fontSize: \"100%\", marginBottom: 5}}>\r\n            참고할 부분\r\n          </span> */}\r\n          <Typography\r\n            sx={{ fontWeight: 900, marginBottom: \"1%\" }}\r\n            variant=\"subtitle2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            참고할 부분\r\n          </Typography>\r\n\r\n          <Typography\r\n            sx={{ marginBottom: \"1%\" }}\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <div style={{ width: \"100%\", marginBottom: \"3%\" }}>\r\n          <EditIcon id=\"editicon\" onClick={editClick} />\r\n          <DeleteIcon id=\"delicon\" onClick={delClick} />\r\n        </div>\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n        {/* <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${parseInt(props.season) % 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`TagCategory Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div> */}\r\n        {props.hashtags.map((hashtag, index) => (\r\n          <div style={{ margin: \"2px\" }} key={index}>\r\n            <div\r\n              className={`Tag${\r\n                parseInt(hashtag.PostHashtag.HashtagId) % 8\r\n              } Tag`}\r\n              style={{ display: \"inline-block\", margin: \"2px\" }}\r\n              onClick={(e) => {\r\n                TagClick(e, hashtag.name);\r\n              }}\r\n            >\r\n              <a href=\"\">#{hashtag.name}</a>\r\n            </div>{\" \"}\r\n            &nbsp;\r\n          </div>\r\n        ))}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  setIsLoggedIn: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function LoginForm({\r\n  setIsLoggedIn,\r\n  setloginModalOpen,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: LoginFormProps): ReactElement {\r\n  const API = `${process.env.NEXT_PUBLIC_API}/login`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [User, setUser] = useState({\r\n    id: 0,\r\n    name: null,\r\n  });\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback(\r\n    (event: any) => {\r\n      event.preventDefault();\r\n      if(email == \"\"){\r\n        alert(\"이메일을 입력해주세요\")\r\n      }\r\n      else if(password == \"\"){\r\n        alert(\"비밀번호를 입력해주세요\")\r\n      }\r\n      else{\r\n        axios\r\n        .post(\r\n          API,\r\n          // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n          // 회원가입창에서 클라이언트가 입력하는 데이터\r\n          {\r\n            email: email,\r\n            password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // 'Accept': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        .then((result) => {\r\n          setUser(result.data.data);\r\n          setIsLoggedIn(true);\r\n          setUserId(result.data.data.id);\r\n          setUserName(result.data.data.name);\r\n          console.log(result.data.data)\r\n          // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n          // history.replace('/login');\r\n        })\r\n        .catch((error) => {\r\n          alert(\"로그인 정보가 일치하지 않습니다.\");\r\n          console.log(error);\r\n        });\r\n      }\r\n      \r\n    },\r\n    [email, password, setIsLoggedIn]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          로그인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement, useRef } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\n// import { useNavigate  } from 'react-router-dom'; // 설치한 패키지\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/signup\";\r\nimport Upload from \"@/Components/upload\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\nconst inter = Inter({ subsets: [\"latin\"] });\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(\"#F8F8F8\", 0.73),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(\"#F8F8F8\", 0.33),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n    height: \"40%\",\r\n  },\r\n}));\r\n\r\ntype NavbarProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\n\r\nexport default function Navbar({\r\n  isLoggedIn,\r\n  setIsLoggedIn,\r\n  setPost,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName\r\n}: NavbarProps): ReactElement {\r\n  // const navigate = useNavigate();\r\n  const HASHAPI = `${process.env.NEXT_PUBLIC_API}/hashtagsearch`;\r\n  const API = `${process.env.NEXT_PUBLIC_API}/loadpost`;\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (searchBar.current) {\r\n      searchBar.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  const showModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const showUploadModal = () => {\r\n    setuploadModalOpen(true);\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    const LOGOUTAPI = `${process.env.NEXT_PUBLIC_API}/logout`;\r\n    axios\r\n      .get(LOGOUTAPI)\r\n      .then((result) => {\r\n        if (result.data.message == \"ok\") setIsLoggedIn(false);\r\n        setloginModalOpen(false);\r\n      })\r\n      .catch((err) => {alert(\"서버와 연결 끊겼네요. 새로고침.!\")});\r\n  }, [setIsLoggedIn]);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (isLoggedIn) {\r\n      setuploadModalOpen(true);\r\n    } else {\r\n      setloginModalOpen(true);\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onReady = useCallback(()=>{alert(\"준비중입니다.\")},[])\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      // e.preventDeafult();\r\n      // e.stopPropagation();\r\n      if (value == \"\") {\r\n        axios\r\n          .get(API)\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n          });\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        let upperCaseValue = value.toUpperCase();\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        axios\r\n          .post(\r\n            HASHAPI,\r\n            {\r\n              hashtags: upperCaseValue,\r\n              category: category,\r\n              season: season,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n            console.log(error);\r\n          });\r\n      }\r\n    },\r\n    [value, setPost, category, season]\r\n  );\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <p>만드는 중입니다</p>\r\n      </MenuItem>\r\n      {/* <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>프로필</p>\r\n      </MenuItem> */}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {!isLoggedIn && modalOpen && (\r\n        <Signup setIsLoggedIn={setIsLoggedIn} setModalOpen={setModalOpen} \r\n        userId = {userId}\r\n        setUserId = {setUserId}\r\n        userName= {userName}\r\n        setUserName = {setUserName}/>\r\n      )}\r\n      {isLoggedIn && uploadModalOpen && (\r\n        <Upload setuploadModalOpen={setuploadModalOpen} \r\n        userId = {userId}\r\n        setUserId = {setUserId}\r\n        userName= {userName}\r\n        setUserName = {setUserName}/>\r\n      )}\r\n      {!isLoggedIn && loginModalOpen && (\r\n        <LoginForm\r\n          setIsLoggedIn={setIsLoggedIn}\r\n          setloginModalOpen={setloginModalOpen}\r\n          userId = {userId}\r\n          setUserId = {setUserId}\r\n          userName= {userName}\r\n          setUserName = {setUserName}\r\n        />\r\n      )}\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          {/* <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n            onClick={reloadPost}\r\n          >\r\n            <HomeIcon color=\"disabled\" />\r\n          </IconButton> */}\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            {/* <p>검색할 태그</p> */}\r\n          </Typography>\r\n          {/* <Search>\r\n            <StyledInputBase\r\n              onChange={(event) => {\r\n                setValue(event.target.value);\r\n              }}\r\n              placeholder=\"태그 입력\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyPress={(event) => {\r\n                if (event.which == 32) alert(value);\r\n              }}\r\n            />\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n          </Search> */}\r\n          {/* <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">\r\n              카테고리\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              required\r\n              value={category}\r\n              label=\"category\"\r\n              onChange={onChangeCategory}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"25px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">시즌</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              value={season}\r\n              label=\"season\"\r\n              required\r\n              onChange={onChangeSeason}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl> */}\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n          <form\r\n            onSubmit={TagSearch}\r\n            style={{ width: \"70%\", flex: \"auto\", marginLeft: \"15%\" }}\r\n          >\r\n            <IconButton\r\n              type=\"submit\"\r\n              aria-label=\"search\"\r\n              sx={{ display: { xs: \"none\", md: \"inline-block\" } }}\r\n            >\r\n              <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n            </IconButton>\r\n            <TextField\r\n              id=\"search-bar\"\r\n              className=\"text\"\r\n              sx={{ display: \"inline-block\", width: \"80%\" }}\r\n              value={value}\r\n              onChange={onChangeValue}\r\n              label=\"#상의 #검정\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Search...\"\r\n              size=\"small\"\r\n              inputRef={searchBar}\r\n            />\r\n          </form>\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={0} color=\"error\"></Badge>\r\n            </IconButton> */}\r\n            <>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                sx={{ marginRight: \"10px\" }}\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"false\"\r\n                color=\"primary\"\r\n                onClick={uploadClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </>\r\n            {!isLoggedIn ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"100%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                    whiteSpace: \"nowrap\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={Logout}\r\n                >\r\n                  로그아웃\r\n                </Button>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                  onClick={onReady}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" }, float: \"right\" }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { useCallback, useEffect,useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport AlignItemsList from \"./AlignItemsList\";\r\nimport Grid from '@mui/material/Grid';\r\nimport { useInput } from '@mui/base';\r\nimport axios from 'axios';\r\nimport Image from \"next/image\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\ntype ResponsiveGridProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n  posts : any[];\r\n};\r\n\r\nexport default function ResponsiveGrid({ setIsLoggedIn, isLoggedIn, setPost, posts }: ResponsiveGridProps) {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n        {posts.map((post, index) => (\r\n          <Grid item xs={6} sm={4} md={3} lg ={4} key={index}>\r\n            <Item>\r\n            <li\r\n              style={{\r\n                maxWidth: \"320px\",\r\n                display: \"inline-block\",\r\n                // marginRight: \"4%\",\r\n                // marginLeft: \"1%\",\r\n                // marginTop: \"1%\",-\r\n              }}\r\n            >\r\n            <AlignItemsList isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} name={post.name} index={index} setPost={setPost} posts={posts} id={post.id} category={post.category} brand={post.brand} src={post.Images[0].src}link={post.link} season={post.season} hashtags ={post.Hashtags} reason ={post.reason}/> </li>\r\n            </Item>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { color } from \"@mui/system\";\r\n\r\ntype SignupProps = {\r\n  setModalOpen: any;\r\n  setIsLoggedIn: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({\r\n  setIsLoggedIn,\r\n  setModalOpen,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: SignupProps): ReactElement {\r\n  const API = `${process.env.NEXT_PUBLIC_API}/signups`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password, setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email: any) => {\r\n    let res = false;\r\n\r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n\r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (password !== passwordCheck) {\r\n        setPasswordError(true);\r\n      } else if (!checkEmail(email)) {\r\n        setEmailError(true);\r\n      } else {\r\n        axios\r\n          .post(\r\n            API,\r\n            // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n            // 회원가입창에서 클라이언트가 입력하는 데이터\r\n            {\r\n              email: email,\r\n              name: nickname,\r\n              password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          // 그러면 서버에서 클라이언트로 response(응답)으로\r\n          // {ok: true} 아니면 {ok: false}가 온다.\r\n          // .then((response) => {\r\n          //   console.log(response); // response.data로 해야?\r\n          // })\r\n          .then((result) => {\r\n            setIsLoggedIn(true);\r\n            setUserId(result.data.userId);\r\n            setUserName(result.data.userName);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.data.message == \"already exist\") {\r\n              alert(\"이미 존재하는 이메일입니다.\");\r\n            } else {\r\n              alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n            }\r\n          });\r\n      }\r\n      // if (!term) {\r\n      //   return setTermError(true);\r\n      // }\r\n    },\r\n    [email, password, passwordCheck, setIsLoggedIn, nickname]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\" sx={{ textAlign: \"center\" }}>\r\n          회원가입\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          // error={checkEmail(email)}\r\n          onChange={onChangeEmail}\r\n        />\r\n        {emailError && (\r\n          <span style={{ color: \"red\" }}>Email 형식이 잘못되었습니다</span>\r\n        )}\r\n        <TextField\r\n          label=\"이름\"\r\n          name=\"user-nick\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          onChange={onChangeNickname}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          fullWidth\r\n          name=\"user-password\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={password}\r\n          required\r\n          onChange={onChangePassword}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호체크\"\r\n          fullWidth\r\n          name=\"user-password-check\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={passwordCheck}\r\n          required\r\n          onChange={setPasswordCheck}\r\n        />\r\n        {passwordError && (\r\n          <span style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다</span>\r\n        )}\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    // {/* <div className={\"container\"} ref={modalRef}>\r\n    //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n    //       <br />\r\n    //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n    //     </TextField>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-nick\">닉네임</label>\r\n    //       <br />\r\n    //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password\">비밀번호</label>\r\n    //       <br />\r\n    //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n    //       <br />\r\n    //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n    //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n    //     </div>\r\n    //     {/* <div>\r\n    //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n    //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n    //     </div> */}\r\n    //     <div style={{ marginTop: 10 }}>\r\n    //       <button>가입하기</button>\r\n    //     </div>\r\n    //     <button className={\"close\"} onClick={closeModal}>\r\n    //         X\r\n    //     </button>\r\n    //   </div> */}\r\n    // }\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nimport Router from \"next/router\";\r\n\r\n\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\ntype UploadProps = {\r\n  setuploadModalOpen: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload(props: UploadProps) {\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  // const handleChange = (file: any) => {\r\n  //   setFile(file);\r\n  //   console.log(file);\r\n  // };\r\n  const API = `${process.env.NEXT_PUBLIC_API}/uploads`;\r\n  const [imageFile, setImageFile] = useState<File>();\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [reason, onChangeReason] = useInput(\"\");\r\n  const [brand, onChangeBrand] = useInput(\"\");\r\n  const [link, onChangeLink] = useInput(\"\");\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const closeModal = () => {\r\n    props.setuploadModalOpen(false);\r\n  };\r\n  const { title, desc, photos } = post;\r\n  // const handlechange = e =>{\r\n  //   setPost({\r\n  //     ...post,\r\n  //     [e.target.name]: e.target.value;\r\n  //   })\r\n  // }\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = (files: FileList | null) => {\r\n    let photosArr: any[] = [];\r\n    if (files != undefined) {\r\n      if (files.length > 1) {\r\n        alert(\"이미지는 1개만 넣어주세요\");\r\n      } else {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          setImageFile(files[i]);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              photos: [...photos, ...photosArr],\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handeldelete = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    let target = (e.target as HTMLSpanElement).parentElement;\r\n    let targetindex = 1;\r\n    setPost({\r\n      ...post,\r\n      photos: [\r\n        ...photos.slice(0, targetindex),\r\n        ...photos.slice(targetindex + 1),\r\n      ],\r\n    });\r\n    setIsImage(false);\r\n  };\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(false);\r\n  }, []);\r\n  const handledrop = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let dt = e.dataTransfer;\r\n    let files = dt?.files;\r\n    setHighlight(false);\r\n    handfiles(files);\r\n  };\r\n\r\n  const uploadClick = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const USERINFOAPI = `${process.env.NEXT_PUBLIC_API}/USERINFO`;\r\n  const [userInfo, setUserInfo] = useState({ name: \"\" });\r\n\r\n  useEffect(() => {\r\n    console.log(props.userId)\r\n    console.log(props.userName)\r\n    axios\r\n      .get(USERINFOAPI, {})\r\n      .then((result) => {\r\n        setUserInfo(result.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [props.userId]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if (category == \"\" || season == \"\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"카테고리, 시즌 필수\");\r\n      } else if (brand == \"\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"브랜드입력 필수\");\r\n      } else if (imageFile == undefined) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"이미지 필수\");\r\n      } else {\r\n        // e.preventDefault();\r\n        // e.stopPropagation();\r\n        console.log(\"submit\");\r\n        console.log(props.userId);\r\n        console.log(props.userName);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"image\", imageFile as File);\r\n        formData.append(\"userId\", props.userId);\r\n        formData.append(\"userName\", props.userName);\r\n        formData.append(\"brand\", brand);\r\n        formData.append(\"link\", link);\r\n        formData.append(\"category\", category);\r\n        formData.append(\"season\", season);\r\n        formData.append(\"hashtag\", text);\r\n        formData.append(\"reason\", reason);\r\n        // alert(formData)\r\n        axios\r\n          .post(API, formData)\r\n          .then((result) => {\r\n            console.log(result)\r\n            location.reload();\r\n          })\r\n          .catch((err) => {\r\n            console.log(err)\r\n          });\r\n      }\r\n      //   axios\r\n      //     .post(\r\n      //       API,\r\n      //       // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n      //       // 회원가입창에서 클라이언트가 입력하는 데이터\r\n      //       {\r\n      //         nickname: nickname,\r\n      //         brand: brand,\r\n      //         link: link, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n      //         image : (imageFile as File).name\r\n      //       },\r\n      //       {\r\n      //         headers: {\r\n      //           \"Content-Type\": \"application/json\",\r\n      //           // 'Accept': 'application/json',\r\n      //         },\r\n      //       }\r\n      //     )\r\n      //     // 그러면 서버에서 클라이언트로 response(응답)으로\r\n      //     // {ok: true} 아니면 {ok: false}가 온다.\r\n      //     // .then((response) => {\r\n      //     //   console.log(response); // response.data로 해야?\r\n      //     // })\r\n      //     .then((result) => {\r\n      //       console.log(result);\r\n      //       // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n      //       // history.replace('/login');\r\n      //     })\r\n      //     .catch((error) => {\r\n      //       alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n      //       console.log(error);\r\n      //     });\r\n    },\r\n    [brand, link, nickname, imageFile, category, text, season]\r\n  );\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography sx={{ textAlign: \"center\" }} component=\"h1\" variant=\"h5\">\r\n          업로드\r\n        </Typography>\r\n        {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n        <TextField\r\n          required\r\n          label=\"브랜드\"\r\n          fullWidth\r\n          sx={{ marginTop: \"5px\" }}\r\n          name=\"user-brand\"\r\n          type=\"text\"\r\n          value={brand}\r\n          variant=\"standard\"\r\n          onChange={onChangeBrand}\r\n        />\r\n        <TextField\r\n          label=\"Link\"\r\n          fullWidth\r\n          sx={{ marginTop: \"5px\" }}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={link}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeLink}\r\n        />\r\n\r\n        <TextField\r\n          label=\"선정이유\"\r\n          fullWidth\r\n          sx={{ marginTop: \"5px\" }}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={reason}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeReason}\r\n        />\r\n\r\n        <FormControl\r\n          sx={{ width: \"40%\", marginRight: \"10%\", marginTop: \"25px\" }}\r\n        >\r\n          <InputLabel id=\"demo-simple-select-label\">카테고리</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={category}\r\n            label=\"category\"\r\n            required\r\n            onChange={handleCategoryChange}\r\n          >\r\n            <MenuItem value={\"상의\"}>상의</MenuItem>\r\n            <MenuItem value={\"하의\"}>하의</MenuItem>\r\n            <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n            <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n            <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n            <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl sx={{ width: \"40%\", marginTop: \"25px\" }}>\r\n          <InputLabel id=\"demo-simple-select-label\">시즌</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={season}\r\n            label=\"season\"\r\n            required\r\n            onChange={handleSeasonChange}\r\n          >\r\n            <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n            <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          sx={{ marginTop: \"30px\" }}\r\n          value={text}\r\n          onChange={onChangeText}\r\n          fullWidth\r\n          label=\"해시태그입력 #검정 #반팔 \"\r\n          variant=\"outlined\"\r\n        />\r\n\r\n        {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n        <div className=\"file-upload\" style={{ marginTop: \"6px\" }}>\r\n          <div className=\"custom-form-group\">\r\n            {!isImage && (\r\n              <div\r\n                className={\r\n                  highlight\r\n                    ? \"custom-file-drop-area highlight\"\r\n                    : \"custom-file-drop-area\"\r\n                }\r\n                onDragEnter={handlehighlight}\r\n                onDragOver={handlehighlight}\r\n                onDragLeave={handleunhighlight}\r\n                onDrop={handledrop}\r\n              >\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"photos\"\r\n                  placeholder=\"Enter photos\"\r\n                  multiple={false}\r\n                  id=\"filephotos\"\r\n                  onChange={handlefilechange}\r\n                />\r\n                <label htmlFor=\"filephotos\">Drag & Drop</label>\r\n              </div>\r\n            )}\r\n            <div className=\"custom-file-preview\">\r\n              {photos.length > 0 &&\r\n                photos.map((item: any, index) =>\r\n                  index != 0 ? (\r\n                    <div className=\"prev-img\" key={index}>\r\n                      <span onClick={handeldelete}>&times;</span>\r\n                      {item && <Image src={item.src} alt={item.name} />}\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n  );\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios from \"axios\";\nimport React, { useCallback, useState, useEffect,useMemo  } from \"react\";\nimport Link from \"next/link\";\n// const inter = Inter({ subsets: [\"latin\"] });\n\nexport default function Home() {\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [posts, setPost] = useState<any[]>([]);\n  const [userId, setUserId] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n\n  const LOADAPI = `${process.env.NEXT_PUBLIC_API}/loadpost`;\n\n  const loadPost = useCallback(() => {\n    axios\n      .get(LOADAPI)\n      .then((result) => {\n        setPost(result.data);\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\n        // history.replace('/login');\n      })\n      .catch((error) => {\n        alert(\"로딩이 정상적으로 되지 않았습니다.\");\n        setPost([]);\n        console.log(error);\n      });\n  }, [setPost]);\n\n  useEffect(() => {\n    loadPost();\n  }, [loadPost]);\n\n  const LOGINCHECKAPI = `${process.env.NEXT_PUBLIC_API}/logincheck`;\n  useEffect(() => {\n    axios\n      .get(LOGINCHECKAPI)\n      .then((result) => {\n        if (result.data.login) {\n          setIsLoggedIn(true);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPost}>\n          <h1 id=\"title\">CRUMP REFERENCE</h1>\n        </a>\n        <div style={{ marginBottom: \"40px\" }}>\n          <Navbar\n            isLoggedIn={isLoggedIn}\n            setIsLoggedIn={setIsLoggedIn}\n            setPost={setPost}\n            userId = {userId}\n            setUserId = {setUserId}\n            userName= {userName}\n            setUserName = {setUserName}\n\n          />\n          {/* <LoginForm /> */}\n          {/* <SignupForm /> */}\n        </div>\n        <ResponsiveGrid\n          isLoggedIn={isLoggedIn}\n          setIsLoggedIn={setIsLoggedIn}\n          setPost={setPost}\n          posts={posts}\n        />\n      </div>\n    </>\n  );\n}\n","module.exports = require(\"@mui/icons-material/AccountCircle\");","module.exports = require(\"@mui/icons-material/Add\");","module.exports = require(\"@mui/icons-material/Delete\");","module.exports = require(\"@mui/icons-material/Edit\");","module.exports = require(\"@mui/icons-material/MoreVert\");","module.exports = require(\"@mui/icons-material/Search\");","module.exports = require(\"@mui/material\");","module.exports = require(\"@mui/material/AppBar\");","module.exports = require(\"@mui/material/Box\");","module.exports = require(\"@mui/material/Button\");","module.exports = require(\"@mui/material/Card\");","module.exports = require(\"@mui/material/CardContent\");","module.exports = require(\"@mui/material/CardMedia\");","module.exports = require(\"@mui/material/FormControl\");","module.exports = require(\"@mui/material/Grid\");","module.exports = require(\"@mui/material/IconButton\");","module.exports = require(\"@mui/material/InputBase\");","module.exports = require(\"@mui/material/InputLabel\");","module.exports = require(\"@mui/material/Menu\");","module.exports = require(\"@mui/material/MenuItem\");","module.exports = require(\"@mui/material/Modal\");","module.exports = require(\"@mui/material/Paper\");","module.exports = require(\"@mui/material/Select\");","module.exports = require(\"@mui/material/TextField\");","module.exports = require(\"@mui/material/Toolbar\");","module.exports = require(\"@mui/material/Typography\");","module.exports = require(\"@mui/material/styles\");","module.exports = require(\"next/dist/shared/lib/amp-context.js\");","module.exports = require(\"next/dist/shared/lib/amp-mode.js\");","module.exports = require(\"next/dist/shared/lib/head-manager-context.js\");","module.exports = require(\"next/dist/shared/lib/image-blur-svg.js\");","module.exports = require(\"next/dist/shared/lib/image-config-context.js\");","module.exports = require(\"next/dist/shared/lib/image-config.js\");","module.exports = require(\"next/dist/shared/lib/image-loader\");","module.exports = require(\"next/dist/shared/lib/side-effect.js\");","module.exports = require(\"next/dist/shared/lib/utils/warn-once.js\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react/jsx-runtime\");","module.exports = import(\"axios\");;"],"names":["React","Card","CardContent","CardMedia","Typography","DeleteIcon","EditIcon","CardActionArea","CardActions","useCallback","useEffect","useState","axios","category","상의","하의","아우터","디테일","이미지","악세사리","season","AlignItemsList","props","setCategory","setSeason","HASHAPI","process","env","NEXT_PUBLIC_API","DELAPI","id","delClick","isLoggedIn","post","then","result","Posts","posts","filter","setPost","catch","err","console","log","alert","editClick","TagClick","e","hashname","preventDefault","stopPropagation","hashtags","headers","data","error","sx","maxWidth","marginTop","boxShadow","href","link","target","component","height","image","src","alt","span","style","fontWeight","fontSize","marginBottom","name","brand","variant","color","reason","div","width","onClick","map","hashtag","index","margin","className","parseInt","PostHashtag","HashtagId","display","a","useInput","Modal","Button","Box","TextField","position","top","left","transform","bgcolor","border","p","LoginForm","setIsLoggedIn","setloginModalOpen","userId","setUserId","userName","setUserName","API","email","onChangeEmail","password","onChangePassword","User","setUser","closeModal","onSubmitForm","event","open","onClose","aria-labelledby","aria-describedby","noValidate","autoComplete","onSubmit","label","fullWidth","type","value","required","onChange","mt","mb","size","inter","useRef","styled","alpha","AppBar","Toolbar","IconButton","InputBase","MenuItem","Menu","AddIcon","SearchIcon","AccountCircle","MoreIcon","Signup","Upload","background","padding","Search","theme","borderRadius","shape","backgroundColor","marginRight","spacing","marginLeft","breakpoints","up","SearchIconWrapper","pointerEvents","alignItems","justifyContent","StyledInputBase","paddingLeft","transition","transitions","create","Navbar","modalOpen","setModalOpen","uploadModalOpen","setuploadModalOpen","loginModalOpen","onChangeValue","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","searchBar","current","focus","showModal","showLoginModal","showUploadModal","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","Logout","LOGOUTAPI","get","message","uploadClick","handleMobileMenuOpen","onReady","TagSearch","split","length","upperCaseValue","toUpperCase","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","flexGrow","noWrap","xs","sm","md","form","flex","aria-label","fill","placeholder","inputRef","edge","aria-haspopup","whiteSpace","aria-controls","float","experimentalStyled","Paper","Grid","Item","palette","mode","typography","body2","textAlign","text","secondary","ResponsiveGrid","container","columns","item","lg","li","Images","Hashtags","emailError","setEmailError","nickname","onChangeNickname","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","checkEmail","res","check","test","response","FormControl","InputLabel","Select","Image","fileTypes","file","setFile","imageFile","setImageFile","setValue","isImage","setIsImage","highlight","setHighlight","onChangeReason","onChangeBrand","onChangeLink","title","desc","photos","onChangeText","setText","handleCategoryChange","handleSeasonChange","handlefilechange","files","handfiles","photosArr","undefined","i","reader","FileReader","readAsDataURL","addEventListener","fileobj","push","handeldelete","parentElement","targetindex","slice","handlehighlight","handleunhighlight","handledrop","dt","dataTransfer","USERINFOAPI","userInfo","setUserInfo","formData","FormData","append","location","reload","labelId","onDragEnter","onDragOver","onDragLeave","onDrop","input","multiple","htmlFor","initValue","setter","handler","Head","Home","LOADAPI","loadPost","LOGINCHECKAPI","login","meta","content","h1"],"sourceRoot":""}