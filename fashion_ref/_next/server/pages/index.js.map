{"version":3,"file":"../pages/index.js","mappings":"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","sources":["webpack://fashion_ref/./Components/Cardpost.tsx","webpack://fashion_ref/./Components/LoginForm.tsx","webpack://fashion_ref/./Components/Navbar.tsx","webpack://fashion_ref/./Components/NoticeModal.tsx","webpack://fashion_ref/./Components/ResponsiveGrid.tsx","webpack://fashion_ref/./Components/Searchbar.tsx","webpack://fashion_ref/./Components/Signup.tsx","webpack://fashion_ref/./Components/Upload.tsx","webpack://fashion_ref/./hooks/useInput.ts","webpack://fashion_ref/./pages/index.tsx","webpack://fashion_ref/external commonjs \"@mui/icons-material/AccountCircle\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Add\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/ArrowLeft\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/ArrowRight\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Brightness1Rounded\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Close\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Delete\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Edit\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Favorite\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/FavoriteBorderTwoTone\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/FileCopy\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/MoreVert\"","webpack://fashion_ref/external commonjs \"@mui/icons-material/Search\"","webpack://fashion_ref/external commonjs \"@mui/lab\"","webpack://fashion_ref/external commonjs \"@mui/lab/LoadingButton\"","webpack://fashion_ref/external commonjs \"@mui/material\"","webpack://fashion_ref/external commonjs \"@mui/material/AppBar\"","webpack://fashion_ref/external commonjs \"@mui/material/Box\"","webpack://fashion_ref/external commonjs \"@mui/material/Button\"","webpack://fashion_ref/external commonjs \"@mui/material/Card\"","webpack://fashion_ref/external commonjs \"@mui/material/CardContent\"","webpack://fashion_ref/external commonjs \"@mui/material/CardMedia\"","webpack://fashion_ref/external commonjs \"@mui/material/FormControl\"","webpack://fashion_ref/external commonjs \"@mui/material/Grid\"","webpack://fashion_ref/external commonjs \"@mui/material/IconButton\"","webpack://fashion_ref/external commonjs \"@mui/material/InputLabel\"","webpack://fashion_ref/external commonjs \"@mui/material/Menu\"","webpack://fashion_ref/external commonjs \"@mui/material/MenuItem\"","webpack://fashion_ref/external commonjs \"@mui/material/Modal\"","webpack://fashion_ref/external commonjs \"@mui/material/Paper\"","webpack://fashion_ref/external commonjs \"@mui/material/Select\"","webpack://fashion_ref/external commonjs \"@mui/material/TextField\"","webpack://fashion_ref/external commonjs \"@mui/material/Toolbar\"","webpack://fashion_ref/external commonjs \"@mui/material/Typography\"","webpack://fashion_ref/external commonjs \"@mui/material/styles\"","webpack://fashion_ref/external commonjs \"next-redux-wrapper\"","webpack://fashion_ref/external commonjs \"next/head\"","webpack://fashion_ref/external commonjs \"react\"","webpack://fashion_ref/external commonjs \"react-redux\"","webpack://fashion_ref/external commonjs \"react/jsx-runtime\"","webpack://fashion_ref/external commonjs \"redux\"","webpack://fashion_ref/external commonjs \"redux-devtools-extension\"","webpack://fashion_ref/external commonjs \"redux-saga/effects\"","webpack://fashion_ref/external module \"@redux-saga/core\"","webpack://fashion_ref/external module \"axios\"","webpack://fashion_ref/external module \"immer\"","webpack://fashion_ref/external module \"redux-saga\""],"sourcesContent":["import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft';\r\nimport Brightness1RoundedIcon from '@mui/icons-material/Brightness1Rounded';\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  DELETE_POST_REQUEST,\r\n  DUPLICATE_POST_REQUEST,\r\n  HASHTAG_SEARCH_REQUEST,\r\n  LIKE_POST_REQUEST,\r\n  loadPost,\r\n  UNLIKE_POST_REQUEST,\r\n} from \"@/reducers/post\";\r\nimport FavoriteBorderTwoToneIcon from \"@mui/icons-material/FavoriteBorderTwoTone\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport Upload from \"./Upload\";\r\n\r\ntype CardpostProps = {\r\n  index: number;\r\n  // posts: any[];\r\n  category: string;\r\n  id: number;\r\n  brand: string;\r\n  link: string;\r\n  Images: {\r\n    src: string;\r\n  }[];\r\n  season: string;\r\n  reason: string;\r\n  name: string;\r\n  hashtags: {\r\n    PostHashtag: {\r\n      HashtagId: number;\r\n    };\r\n    name: string;\r\n  }[];\r\n  likers: any[];\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst StyledCardAction = styled(CardActions)`\r\n  display: flex;\r\n  -webkit-box-align: center;\r\n  align-items: center;\r\n  padding: 8px;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport default function Cardpost(props: CardpostProps) {\r\n  const { logInDone } = useSelector((state: any) => state.user);\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n  const dispatch = useDispatch();\r\n  // const isLoggedIn = false;\r\n  const [like, setLike] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [likeClick, setLikeClick] = useState(props.likers?.length || 0);\r\n  const [loginModalOpen, setIsLoginFormOpen] = useState(false);\r\n  const [isUploadFormOpen, setIsUploadFormOpen] = useState(false);\r\n  const [imageIndex, setImageIndex] = useState(0);\r\n\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [ImagePath, setImagePath] = React.useState(\"\");\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    if (user) {\r\n      setLike((prev) => !prev);\r\n\r\n      if (!like) {\r\n        dispatch({\r\n          type: LIKE_POST_REQUEST,\r\n          data: props.id,\r\n        });\r\n        setLikeClick((prev) => prev + 1);\r\n      } else {\r\n        dispatch({\r\n          type: UNLIKE_POST_REQUEST,\r\n          data: props.id,\r\n        });\r\n        setLikeClick((prev) => prev - 1);\r\n      }\r\n    } else {\r\n      alert(\"로그인 해주세요\");\r\n      setIsLoginFormOpen(true);\r\n      //로그인 모달 띄우기 넣어야\r\n    }\r\n  }, [user, like, props.id]);\r\n\r\n  const delClick = useCallback(() => {\r\n    if (user) {\r\n      setModalOpen(true);\r\n    } else {\r\n      alert(\"로그인 해주세요\");\r\n      setIsLoginFormOpen(true);\r\n      //로그인 모달 띄우기 넣어야\r\n    }\r\n  }, [user]);\r\n\r\n  const duplicateClick = useCallback(() => {\r\n    if (!user) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n\r\n    return dispatch({\r\n      type: DUPLICATE_POST_REQUEST,\r\n      data: props.id,\r\n    });\r\n  }, [dispatch, props.id, user]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      if (!user) {\r\n        return alert(\"로그인이 필요합니다.\");\r\n      }\r\n\r\n      return dispatch({\r\n        type: DELETE_POST_REQUEST,\r\n        data: props.id,\r\n      });\r\n    },\r\n    [dispatch, props.id, user]\r\n  );\r\n\r\n  const editClick = useCallback(() => {\r\n    if (!user) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n    setIsUploadFormOpen(true);\r\n    setIsEdit(true);\r\n\r\n    // alert(\"준비중입니다.\");\r\n  }, [props.id, user, setIsUploadFormOpen]);\r\n\r\n  useEffect(() => {\r\n    if (props.Images[imageIndex] == undefined) {\r\n    } else {\r\n      // console.log(\"props\")\r\n      // console.log(props)\r\n      setImagePath(`../${props.Images[imageIndex].src}`);\r\n    }\r\n  }, [props.Images,imageIndex]);\r\n\r\n  const onClickRightArrow = useCallback(()=>{\r\n    if(imageIndex < props.Images.length){\r\n      setImageIndex((prev)=> prev+1)\r\n    }\r\n  },[props.Images, imageIndex])\r\n  \r\n  const onClickLeftArrow = useCallback(()=>{\r\n    if(imageIndex > 0){\r\n      setImageIndex((prev)=> prev-1)\r\n    }\r\n  },[imageIndex])\r\n\r\n\r\n  const TagClick = React.useCallback(\r\n    (e: any, hashname: string) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      dispatch({\r\n        type: HASHTAG_SEARCH_REQUEST,\r\n        data: {\r\n          hashtags: \"#\" + hashname,\r\n        },\r\n      });\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    },\r\n    [dispatch, props]\r\n  );\r\n\r\n  useEffect(() => {\r\n    //like 눌렀는지\r\n    if (user?.data && props.likers) {\r\n      const isUserLiked = props.likers.find((v) => v.id === user?.data.id);\r\n      if (isUserLiked) setLike(true);\r\n      else setLike(false);\r\n    }\r\n  }, [props.likers, user, props.id, logInDone]);\r\n\r\n  return (\r\n    <>\r\n      {isUploadFormOpen && (\r\n        <Upload\r\n          setImageIndex ={setImageIndex}\r\n          setuploadModalOpen={setIsUploadFormOpen}\r\n          uploadModalOpen={isUploadFormOpen}\r\n          isEdit={isEdit}\r\n          setIsEdit ={setIsEdit}\r\n          postId={props.id}\r\n          clipboardFile={null}\r\n        />\r\n      )}\r\n      {loginModalOpen && (\r\n        <LoginForm\r\n          loginModalOpen={loginModalOpen}\r\n          setloginModalOpen={setIsLoginFormOpen}\r\n        />\r\n      )}\r\n      {modalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closeModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={onSubmit}\r\n            sx={style}\r\n          >\r\n            {/* <form onSubmit={onSubmit}> */}\r\n            <Typography\r\n              component=\"h2\"\r\n              variant=\"h5\"\r\n              sx={{ textAlign: \"center\", marginBottom: \"15px\" }}\r\n            >\r\n              정말 삭제하시겠습니까?\r\n            </Typography>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              sx={{\r\n                mt: 3,\r\n                mb: 2,\r\n                width: \"40%\",\r\n                marginLeft: \"5%\",\r\n                marginRight: \"10%\",\r\n              }}\r\n              size=\"large\"\r\n            >\r\n              삭제\r\n            </Button>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2, width: \"40%\" }}\r\n              size=\"large\"\r\n              onClick={closeModal}\r\n            >\r\n              취소\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Card\r\n        sx={{\r\n          maxWidth: \"15\",\r\n          marginTop: \"20px\",\r\n          // borderRadius: \"24px\",\r\n          boxShadow: \"none\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        {/* <Typography>\r\n          <span style={{ float: \"left\", color: \"#A6A6A6\", fontSize: \"80%\" }}>\r\n            {props.name}문병욱\r\n          </span>\r\n        </Typography> */}\r\n        <CardActionArea href={`${props.link}`} target=\"_blank\">\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"400\"\r\n            image={ImagePath}\r\n            // alt=\"이미지 오류, 삭제 후 다시 등록해주세요\"\r\n          />\r\n        </CardActionArea>\r\n        {props.Images && props.Images.length > 1 && (\r\n          <>\r\n            <ArrowRightIcon\r\n              onClick={onClickRightArrow}\r\n              style={{ position: \"absolute\", top: \"30%\", right: \"0%\", zIndex: 100, color:\"#3D3D3D\", cursor:\"pointer\"}}\r\n            />\r\n            <Brightness1RoundedIcon \r\n              style={{ position: \"absolute\", top: \"30%\", right: \"0%\", color:\"#B5B5B7\" }}\r\n            />\r\n            <ArrowLeftIcon\r\n              onClick={onClickLeftArrow}\r\n              style={{ position: \"absolute\", top: \"30%\", left: \"0%\", zIndex: 100, color:\"#3D3D3D\",cursor:\"pointer\" }}\r\n            />\r\n            <Brightness1RoundedIcon \r\n              style={{ position: \"absolute\", top: \"30%\", left: \"0%\", color:\"#B5B5B7\" }}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        <CardContent>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              marginBottom: \"3%\",\r\n              display: \"inline-block\",\r\n            }}\r\n          >\r\n            <FileCopyIcon\r\n              id=\"copyicon\"\r\n              onClick={duplicateClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                marginRight: \"17px\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n            <EditIcon\r\n              id=\"editicon\"\r\n              onClick={editClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n            <DeleteIcon\r\n              id=\"delicon\"\r\n              onClick={delClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                marginLeft: \"17px\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n          </div>\r\n          <Typography>\r\n            <span\r\n              style={{\r\n                fontWeight: 900,\r\n                fontSize: \"130%\",\r\n                marginBottom: \"4%\",\r\n              }}\r\n            >\r\n              {`${props.brand}`}\r\n            </span>\r\n          </Typography>\r\n\r\n          {/* <span style={{fontWeight :900, fontSize: \"100%\", marginBottom: 5}}>\r\n            참고할 부분\r\n          </span> */}\r\n          <Typography\r\n            sx={{ fontWeight: 900, marginBottom: \"2%\" }}\r\n            variant=\"subtitle2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            참고할 부분\r\n          </Typography>\r\n\r\n          <Typography\r\n            sx={{ marginBottom: \"1%\" }}\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n        <StyledCardAction>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"inline-block\",\r\n              marginBottom: \"5px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: \"20%\",\r\n                marginBottom: \"3%\",\r\n                verticalAlign: \"center\",\r\n                display: \"inline-block\",\r\n                float: \"left\",\r\n              }}\r\n            >\r\n              {like ? (\r\n                <FavoriteIcon\r\n                  onClick={onToggleLike}\r\n                  sx={{ cursor: \"pointer\", opacity: \"80%\", color: \"#FF3040\" }}\r\n                />\r\n              ) : (\r\n                <FavoriteBorderTwoToneIcon\r\n                  onClick={onToggleLike}\r\n                  sx={{ cursor: \"pointer\", opacity: \"40%\" }}\r\n                />\r\n              )}\r\n              <span\r\n                style={{\r\n                  position: \"relative\",\r\n                  top: \"-7px\",\r\n                  marginLeft: \"5px\",\r\n                  color: \"#A6A6A6\",\r\n                }}\r\n              >\r\n                {likeClick ? likeClick : 0}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n          {/* <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${parseInt(props.season) % 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`TagCategory Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div> */}\r\n          {props.hashtags.map((hashtag, index) => (\r\n            <div style={{ margin: \"2px\" }} key={index}>\r\n              <div\r\n                className={`Tag${hashtag.PostHashtag.HashtagId % 8} Tag`}\r\n                style={{ display: \"inline-block\", margin: \"2px\" }}\r\n                onClick={(e) => {\r\n                  TagClick(e, hashtag.name);\r\n                }}\r\n              >\r\n                <a href=\"\">#{hashtag.name}</a>\r\n              </div>{\" \"}\r\n              &nbsp;\r\n            </div>\r\n          ))}\r\n\r\n          <div style={{ width: \"100%\" }}>\r\n            <span\r\n              style={{\r\n                float: \"left\",\r\n                color: \"#A6A6A6\",\r\n                fontSize: \"80%\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              작성자 : {props.name}\r\n            </span>\r\n          </div>\r\n        </StyledCardAction>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginRequestAction } from \"@/reducers/user\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  loginModalOpen : boolean;\r\n};\r\nexport default function LoginForm({\r\n  setloginModalOpen,\r\n  loginModalOpen,\r\n}: LoginFormProps): ReactElement {\r\n  \r\n  const dispatch = useDispatch();\r\n  const [isInitialOpen, setIsInitialOpen]= useState(true);\r\n  const {logInLoading} = useSelector((state : any) => state.user)\r\n  const {logInError} = useSelector((state : any) => state.user)\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback(\r\n    (event: any) => {\r\n      event.preventDefault();\r\n      if (email == \"\") {\r\n        alert(\"이메일을 입력해주세요\");\r\n      } else if (password == \"\") {\r\n        alert(\"비밀번호를 입력해주세요\");\r\n      } else {\r\n        dispatch(loginRequestAction({email,password}))\r\n        // setloginModalOpen(false);\r\n        // axios\r\n        //   .post(\r\n        //     LOGINAPI,\r\n        //     // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n        //     // 회원가입창에서 클라이언트가 입력하는 데이터\r\n        //     {\r\n        //       email: email,\r\n        //       password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n        //     },\r\n        //     {\r\n        //       headers: {\r\n        //         \"Content-Type\": \"application/json\",\r\n        //         // 'Accept': 'application/json',\r\n        //       },\r\n        //     }\r\n        //   )\r\n        //   .then((result) => {\r\n        //     setUser(result.data.data);\r\n        //     console.log(\"dispatch\");\r\n        //     dispatch(loginRequestAction(\"usersample\"));\r\n        //     // setIsLoggedIn(true);\r\n        //     setUserId(result.data.data.id);\r\n        //     setUserName(result.data.data.name);\r\n        //     setloginModalOpen(false);\r\n        //     console.log(result.data.data);\r\n        //     // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        //     // history.replace('/login');\r\n        //   })\r\n        //   .catch((error) => {\r\n        //     alert(\"로그인 정보가 일치하지 않습니다.\");\r\n        //     setloginModalOpen(false);\r\n        //     console.log(error);\r\n        //   });\r\n      }\r\n    },\r\n    [email, password, dispatch]\r\n  );\r\n\r\n  useEffect(()=>{\r\n    if(!logInLoading && !isInitialOpen){\r\n      setloginModalOpen(false);\r\n    }\r\n    setIsInitialOpen(false);\r\n\r\n  },[logInLoading])\r\n\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        {logInError && <span style={{marginTop:\"10px\", color:\"#F73334\"}}> 로그인 정보가 일치하지 않습니다.</span>}\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n          loading={logInLoading}\r\n        >\r\n          로그인\r\n        </LoadingButton>\r\n        {/* </form> */}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement, useRef } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/Signup\";\r\nimport Upload from \"@/Components/Upload\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginRequestAction, logoutRequestAction } from \"@/reducers/user\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { GET_HASHTAGS_REQUEST } from \"@/reducers/post\";\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\ntype NavbarProps = {\r\n  userId: string;\r\n  setUserId: any;\r\n  userName: string;\r\n  setUserName: any;\r\n};\r\n\r\nexport default function Navbar({\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: NavbarProps): ReactElement {\r\n\r\n  //redux\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { logOutLoading } = useSelector((state: any) => state.user);\r\n  const { hashtags } = useSelector((state: any) => state.post);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [clipboardFile, setClipboardFile] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const GETHASHAPI = `${process.env.NEXT_PUBLIC_API}/getHash`;\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n\r\n\r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    dispatch(logoutRequestAction());\r\n\r\n    //왜인지 모르겠는데 로그아웃 후 모달 켜짐\r\n    setloginModalOpen(false);\r\n  }, [dispatch]);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (user) {\r\n      setuploadModalOpen(true);\r\n    } else {\r\n      setloginModalOpen(true);\r\n      // setIsEdit(true);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onReady = useCallback(() => {\r\n    alert(\"준비중입니다.\");\r\n  }, []);\r\n\r\n  const getHashtags = useCallback(() => {\r\n    //dispatch\r\n    dispatch({\r\n      type: GET_HASHTAGS_REQUEST,\r\n    });\r\n    setShowHashModalOpen(true);\r\n  }, [dispatch]);\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <p>만드는 중입니다</p>\r\n      </MenuItem>\r\n      {/* <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>프로필</p>\r\n      </MenuItem> */}\r\n    </Menu>\r\n  );\r\n\r\n  useEffect(()=>{\r\n\r\n    if(!uploadModalOpen && user){\r\n      const handlePaste = (event : any)  => {\r\n        if(event.clipboardData.files.length >0){\r\n          setuploadModalOpen(true);\r\n          setClipboardFile(event.clipboardData.files)\r\n        }\r\n      };\r\n      window.addEventListener('paste', handlePaste);\r\n  \r\n      return () => {\r\n        window.removeEventListener('paste', handlePaste);\r\n      };\r\n    }\r\n\r\n  },[uploadModalOpen,user])\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {!user && isModalOpen && (\r\n        <Signup\r\n          isModalOpen={isModalOpen}\r\n          setIsModalOpen={setIsModalOpen}\r\n          userId={userId}\r\n          setUserId={setUserId}\r\n          userName={userName}\r\n          setUserName={setUserName}\r\n        />\r\n      )}\r\n      {user && uploadModalOpen && (\r\n        <Upload\r\n          setImageIndex={null}\r\n          uploadModalOpen={uploadModalOpen}\r\n          setuploadModalOpen={setuploadModalOpen}\r\n          isEdit={isEdit}\r\n          setIsEdit={setIsEdit}\r\n          postId={null}\r\n          clipboardFile={clipboardFile}\r\n        />\r\n      )}\r\n      {!user && loginModalOpen && (\r\n        <LoginForm\r\n          loginModalOpen={loginModalOpen}\r\n          setloginModalOpen={setloginModalOpen}\r\n        />\r\n      )}\r\n      {showHashModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closehashtagsModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <div\r\n              className=\"hashlistdiv\"\r\n              style={{ height: \"300px\", overflow: \"overlay\" }}\r\n            >\r\n              {hashtags &&\r\n                hashtags.map((hashtag: any, index: any) => (\r\n                  <li\r\n                    id=\"hashlist\"\r\n                    key={hashtag.id}\r\n                    style={{ listStyle: \"none\", marginBottom: \"5px\" }}\r\n                  >\r\n                    {\" \"}\r\n                    #{hashtag.name}\r\n                  </li>\r\n                ))}\r\n            </div>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closehashtagsModal}\r\n            >\r\n              확인\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          ></Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Searchbar />\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            <>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                sx={{ marginRight: \"10px\" }}\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"false\"\r\n                color=\"primary\"\r\n                onClick={uploadClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </>\r\n            {!user ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <LoadingButton\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"100%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                    whiteSpace: \"nowrap\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={Logout}\r\n                  loading={logOutLoading}\r\n                >\r\n                  로그아웃\r\n                </LoadingButton>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                  onClick={onReady}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" }, float: \"right\" }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect,useState, useRef } from \"react\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\ntype NoticeModalProps = {};\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function NoticeModal({}: NoticeModalProps) {\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const closeNoticeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    var now = new Date();\r\n    var date = now.getDate();\t// 일\r\n    if(date-31 ==0)\r\n      setIsModalOpen(true)\r\n  },[])\r\n  return (\r\n    <>\r\n      {isModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closeNoticeModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <h1 > 3.31 업데이트 안내 🐇</h1>\r\n            <p style={{marginTop:\"-20px\", marginBottom:\"20px\",color:\"#7F7F7F\"}}> *하루동안 떠요</p>\r\n            <h2 style={{marginBottom:\"10px\"}}> 기능 추가 목록 </h2>\r\n            <ol type=\"1\">\r\n              <li style={{marginBottom:\"10px\"}}> 이미지 복사 후 (클립보드 복사 or PrintScreen) </li>\r\n              <li style={{marginBottom:\"10px\"}}> 바탕화면에서 Ctrl + v 누르면 자동으로 이미지 등록 </li>\r\n              <li style={{marginBottom:\"10px\"}}> 업로드 화면에서도 마찬가지 </li>\r\n            </ol>\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closeNoticeModal}\r\n            >\r\n              확인\r\n            </Button>\r\n          </Box>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Cardpost from \"./Cardpost\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { useInput } from \"@mui/base\";\r\nimport axios from \"axios\";\r\nimport Image from \"next/image\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\ntype ResponsiveGridProps = {\r\n};\r\n\r\nexport default function ResponsiveGrid({}: ResponsiveGridProps) {\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n\r\n  useEffect(() => {\r\n  }, [postArray]);\r\n\r\n\r\n\r\n  //check if I like\r\n  return (\r\n    <>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Grid\r\n          container\r\n          spacing={{ xs: 2, md: 3 }}\r\n          columns={{ xs: 4, sm: 8, md: 12 }}\r\n        >\r\n          {postArray &&\r\n            (postArray as Array<any>).map((post, index) => (\r\n              <Grid item xs={6} sm={4} md={3} lg={4} key={post.id}>\r\n                <Item>\r\n                  <li\r\n                    style={{\r\n                      maxWidth: \"320px\",\r\n                      display: \"inline-block\",\r\n                      // marginRight: \"4%\",\r\n                      // marginLeft: \"1%\",\r\n                      // marginTop: \"1%\",-\r\n                    }}\r\n                  >\r\n                    <Cardpost\r\n                      index={index}\r\n                      name={post.name}\r\n                      // posts={postArray}\r\n                      id={post.id}\r\n                      likers={post.Likers}\r\n                      category={post.category}\r\n                      brand={post.brand}\r\n                      Images={post.Images}\r\n                      link={post.link}\r\n                      season={post.season}\r\n                      hashtags={post.Hashtags}\r\n                      reason={post.reason}\r\n                    />{\" \"}\r\n                  </li>\r\n                </Item>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { HASHTAG_SEARCH_REQUEST, loadPost } from \"@/reducers/post\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {useEffect, useRef} from 'react';\r\n\r\ntype SearchbarProps = {};\r\n\r\nexport default function Searchbar({}: SearchbarProps) {\r\n  const [value, onChangeValue, setValue] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (searchBar.current) {\r\n      searchBar.current.focus();\r\n    }\r\n  }, []);\r\n\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      // e.preventDeafult();\r\n      // e.stopPropagation();\r\n      if (value == \"\") {\r\n        dispatch(loadPost())\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        let upperCaseValue = value.toUpperCase();\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        dispatch({\r\n          type: HASHTAG_SEARCH_REQUEST,\r\n          data: {\r\n            hashtags: \"#\" + upperCaseValue,\r\n          }\r\n        })\r\n        setValue(\"\")\r\n      }\r\n    },\r\n    [dispatch, value]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={TagSearch}\r\n        style={{ width: \"70%\", flex: \"auto\", marginLeft: \"15%\" }}\r\n      >\r\n        <IconButton\r\n          type=\"submit\"\r\n          aria-label=\"search\"\r\n          sx={{ display: { xs: \"none\", md: \"inline-block\" } }}\r\n        >\r\n          <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n        </IconButton>\r\n        <TextField\r\n          id=\"search-bar\"\r\n          className=\"text\"\r\n          sx={{ display: \"inline-block\", width: \"80%\" }}\r\n          value={value}\r\n          onChange={onChangeValue}\r\n          label=\"#상의 #검정\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Search...\"\r\n          size=\"small\"\r\n          inputRef={searchBar}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginRequestAction } from \"@/reducers/user\";\r\n\r\ntype SignupProps = {\r\n  isModalOpen: boolean;\r\n  setIsModalOpen: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({\r\n  setIsModalOpen,\r\n  isModalOpen,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: SignupProps): ReactElement {\r\n  const dispatch = useDispatch();\r\n  const API = `${process.env.NEXT_PUBLIC_API}/signups`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password, setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email: any) => {\r\n    let res = false;\r\n\r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n\r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (password !== passwordCheck) {\r\n        setPasswordError(true);\r\n      } else if (!checkEmail(email)) {\r\n        setEmailError(true);\r\n      } else {\r\n        axios\r\n          .post(\r\n            API,\r\n            // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n            // 회원가입창에서 클라이언트가 입력하는 데이터\r\n            {\r\n              email: email,\r\n              name: nickname,\r\n              password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          // 그러면 서버에서 클라이언트로 response(응답)으로\r\n          // {ok: true} 아니면 {ok: false}가 온다.\r\n          // .then((response) => {\r\n          //   console.log(response); // response.data로 해야?\r\n          // })\r\n          .then((result) => {\r\n            dispatch(loginRequestAction())\r\n            setUserId(result.data.userId);\r\n            setUserName(result.data.userName);\r\n            closeModal();\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.data.message == \"already exist\") {\r\n              alert(\"이미 존재하는 이메일입니다.\");\r\n            } else {\r\n              alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n            }\r\n          });\r\n      }\r\n      // if (!term) {\r\n      //   return setTermError(true);\r\n      // }\r\n    },\r\n    [API, dispatch, setUserId, setUserName, email, password, passwordCheck, nickname]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\" sx={{ textAlign: \"center\" }}>\r\n          회원가입\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          // error={checkEmail(email)}\r\n          onChange={onChangeEmail}\r\n        />\r\n        {emailError && (\r\n          <span style={{ color: \"red\" }}>Email 형식이 잘못되었습니다</span>\r\n        )}\r\n        <TextField\r\n          label=\"이름\"\r\n          name=\"user-nick\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          onChange={onChangeNickname}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          fullWidth\r\n          name=\"user-password\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={password}\r\n          required\r\n          onChange={onChangePassword}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호체크\"\r\n          fullWidth\r\n          name=\"user-password-check\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={passwordCheck}\r\n          required\r\n          onChange={setPasswordCheck}\r\n        />\r\n        {passwordError && (\r\n          <span style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다</span>\r\n        )}\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    // {/* <div className={\"container\"} ref={modalRef}>\r\n    //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n    //       <br />\r\n    //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n    //     </TextField>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-nick\">닉네임</label>\r\n    //       <br />\r\n    //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password\">비밀번호</label>\r\n    //       <br />\r\n    //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n    //       <br />\r\n    //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n    //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n    //     </div>\r\n    //     {/* <div>\r\n    //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n    //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n    //     </div> */}\r\n    //     <div style={{ marginTop: 10 }}>\r\n    //       <button>가입하기</button>\r\n    //     </div>\r\n    //     <button className={\"close\"} onClick={closeModal}>\r\n    //         X\r\n    //     </button>\r\n    //   </div> */}\r\n    // }\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Router from \"next/router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  addPost,\r\n  ADD_POST_REQUEST,\r\n  EDIT_POST_REQUEST,\r\n  EDIT_POST_WITH_IMAGES_REQUEST,\r\n  GET_HASHTAGS_REQUEST,\r\n  loadPost,\r\n  TOGGLE_ADD_POST_DONE_REQUEST,\r\n  TOGGLE_EDIT_POST_DONE_REQUEST,\r\n  TOGGLE_EDIT_POST_WITH_IMAGES_DONE_REQUEST,\r\n} from \"@/reducers/post\";\r\nimport { and } from \"sequelize\";\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype UploadProps = {\r\n  setImageIndex : any;\r\n  setuploadModalOpen: any;\r\n  uploadModalOpen: boolean;\r\n  isEdit: boolean;\r\n  setIsEdit: any;\r\n  postId: number | null;\r\n  clipboardFile : any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload(props: UploadProps) {\r\n  const dispatch = useDispatch();\r\n  const [isInitialOpen, setIsInitialOpen] = useState(true);\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n  const { hashtags } = useSelector((state: any) => state.post);\r\n\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  const [imageFile, setImageFile] = useState<any>();\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [reason, onChangeReason, setReason] = useInput(\"\");\r\n  const [brand, onChangeBrand, setBrand] = useInput(\"\");\r\n  const [link, onChangeLink, setLink] = useInput(\"\");\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n  const { addPostLoading } = useSelector((state: any) => state.post);\r\n  const { addPostDone } = useSelector((state: any) => state.post);\r\n  const { editPostDone } = useSelector((state: any) => state.post);\r\n  const { editPostWithImagesDone } = useSelector((state: any) => state.post);\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const closeModal = useCallback(() => {\r\n    props.setuploadModalOpen(false);\r\n    setPost({\r\n      title: \"\",\r\n      desc: \"\",\r\n      photos: [null],\r\n    });\r\n    //저장하시겠습니까?\r\n  }, [props]);\r\n\r\n  const { title, desc, photos } = post;\r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n  const inputRef = useRef(null);\r\n  const [category, setCategory] = React.useState(\"상의\");\r\n  const [season, setSeason] = React.useState(\"23SS\");\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n  const [cardPost, setCardPost] = useState([]);\r\n\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = (files: FileList | null) => {\r\n    let photosArr: any[] = [];\r\n    let fileArr: any[] = [];\r\n    if (files != undefined) {\r\n      setIsImage(true);\r\n      for (let i = 0; i < files.length; i++) {\r\n        let file = files[i];\r\n        fileArr.push(file);\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.addEventListener(\"load\", () => {\r\n          let fileobj = {\r\n            name: file.name,\r\n            type: file.type,\r\n            size: file.size,\r\n            src: reader.result,\r\n          };\r\n          photosArr.push(fileobj);\r\n          setPost({\r\n            ...post,\r\n            photos: [...photos, ...photosArr],\r\n          });\r\n        });\r\n      }\r\n      setImageFile(fileArr);\r\n    }\r\n  };\r\n\r\n  const handeldelete = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    let target = (e.target as HTMLSpanElement).parentElement;\r\n    let targetindex = 1;\r\n    setPost({\r\n      ...post,\r\n      photos: [\r\n        ...photos.slice(0, targetindex),\r\n        ...photos.slice(targetindex + 1),\r\n      ],\r\n    });\r\n\r\n    // setImageFile( (prev) => prev.filter())\r\n\r\n    //이미지 다 없어지면 다시 업로드 창 뜨도록\r\n    if (post.photos.length == 2) {\r\n      //랜더링 되기 전이라 2\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  \r\n  //clipboard\r\n  useEffect(()=>{\r\n    if(!props.clipboardFile){\r\n      const handlePaste = (event : any)  => {\r\n        if(event.clipboardData.files.length >0){\r\n          handfiles(event.clipboardData.files)\r\n        }\r\n      };\r\n      window.addEventListener('paste', handlePaste);\r\n  \r\n      return () => {\r\n        window.removeEventListener('paste', handlePaste);\r\n      };\r\n    }\r\n    else{\r\n      handfiles(props.clipboardFile)\r\n    }\r\n  },[props.clipboardFile])\r\n\r\n\r\n\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(false);\r\n  }, []);\r\n  const handledrop = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let dt = e.dataTransfer;\r\n    let files = dt?.files;\r\n    setHighlight(false);\r\n    handfiles(files);\r\n  };\r\n\r\n  const [hashTags, setHashTags] = React.useState({\r\n    data: [{ name: \"\" }],\r\n  });\r\n\r\n  const getHashtags = useCallback(() => {\r\n    dispatch({\r\n      type: GET_HASHTAGS_REQUEST,\r\n    });\r\n    setShowHashModalOpen(true);\r\n  }, [dispatch]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if (brand == \"\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"브랜드입력 필수\");\r\n      } else {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        //수정일 때\r\n        if (props.isEdit) {\r\n          //이미지 새로 올렸을 때\r\n          if (imageFile) {\r\n            const formData = new FormData();\r\n            [].forEach.call(imageFile, (f) => {\r\n              formData.append(\"image\", f);\r\n            });\r\n            // formData.append(\"image\", imageFile as File);\r\n            formData.append(\"postId\", props.postId?.toString() as string);\r\n            formData.append(\"brand\", brand.replace(\" \", \"\"));\r\n            formData.append(\"link\", link);\r\n            formData.append(\"category\", category);\r\n            formData.append(\"season\", season);\r\n            formData.append(\"hashtag\", text);\r\n            formData.append(\"reason\", reason);\r\n            dispatch({\r\n              type: EDIT_POST_WITH_IMAGES_REQUEST,\r\n              data: formData,\r\n            });\r\n\r\n          } else {\r\n            if (post.photos.length == 1) {\r\n              alert(\"이미지 필수\");\r\n              return;\r\n            }\r\n\r\n            const formData = new FormData();\r\n            [].forEach.call(post.photos, (f: any, index) => {\r\n              if (index != 0) formData.append(\"imagePath\", f.src);\r\n            });\r\n            // formData.append(\"image\", imageFile as File);\r\n\r\n            formData.append(\"postId\", props.postId?.toString() as string);\r\n            formData.append(\"brand\", brand.replace(\" \", \"\"));\r\n            formData.append(\"link\", link);\r\n            formData.append(\"category\", category);\r\n            formData.append(\"season\", season);\r\n            formData.append(\"hashtag\", text);\r\n            formData.append(\"reason\", reason);\r\n            dispatch({\r\n              type: EDIT_POST_REQUEST,\r\n              data: formData,\r\n            });\r\n          }\r\n        }\r\n        //수정 아닐 떄\r\n        else {\r\n          if (!imageFile) {\r\n            alert(\"이미지 필수\");\r\n            return;\r\n          }\r\n          const formData = new FormData();\r\n          [].forEach.call(imageFile, (f) => {\r\n            formData.append(\"image\", f);\r\n          });\r\n          // formData.append(\"image\", imageFile as File);\r\n          formData.append(\"userId\", user.id);\r\n          formData.append(\"userName\", user.userName);\r\n          formData.append(\"brand\", brand.replace(\" \", \"\"));\r\n          formData.append(\"link\", link);\r\n          formData.append(\"category\", category);\r\n          formData.append(\"season\", season);\r\n          formData.append(\"hashtag\", text);\r\n          formData.append(\"reason\", reason);\r\n          dispatch(addPost(formData));\r\n        }\r\n\r\n      }\r\n    },\r\n    [\r\n      brand,\r\n      category,\r\n      season,\r\n      text,\r\n      reason,\r\n      link,\r\n      user,\r\n      dispatch,\r\n      imageFile,\r\n      post.photos,\r\n      props.isEdit,\r\n      props.postId,\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n\r\n    if (addPostDone) {\r\n      dispatch({\r\n        type:TOGGLE_ADD_POST_DONE_REQUEST,\r\n      });\r\n      closeModal();\r\n    }\r\n    if (editPostDone) {\r\n      dispatch({\r\n        type:TOGGLE_EDIT_POST_DONE_REQUEST,\r\n      });\r\n      closeModal();\r\n      props.setIsEdit(false);\r\n      if(props.setImageIndex)\r\n         props.setImageIndex(0);\r\n    }\r\n    if (editPostWithImagesDone) {\r\n      dispatch({\r\n        type:TOGGLE_EDIT_POST_WITH_IMAGES_DONE_REQUEST,\r\n      });\r\n      closeModal();\r\n      props.setIsEdit(false);\r\n      if(props.setImageIndex)\r\n         props.setImageIndex(0);\r\n    }\r\n\r\n\r\n  }, [addPostDone, dispatch, closeModal, editPostDone,props.setIsEdit, editPostWithImagesDone]);\r\n\r\n  useEffect(() => {\r\n    if (props.isEdit) {\r\n      const targetPost = postArray.find(\r\n        (post: any) => post.id === props.postId\r\n      );\r\n      setCardPost(targetPost.Images);\r\n      let postHashtags = \"\";\r\n      if (targetPost.Hashtags) {\r\n        targetPost.Hashtags.map(\r\n          (hashtag: any) =>\r\n            (postHashtags = postHashtags.concat(`#${hashtag?.name} `))\r\n        );\r\n      }\r\n      for (let i = 0; i < targetPost.Hashtags.length; i++) {\r\n        postHashtags.concat(`#${targetPost.Hashtags[i].name} `);\r\n      }\r\n      setCategory(targetPost.category);\r\n      setSeason(targetPost.season);\r\n      setText(postHashtags);\r\n      setBrand(targetPost.brand);\r\n      setReason(targetPost.reason);\r\n      setLink(targetPost.link);\r\n      setIsImage(true);\r\n      setPost({\r\n        ...post,\r\n        photos: photos.concat(targetPost.Images),\r\n      });\r\n    }\r\n  }, [props.isEdit, postArray]);\r\n\r\n\r\n  return (\r\n    <>\r\n      {showHashModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closehashtagsModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <div\r\n              className=\"hashlistdiv\"\r\n              style={{ height: \"300px\", overflow: \"overlay\" }}\r\n            >\r\n              {hashtags &&\r\n                hashtags.map((hashtag: any, index: number) => (\r\n                  <li id=\"hashlist\" key={index} style={{ listStyle: \"none\" }}>\r\n                    {\" \"}\r\n                    #{hashtag.name}\r\n                  </li>\r\n                ))}\r\n            </div>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closehashtagsModal}\r\n            >\r\n              확인\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Modal\r\n        open={true}\r\n        // onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box\r\n          component=\"form\"\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          onSubmit={onSubmit}\r\n          sx={style}\r\n        >\r\n          {/* <form onSubmit={onSubmit}> */}\r\n          <CloseIcon style={{position:\"absolute\", cursor:\"pointer\", top:\"15px\", right:\"15px\"}} onClick={closeModal}></CloseIcon>\r\n          <Typography sx={{ textAlign: \"center\" }} component=\"h1\" variant=\"h5\">\r\n            업로드\r\n          </Typography>\r\n          {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n          <TextField\r\n            required\r\n            label=\"브랜드\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-brand\"\r\n            type=\"text\"\r\n            value={brand}\r\n            variant=\"standard\"\r\n            onChange={onChangeBrand}\r\n          />\r\n          <TextField\r\n            label=\"Link\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={link}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeLink}\r\n          />\r\n\r\n          <TextField\r\n            label=\"선정이유\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={reason}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeReason}\r\n          />\r\n\r\n          <FormControl\r\n            sx={{ width: \"40%\", marginRight: \"10%\", marginTop: \"25px\" }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-label\">상의</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"상의\"}\r\n              value={category}\r\n              label=\"카테고리\"\r\n              required\r\n              onChange={handleCategoryChange}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl sx={{ width: \"40%\", marginTop: \"25px\" }}>\r\n            <InputLabel id=\"demo-simple-select-label\">23SS</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"23SS\"}\r\n              value={season}\r\n              label=\"시즌\"\r\n              required\r\n              onChange={handleSeasonChange}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            sx={{ marginTop: \"30px\" }}\r\n            value={text}\r\n            onChange={onChangeText}\r\n            fullWidth\r\n            label=\"해시태그입력 #검정 #반팔 \"\r\n            variant=\"outlined\"\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n          <div className=\"file-upload\" style={{ marginTop: \"10px\" }}>\r\n            <div className=\"custom-form-group\">\r\n              {!isImage && (\r\n                <div\r\n                  className={\r\n                    highlight\r\n                      ? \"custom-file-drop-area highlight\"\r\n                      : \"custom-file-drop-area\"\r\n                  }\r\n                  onDragEnter={handlehighlight}\r\n                  onDragOver={handlehighlight}\r\n                  onDragLeave={handleunhighlight}\r\n                  onDrop={handledrop}\r\n                >\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"photos\"\r\n                    placeholder=\"Enter photos\"\r\n                    multiple={false}\r\n                    id=\"filephotos\"\r\n                    onChange={handlefilechange}\r\n                  />\r\n                  <label htmlFor=\"filephotos\">\r\n                    이미지를 드래그해서 넣어주세요\r\n                  </label>\r\n                </div>\r\n              )}\r\n              <div className=\"custom-file-preview\">\r\n                {photos.length > 0 &&\r\n                  photos.map((item: any, index) =>\r\n                    index != 0 ? (\r\n                      <div className=\"prev-img\" key={index}>\r\n                        <span onClick={handeldelete}>&times;</span>\r\n                        {item && <img src={item.src} alt={item.name} />}\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )\r\n                  )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            id=\"submit_bt\"\r\n            style={{ display: \"none\" }}\r\n            type=\"submit\"\r\n          ></button>\r\n          <LoadingButton\r\n            type=\"submit\"\r\n            loading={addPostLoading}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            size=\"large\"\r\n            // loading={true}\r\n          >\r\n            확인\r\n          </LoadingButton>\r\n          {/* </form> */}\r\n        </Box>\r\n        {/* <Button onClick={closeModal}>닫기</Button> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios, { AxiosHeaders } from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport {\n  initialState as postinitialState,\n  LOAD_POST_REQUEST,\n  RELOAD_POST_REQUEST,\n} from \"@/reducers/post\";\nimport { initialState as userinitialState } from \"@/reducers/user\";\nimport React, { useCallback, useState, useEffect, useMemo } from \"react\";\nimport { loadPost } from \"@/reducers/post\";\nimport { loadUser } from \"@/reducers/user\";\nimport { useDispatch } from \"react-redux\";\nimport wrapper from \"@/store/configureStore\";\nimport { END } from \"redux-saga\";\nimport NoticeModal from \"@/Components/NoticeModal\";\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie: any = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch(loadPost());\n    context.store.dispatch(loadUser());\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default function Home() {\n  // const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  const { user } = useSelector((state: any) => state.user);\n  const { loadPostLoading } = useSelector((state: any) => state.post);\n  const { onInfiniteScroll } = useSelector((state: any) => state.post);\n  const { hasMorePost } = useSelector((state: any) => state.post);\n  const { postArray } = useSelector((state: any) => state.post);\n  const dispatch = useDispatch();\n\n  const [userId, setUserId] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [resultStore, setResultStore] = useState([]);\n\n  useEffect(() => {\n    function onScroll() {\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 350\n      ) {\n        if (hasMorePost && !loadPostLoading && onInfiniteScroll) {\n          const lastId = postArray[postArray.length - 1].id;\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data: lastId,\n          });\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePost, loadPostLoading, dispatch, postArray, onInfiniteScroll]);\n\n\n  const loadPosts = useCallback(() => {\n    dispatch({\n      type: RELOAD_POST_REQUEST,\n    })\n    dispatch(loadPost());\n  }, [dispatch]);\n\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n\n      <NoticeModal />\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPosts}>\n          <h1 id=\"title\" style={{ cursor: \"pointer\" }}>\n            CRUMP REFERENCE\n          </h1>\n        </a>\n        <div style={{ marginBottom: \"40px\" }}>\n          <Navbar\n            userId={userId}\n            setUserId={setUserId}\n            userName={userName}\n            setUserName={setUserName}\n          />\n        </div>\n        <ResponsiveGrid />\n        {/* <div>\n          <Stack spacing={2} sx={{alignItems:\"center\", marginTop:\"30px\", marginBottom:\"50px\"}}>\n            <Pagination page={page} count={count} color=\"primary\" onChange={handleChange}/>\n          </Stack>\n        </div> */}\n        {loadPostLoading && <div id=\"bottomloading\" ><span style={{fontSize : \"240%\"}}> 로딩중...</span></div>}\n      </div>\n    </>\n  );\n}\n","module.exports = require(\"@mui/icons-material/AccountCircle\");","module.exports = require(\"@mui/icons-material/Add\");","module.exports = require(\"@mui/icons-material/ArrowLeft\");","module.exports = require(\"@mui/icons-material/ArrowRight\");","module.exports = require(\"@mui/icons-material/Brightness1Rounded\");","module.exports = require(\"@mui/icons-material/Close\");","module.exports = require(\"@mui/icons-material/Delete\");","module.exports = require(\"@mui/icons-material/Edit\");","module.exports = require(\"@mui/icons-material/Favorite\");","module.exports = require(\"@mui/icons-material/FavoriteBorderTwoTone\");","module.exports = require(\"@mui/icons-material/FileCopy\");","module.exports = require(\"@mui/icons-material/MoreVert\");","module.exports = require(\"@mui/icons-material/Search\");","module.exports = require(\"@mui/lab\");","module.exports = require(\"@mui/lab/LoadingButton\");","module.exports = require(\"@mui/material\");","module.exports = require(\"@mui/material/AppBar\");","module.exports = require(\"@mui/material/Box\");","module.exports = require(\"@mui/material/Button\");","module.exports = require(\"@mui/material/Card\");","module.exports = require(\"@mui/material/CardContent\");","module.exports = require(\"@mui/material/CardMedia\");","module.exports = require(\"@mui/material/FormControl\");","module.exports = require(\"@mui/material/Grid\");","module.exports = require(\"@mui/material/IconButton\");","module.exports = require(\"@mui/material/InputLabel\");","module.exports = require(\"@mui/material/Menu\");","module.exports = require(\"@mui/material/MenuItem\");","module.exports = require(\"@mui/material/Modal\");","module.exports = require(\"@mui/material/Paper\");","module.exports = require(\"@mui/material/Select\");","module.exports = require(\"@mui/material/TextField\");","module.exports = require(\"@mui/material/Toolbar\");","module.exports = require(\"@mui/material/Typography\");","module.exports = require(\"@mui/material/styles\");","module.exports = require(\"next-redux-wrapper\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"react/jsx-runtime\");","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"redux-saga/effects\");","module.exports = import(\"@redux-saga/core\");;","module.exports = import(\"axios\");;","module.exports = import(\"immer\");;","module.exports = import(\"redux-saga\");;"],"names":["React","Card","experimentalStyled","styled","CardContent","CardMedia","Typography","DeleteIcon","EditIcon","Button","CardActionArea","CardActions","useCallback","useEffect","useState","Modal","Box","FileCopyIcon","ArrowRightIcon","ArrowLeftIcon","Brightness1RoundedIcon","FavoriteIcon","useSelector","useDispatch","DELETE_POST_REQUEST","DUPLICATE_POST_REQUEST","HASHTAG_SEARCH_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","FavoriteBorderTwoToneIcon","LoginForm","Upload","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","StyledCardAction","Cardpost","props","logInDone","state","user","postArray","post","dispatch","like","setLike","isEdit","setIsEdit","likeClick","setLikeClick","likers","length","loginModalOpen","setIsLoginFormOpen","isUploadFormOpen","setIsUploadFormOpen","imageIndex","setImageIndex","modalOpen","setModalOpen","ImagePath","setImagePath","closeModal","onToggleLike","prev","type","data","id","alert","delClick","duplicateClick","onSubmit","e","preventDefault","stopPropagation","editClick","Images","undefined","src","onClickRightArrow","onClickLeftArrow","TagClick","hashname","hashtags","window","scrollTo","behavior","isUserLiked","find","v","setuploadModalOpen","uploadModalOpen","postId","clipboardFile","setloginModalOpen","open","onClose","aria-labelledby","aria-describedby","component","noValidate","autoComplete","sx","variant","textAlign","marginBottom","mt","mb","marginLeft","marginRight","size","fullWidth","onClick","maxWidth","marginTop","href","link","target","height","image","right","zIndex","color","cursor","div","display","opacity","span","fontWeight","fontSize","brand","reason","verticalAlign","float","map","hashtag","index","margin","className","PostHashtag","HashtagId","name","a","useInput","LoadingButton","TextField","loginRequestAction","isInitialOpen","setIsInitialOpen","logInLoading","logInError","email","onChangeEmail","password","onChangePassword","onSubmitForm","event","label","value","required","onChange","loading","AppBar","Toolbar","IconButton","MenuItem","Menu","AddIcon","AccountCircle","MoreIcon","Signup","logoutRequestAction","Searchbar","GET_HASHTAGS_REQUEST","background","padding","modalstyle","Navbar","userId","setUserId","userName","setUserName","logOutLoading","setClipboardFile","GETHASHAPI","process","env","NEXT_PUBLIC_API","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isModalOpen","setIsModalOpen","showHashModalOpen","setShowHashModalOpen","closehashtagsModal","showModal","showLoginModal","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","Logout","uploadClick","handleMobileMenuOpen","onReady","getHashtags","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","handlePaste","clipboardData","files","addEventListener","removeEventListener","flexGrow","overflow","li","listStyle","backgroundColor","whiteSpace","noWrap","xs","sm","md","edge","aria-label","aria-haspopup","aria-controls","useRef","NoticeModal","onChangeValue","searchBar","closeNoticeModal","now","Date","date","getDate","h1","h2","ol","br","Paper","Grid","Item","theme","palette","mode","typography","body2","spacing","text","secondary","ResponsiveGrid","container","columns","item","lg","Likers","category","season","Hashtags","SearchIcon","loadPost","setValue","current","focus","TagSearch","split","upperCaseValue","toUpperCase","form","flex","fill","placeholder","inputRef","axios","API","emailError","setEmailError","nickname","onChangeNickname","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","checkEmail","res","check","test","headers","then","result","catch","error","response","message","FormControl","InputLabel","CloseIcon","Select","addPost","EDIT_POST_REQUEST","EDIT_POST_WITH_IMAGES_REQUEST","TOGGLE_ADD_POST_DONE_REQUEST","TOGGLE_EDIT_POST_DONE_REQUEST","TOGGLE_EDIT_POST_WITH_IMAGES_DONE_REQUEST","fileTypes","file","setFile","imageFile","setImageFile","isImage","setIsImage","highlight","setHighlight","onChangeReason","setReason","onChangeBrand","setBrand","onChangeLink","setLink","addPostLoading","addPostDone","editPostDone","editPostWithImagesDone","setPost","title","desc","photos","setCategory","setSeason","onChangeText","setText","cardPost","setCardPost","handleCategoryChange","handleSeasonChange","handlefilechange","handfiles","photosArr","fileArr","i","push","reader","FileReader","readAsDataURL","fileobj","handeldelete","parentElement","targetindex","slice","handlehighlight","handleunhighlight","handledrop","dt","dataTransfer","hashTags","setHashTags","formData","FormData","forEach","call","f","append","toString","replace","targetPost","postHashtags","concat","labelId","defaultValue","onDragEnter","onDragOver","onDragLeave","onDrop","input","multiple","htmlFor","img","alt","button","initValue","setter","handler","Head","LOAD_POST_REQUEST","RELOAD_POST_REQUEST","loadUser","wrapper","END","getServerSideProps","context","cookie","req","defaults","Cookie","store","sagaTask","toPromise","Home","loadPostLoading","onInfiniteScroll","hasMorePost","resultStore","setResultStore","onScroll","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","loadPosts","meta","content"],"sourceRoot":""}