[{"C:\\Users\\User\\Fashion_ref\\fashion_ref\\pages\\api\\hello.ts":"1","C:\\Users\\User\\Fashion_ref\\fashion_ref\\pages\\index.tsx":"2","C:\\Users\\User\\Fashion_ref\\fashion_ref\\pages\\_app.tsx":"3","C:\\Users\\User\\Fashion_ref\\fashion_ref\\pages\\_document.tsx":"4","C:\\Users\\User\\Fashion_ref\\fashion_ref\\components\\AlignItemsList.tsx":"5","C:\\Users\\User\\Fashion_ref\\fashion_ref\\components\\LoginForm.tsx":"6","C:\\Users\\User\\Fashion_ref\\fashion_ref\\components\\Navbar.tsx":"7","C:\\Users\\User\\Fashion_ref\\fashion_ref\\components\\ResponsiveGrid.tsx":"8","C:\\Users\\User\\Fashion_ref\\fashion_ref\\pages\\userpage.tsx":"9","C:\\Users\\User\\Fashion_ref\\fashion_ref\\components\\signup.tsx":"10","C:\\Users\\User\\Fashion_ref\\fashion_ref\\components\\upload.tsx":"11"},{"size":307,"mtime":1677716392716,"results":"12","hashOfConfig":"13"},{"size":2105,"mtime":1678415933903,"results":"14","hashOfConfig":"13"},{"size":179,"mtime":1678413553473,"results":"15","hashOfConfig":"13"},{"size":231,"mtime":1677718227519,"results":"16","hashOfConfig":"13"},{"size":4265,"mtime":1678430152571,"results":"17","hashOfConfig":"13"},{"size":3566,"mtime":1678416850407,"results":"18","hashOfConfig":"13"},{"size":16832,"mtime":1678752407317,"results":"19","hashOfConfig":"13"},{"size":1718,"mtime":1678413550280,"results":"20","hashOfConfig":"13"},{"size":112,"mtime":1678413553474,"results":"21","hashOfConfig":"13"},{"size":8040,"mtime":1678415871158,"results":"22","hashOfConfig":"13"},{"size":12923,"mtime":1678426137477,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8ufcd9",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"C:\\Users\\User\\Fashion_ref\\fashion_ref\\pages\\api\\hello.ts",[],[],"C:\\Users\\User\\Fashion_ref\\fashion_ref\\pages\\index.tsx",[],[],"C:\\Users\\User\\Fashion_ref\\fashion_ref\\pages\\_app.tsx",[],[],"C:\\Users\\User\\Fashion_ref\\fashion_ref\\pages\\_document.tsx",[],[],"C:\\Users\\User\\Fashion_ref\\fashion_ref\\components\\AlignItemsList.tsx",["59"],[],"import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport {useCallback, useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\ntype AlignItemsListProps = {\r\n  category: number;\r\n  brand: string;\r\n  link: string;\r\n  src: string;\r\n  season: number;\r\n  reason: string;\r\n  hashtags: any[];\r\n  id : number,\r\n  setPost: any;\r\n  posts : any[];\r\n  index : number;\r\n  name : string;\r\n};\r\n\r\nconst category = {\r\n  상의: 1,\r\n  하의: 2,\r\n  아우터: 3,\r\n  디테일: 4,\r\n  이미지: 5,\r\n  악세사리: 6,\r\n};\r\n\r\nconst season = {\r\n  \"23SS\": 7,\r\n  \"23FW\": 8,\r\n};\r\nexport default function AlignItemsList(props: AlignItemsListProps) {\r\n\r\n  const [category, setCategory] = useState(\"\")\r\n  const [season, setSeason] = useState(\"\")\r\n\r\n\r\n  const DELAPI = `http://15.164.224.172:8080/deletpost/${props.id}`\r\n  console.log(DELAPI)\r\n  const delClick = useCallback(()=>{\r\n    axios.post(DELAPI,{\r\n    }).then((result)=>{\r\n      console.log(props.id)\r\n      const Posts = props.posts.filter((post)=> post.id !== props.id)\r\n      props.setPost(Posts);\r\n      console.log(Posts);\r\n    })\r\n    .catch((err)=>{\r\n\r\n      console.log(err)\r\n    })\r\n  },[DELAPI,props])\r\n  const editClick = useCallback(()=>{\r\n    alert(\"만드는 중입니다..\");\r\n  },[])\r\n  \r\n  console.log(\"rendered\");\r\n  useEffect(()=>{\r\n    if(props.category == 10){      \r\n      setCategory(\"상의\")\r\n    }\r\n    else if(props.category == 20){\r\n      setCategory(\"하의\")\r\n    }\r\n    else if(props.category == 30){\r\n      setCategory(\"아우터\")\r\n    }\r\n    else if(props.category == 40){\r\n      setCategory(\"디테일\")\r\n    }\r\n    else if(props.category == 50){\r\n      setCategory(\"이미지\")\r\n    }\r\n    else if(props.category == 60){\r\n      setCategory(\"악세사리\")\r\n    }\r\n    \r\n    if(props.season == 10){   \r\n      setSeason(\"23SS\")\r\n    }\r\n    else if(props.category == 20){\r\n      setSeason(\"23FW\")\r\n    }\r\n  },[props.category, props.category])\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        maxWidth: \"15\",\r\n        marginTop: \"20px\",\r\n        // borderRadius: \"24px\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <CardActionArea href={`${props.link}`} target='_blank'>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"300\"\r\n          image={`../${props.src}`}\r\n          alt=\"green iguana\"\r\n        />\r\n        <CardContent>\r\n          <span style={{fontWeight :900, fontSize: \"130%\"}}>\r\n            {props.name}_{`${props.brand}`}_ {props.id}\r\n          </span>\r\n\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            참고할 부분 {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <div style={{width:\"100%\"}}>\r\n          <EditIcon id=\"editicon\" onClick={editClick}/>\r\n          <DeleteIcon id=\"delicon\" onClick={delClick}/>\r\n        </div>\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${props.category / 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className=\"Tag1 Tag\"\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        {props.hashtags.map((hashtag, index) => (\r\n          <div style={{ margin: \"2px\" }} key={index}>\r\n            <div\r\n              className={`Tag${parseInt(hashtag.id) % 8} Tag`}\r\n              style={{ display: \"inline-block\", margin: \"2px\" }}\r\n            >\r\n              <a href=\"\">#{hashtag.name}</a>\r\n            </div>{\" \"}\r\n            &nbsp;\r\n          </div>\r\n        ))}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\User\\Fashion_ref\\fashion_ref\\components\\LoginForm.tsx",[],[],"C:\\Users\\User\\Fashion_ref\\fashion_ref\\components\\Navbar.tsx",[],[],"C:\\Users\\User\\Fashion_ref\\fashion_ref\\components\\ResponsiveGrid.tsx",[],[],"C:\\Users\\User\\Fashion_ref\\fashion_ref\\pages\\userpage.tsx",[],[],"C:\\Users\\User\\Fashion_ref\\fashion_ref\\components\\signup.tsx",[],[],"C:\\Users\\User\\Fashion_ref\\fashion_ref\\components\\upload.tsx",["60"],[],"import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\ntype UploadProps = {\r\n  setuploadModalOpen: any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload({ setuploadModalOpen }: UploadProps) {\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  // const handleChange = (file: any) => {\r\n  //   setFile(file);\r\n  //   console.log(file);\r\n  // };\r\n  const API = \"http://15.164.224.172:8080/uploads\";\r\n  const [imageFile, setImageFile] = useState<File>();\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [reason, onChangeReason] = useInput(\"\");\r\n  const [brand, onChangeBrand] = useInput(\"\");\r\n  const [link, onChangeLink] = useInput(\"\");\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const closeModal = () => {\r\n    setuploadModalOpen(false);\r\n  };\r\n  const { title, desc, photos } = post;\r\n  // const handlechange = e =>{\r\n  //   setPost({\r\n  //     ...post,\r\n  //     [e.target.name]: e.target.value;\r\n  //   })\r\n  // }\r\n\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n\r\n  const [text, onChangeText, setText] = useInput('');\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = (files: FileList | null) => {\r\n    let photosArr: any[] = [];\r\n    if (files != undefined) {\r\n      if (files.length > 1) {\r\n        alert(\"이미지는 1개만 넣어주세요\");\r\n      } else {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          setImageFile(files[i]);\r\n          console.log(files[i]);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              photos: [...photos, ...photosArr],\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handeldelete = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    let target = (e.target as HTMLSpanElement).parentElement;\r\n    console.log(target?.dataset);\r\n    let targetindex = 1;\r\n    console.log(targetindex);\r\n    setPost({\r\n      ...post,\r\n      photos: [\r\n        ...photos.slice(0, targetindex),\r\n        ...photos.slice(targetindex + 1),\r\n      ],\r\n    });\r\n    console.log(photos);\r\n    setIsImage(false);\r\n  };\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    console.log(\"leave\");\r\n    setHighlight(false);\r\n  }, []);\r\n  const handledrop = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let dt = e.dataTransfer;\r\n    let files = dt?.files;\r\n    setHighlight(false);\r\n    handfiles(files);\r\n  };\r\n\r\n  const uploadClick = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const USERINFOAPI = `http://15.164.224.172:8080/USERINFO`\r\n  const [userInfo, setUserInfo]= useState({name : \"\"});\r\n\r\n  useEffect(()=>{\r\n    axios.get(USERINFOAPI,{\r\n    }).then((result)=>{\r\n      console.log(result.data)\r\n      setUserInfo(result.data)\r\n    })\r\n    .catch((err)=>{\r\n\r\n      console.log(err)\r\n    })\r\n  },[]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if(category==\"\" || season==\"\"){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"카테고리, 시즌 필수\")\r\n      }\r\n      else if(brand==\"\" || link ==\"\"){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"브랜드, 링크 입력 필수\")\r\n      }\r\n      else if(imageFile == undefined){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"이미지 필수\")\r\n\r\n      }\r\n      else{\r\n        // e.preventDefault();\r\n        // e.stopPropagation();\r\n\r\n        console.log(imageFile);\r\n        const formData = new FormData();\r\n        formData.append(\"image\", imageFile as File);\r\n        formData.append(\"nickname\", nickname);\r\n        formData.append(\"brand\", brand);\r\n        formData.append(\"link\", link);\r\n        formData.append(\"category\", category);\r\n        formData.append(\"season\", season);\r\n        formData.append(\"hashtag\", text);\r\n        // alert(formData)\r\n        axios.post(API, formData)\r\n        .then((result)=>{\r\n          console.log(\"result\")\r\n          console.log(result) \r\n        })\r\n        .catch((err)=>{\r\n          console.log(err);\r\n        });\r\n      }\r\n      //   axios\r\n      //     .post(\r\n      //       API,\r\n      //       // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n      //       // 회원가입창에서 클라이언트가 입력하는 데이터\r\n      //       {\r\n      //         nickname: nickname,\r\n      //         brand: brand,\r\n      //         link: link, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n      //         image : (imageFile as File).name\r\n      //       },\r\n      //       {\r\n      //         headers: {\r\n      //           \"Content-Type\": \"application/json\",\r\n      //           // 'Accept': 'application/json',\r\n      //         },\r\n      //       }\r\n      //     )\r\n      //     // 그러면 서버에서 클라이언트로 response(응답)으로\r\n      //     // {ok: true} 아니면 {ok: false}가 온다.\r\n      //     // .then((response) => {\r\n      //     //   console.log(response); // response.data로 해야?\r\n      //     // })\r\n      //     .then((result) => {\r\n      //       console.log(result);\r\n      //       // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n      //       // history.replace('/login');\r\n      //     })\r\n      //     .catch((error) => {\r\n      //       alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n      //       console.log(error);\r\n      //     });\r\n    },\r\n    [brand, link, nickname, imageFile, category, text, season]\r\n  );\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography sx={{textAlign: \"center\"}} component=\"h1\" variant=\"h5\">\r\n          업로드\r\n        </Typography>\r\n        {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n        <TextField\r\n          required\r\n          label=\"브랜드\"\r\n          fullWidth\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-brand\"\r\n          type=\"text\"\r\n          value={brand}\r\n          variant=\"standard\"\r\n          onChange={onChangeBrand}\r\n        />\r\n        <TextField\r\n          label=\"Link\"\r\n          fullWidth\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={link}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeLink}\r\n        />\r\n        \r\n        <TextField\r\n          label=\"선정이유\"\r\n          fullWidth\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={reason}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeReason}\r\n        />\r\n\r\n        <FormControl \r\n        sx={{width: \"40%\", marginRight : \"10%\", marginTop : \"25px\"}}>\r\n          <InputLabel id=\"demo-simple-select-label\">카테고리</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={category}\r\n            label=\"category\"\r\n            required\r\n            onChange={handleCategoryChange}\r\n          >\r\n            <MenuItem value={10}>상의</MenuItem>\r\n            <MenuItem value={20}>하의</MenuItem>\r\n            <MenuItem value={30}>아우터</MenuItem>\r\n            <MenuItem value={40}>디테일</MenuItem>\r\n            <MenuItem value={50}>이미지</MenuItem>\r\n            <MenuItem value={60}>악세사리</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl \r\n        sx={{width: \"40%\", marginTop : \"25px\"}}>\r\n          <InputLabel id=\"demo-simple-select-label\">시즌</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={season}\r\n            label=\"season\"\r\n            required\r\n            onChange={handleSeasonChange}\r\n          >\r\n            <MenuItem value={10}>23SS</MenuItem>\r\n            <MenuItem value={20}>23FW</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          sx={{marginTop : \"30px\"}}\r\n          value={text}\r\n          onChange={onChangeText}\r\n          fullWidth\r\n          label=\"해시태그입력 #검정 #반팔 \"\r\n          variant= \"outlined\"\r\n        />\r\n\r\n        {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n        <div className=\"file-upload\"\r\n          style={{marginTop : \"6px\"}}>\r\n          <div className=\"custom-form-group\">\r\n            {!isImage && (\r\n              <div\r\n                className={\r\n                  highlight\r\n                    ? \"custom-file-drop-area highlight\"\r\n                    : \"custom-file-drop-area\"\r\n                }\r\n                onDragEnter={handlehighlight}\r\n                onDragOver={handlehighlight}\r\n                onDragLeave={handleunhighlight}\r\n                onDrop={handledrop}\r\n              >\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"photos\"\r\n                  placeholder=\"Enter photos\"\r\n                  multiple={false}\r\n                  id=\"filephotos\"\r\n                  onChange={handlefilechange}\r\n                />\r\n                <label htmlFor=\"filephotos\">Drag & Drop</label>\r\n              </div>\r\n            )}\r\n            <div className=\"custom-file-preview\">\r\n              {photos.length > 0 &&\r\n                photos.map((item: any, index) =>\r\n                  index != 0 ? (\r\n                    <div className=\"prev-img\" key={index}>\r\n                      <span onClick={handeldelete}>&times;</span>\r\n                      {item && <Image src={item.src} alt={item.name} />}\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n  );\r\n}\r\n",{"ruleId":"61","severity":1,"message":"62","line":92,"column":5,"nodeType":"63","endLine":92,"endColumn":37,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":180,"column":5,"nodeType":"63","endLine":180,"endColumn":7,"suggestions":"66"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.season'. Either include it or remove the dependency array.","ArrayExpression",["67"],"React Hook useEffect has a missing dependency: 'USERINFOAPI'. Either include it or remove the dependency array.",["68"],{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [props.category, props.season]",{"range":"73","text":"74"},"Update the dependencies array to be: [USERINFOAPI]",{"range":"75","text":"76"},[2154,2186],"[props.category, props.season]",[5032,5034],"[USERINFOAPI]"]