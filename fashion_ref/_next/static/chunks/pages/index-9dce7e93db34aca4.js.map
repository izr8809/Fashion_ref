{"version":3,"file":"static/chunks/pages/index-9dce7e93db34aca4.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./hooks/useInput.ts","webpack://_N_E/./Components/signup.tsx","webpack://_N_E/./Components/upload.tsx","webpack://_N_E/./Components/LoginForm.tsx","webpack://_N_E/./Components/Navbar.tsx","webpack://_N_E/./Components/AlignItemsList.tsx","webpack://_N_E/./Components/ResponsiveGrid.tsx","webpack://_N_E/./pages/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from '@mui/material/Button';\r\n\r\ntype SignupProps = {\r\n  setModalOpen: any;\r\n  setIsLoggedIn : any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({ setIsLoggedIn, setModalOpen }: SignupProps): ReactElement {\r\n  const API = \"http://localhost:3065/signups\";\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password,setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email : any) => {\r\n    let res = false;\r\n  \r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n  \r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  // const modalRef = useRef<HTMLDivElement>(null);\r\n  // useEffect(() => {\r\n  //   // 이벤트 핸들러 함수\r\n  //   const handler = (event: any) => {\r\n  //     // mousedown 이벤트가 발생한 영역이 모달창이 아닐 때, 모달창 제거 처리\r\n  //     if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n  //       setModalOpen(false);\r\n  //     }\r\n  //   };\r\n\r\n  //   // 이벤트 핸들러 등록\r\n  //   document.addEventListener(\"mousedown\", handler);\r\n  //   // document.addEventListener('touchstart', handler); // 모바일 대응\r\n\r\n  //   return () => {\r\n  //     // 이벤트 핸들러 해제\r\n  //     document.removeEventListener(\"mousedown\", handler);\r\n  //     // document.removeEventListener('touchstart', handler); // 모바일 대응\r\n  //   };\r\n  // }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if (password !== passwordCheck) {\r\n        return setPasswordError(true);\r\n      }\r\n      e.preventDefault();\r\n      // if (!term) {\r\n      //   return setTermError(true);\r\n      // }\r\n      console.log(email, nickname, password);\r\n      axios\r\n        .post(\r\n          API,\r\n          // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n          // 회원가입창에서 클라이언트가 입력하는 데이터\r\n          {\r\n            email: email,\r\n            name: nickname,\r\n            password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // 'Accept': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        // 그러면 서버에서 클라이언트로 response(응답)으로\r\n        // {ok: true} 아니면 {ok: false}가 온다.\r\n        // .then((response) => {\r\n        //   console.log(response); // response.data로 해야?\r\n        // })\r\n        .then((result) => {\r\n          console.log(result);\r\n          console.log(\"singupDB!\");\r\n          console.log(result.data);\r\n          setIsLoggedIn(true);\r\n          // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n          // history.replace('/login');\r\n        })\r\n        .catch((error) => {\r\n          alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n          console.log(error);\r\n        });\r\n    },\r\n    [email, password, passwordCheck,setIsLoggedIn , nickname]\r\n  );\r\n\r\n    return (\r\n      <Modal\r\n        open={true}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box \r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}>\r\n          {/* <form onSubmit={onSubmit}> */}\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            회원가입\r\n          </Typography>\r\n            <TextField\r\n              label=\"이메일\"\r\n              name=\"user-email\"\r\n              fullWidth\r\n              type=\"email\"\r\n              value={email}\r\n              required\r\n              error={checkEmail(email)}\r\n              onChange={onChangeEmail}\r\n            />\r\n            <TextField\r\n              label=\"이름\"\r\n              name=\"user-nick\"\r\n              fullWidth\r\n              value={nickname}\r\n              required\r\n              onChange={onChangeNickname}\r\n            />\r\n            <TextField\r\n              label=\"비밀번호\"\r\n              fullWidth\r\n              name=\"user-password\"\r\n              type=\"password\"\r\n              value={password}\r\n              required\r\n              onChange={onChangePassword}\r\n            />\r\n            <TextField\r\n              label=\"비밀번호체크\"\r\n              fullWidth\r\n              name=\"user-password-check\"\r\n              type=\"password\"\r\n              value={passwordCheck}\r\n              required\r\n              onChange={setPasswordCheck}\r\n            />\r\n            {passwordError && <span>비밀번호가 일치하지 않습니다.</span>}\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n                size=\"large\"\r\n              >\r\n                회원가입\r\n              </Button>\r\n          {/* </form> */}\r\n        </Box>\r\n        {/* <Button onClick={closeModal}>닫기</Button> */}\r\n      </Modal>\r\n      // {/* <div className={\"container\"} ref={modalRef}>\r\n      //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n      //       <br />\r\n      //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n      //     </TextField>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-nick\">닉네임</label>\r\n      //       <br />\r\n      //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n      //     </div>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-password\">비밀번호</label>\r\n      //       <br />\r\n      //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n      //     </div>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n      //       <br />\r\n      //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n      //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n      //     </div>\r\n      //     {/* <div>\r\n      //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n      //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n      //     </div> */}\r\n      //     <div style={{ marginTop: 10 }}>\r\n      //       <button>가입하기</button>\r\n      //     </div>\r\n      //     <button className={\"close\"} onClick={closeModal}>\r\n      //         X\r\n      //     </button>\r\n      //   </div> */}\r\n      // }\r\n    );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\ntype UploadProps = {\r\n  setuploadModalOpen: any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload({ setuploadModalOpen }: UploadProps) {\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  // const handleChange = (file: any) => {\r\n  //   setFile(file);\r\n  //   console.log(file);\r\n  // };\r\n  const API = \"http://localhost:3065/uploads\";\r\n  const [imageFile, setImageFile] = useState<File>();\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [reason, onChangeReason] = useInput(\"\");\r\n  const [brand, onChangeBrand] = useInput(\"\");\r\n  const [link, onChangeLink] = useInput(\"\");\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const closeModal = () => {\r\n    setuploadModalOpen(false);\r\n  };\r\n  const { title, desc, photos } = post;\r\n  // const handlechange = e =>{\r\n  //   setPost({\r\n  //     ...post,\r\n  //     [e.target.name]: e.target.value;\r\n  //   })\r\n  // }\r\n\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n\r\n  const [text, onChangeText, setText] = useInput('');\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = (files: FileList | null) => {\r\n    let photosArr: any[] = [];\r\n    if (files != undefined) {\r\n      if (files.length > 1) {\r\n        alert(\"이미지는 1개만 넣어주세요\");\r\n      } else {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          setImageFile(files[i]);\r\n          console.log(files[i]);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              photos: [...photos, ...photosArr],\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handeldelete = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    let target = (e.target as HTMLSpanElement).parentElement;\r\n    console.log(target?.dataset);\r\n    let targetindex = 1;\r\n    console.log(targetindex);\r\n    setPost({\r\n      ...post,\r\n      photos: [\r\n        ...photos.slice(0, targetindex),\r\n        ...photos.slice(targetindex + 1),\r\n      ],\r\n    });\r\n    console.log(photos);\r\n    setIsImage(false);\r\n  };\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    console.log(\"leave\");\r\n    setHighlight(false);\r\n  }, []);\r\n  const handledrop = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let dt = e.dataTransfer;\r\n    let files = dt?.files;\r\n    setHighlight(false);\r\n    handfiles(files);\r\n  };\r\n\r\n  const uploadClick = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const USERINFOAPI = `http://localhost:3065/USERINFO`\r\n  const [userInfo, setUserInfo]= useState({name : \"\"});\r\n\r\n  useEffect(()=>{\r\n    axios.get(USERINFOAPI,{\r\n    }).then((result)=>{\r\n      console.log(result.data)\r\n      setUserInfo(result.data)\r\n    })\r\n    .catch((err)=>{\r\n\r\n      console.log(err)\r\n    })\r\n  },[]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      console.log(imageFile);\r\n      const formData = new FormData();\r\n      formData.append(\"image\", imageFile as File);\r\n      formData.append(\"nickname\", nickname);\r\n      formData.append(\"brand\", brand);\r\n      formData.append(\"link\", link);\r\n      formData.append(\"category\", category);\r\n      formData.append(\"season\", season);\r\n      formData.append(\"hashtag\", text);\r\n      axios.post(API, formData);\r\n      //   axios\r\n      //     .post(\r\n      //       API,\r\n      //       // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n      //       // 회원가입창에서 클라이언트가 입력하는 데이터\r\n      //       {\r\n      //         nickname: nickname,\r\n      //         brand: brand,\r\n      //         link: link, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n      //         image : (imageFile as File).name\r\n      //       },\r\n      //       {\r\n      //         headers: {\r\n      //           \"Content-Type\": \"application/json\",\r\n      //           // 'Accept': 'application/json',\r\n      //         },\r\n      //       }\r\n      //     )\r\n      //     // 그러면 서버에서 클라이언트로 response(응답)으로\r\n      //     // {ok: true} 아니면 {ok: false}가 온다.\r\n      //     // .then((response) => {\r\n      //     //   console.log(response); // response.data로 해야?\r\n      //     // })\r\n      //     .then((result) => {\r\n      //       console.log(result);\r\n      //       // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n      //       // history.replace('/login');\r\n      //     })\r\n      //     .catch((error) => {\r\n      //       alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n      //       console.log(error);\r\n      //     });\r\n    },\r\n    [brand, link, nickname, imageFile, category, text, season]\r\n  );\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          업로드\r\n        </Typography>\r\n        {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n        <TextField\r\n          label=\"브랜드\"\r\n          fullWidth\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-brand\"\r\n          type=\"text\"\r\n          value={brand}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeBrand}\r\n        />\r\n        <TextField\r\n          label=\"Link\"\r\n          fullWidth\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={link}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeLink}\r\n        />\r\n        \r\n        <TextField\r\n          label=\"선정이유\"\r\n          fullWidth\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={reason}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeReason}\r\n        />\r\n\r\n        <FormControl \r\n        sx={{width: \"40%\", marginRight : \"10%\", marginTop : \"25px\"}}>\r\n          <InputLabel id=\"demo-simple-select-label\">카테고리</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={category}\r\n            label=\"category\"\r\n            onChange={handleCategoryChange}\r\n          >\r\n            <MenuItem value={10}>상의</MenuItem>\r\n            <MenuItem value={20}>하의</MenuItem>\r\n            <MenuItem value={30}>아우터</MenuItem>\r\n            <MenuItem value={40}>디테일</MenuItem>\r\n            <MenuItem value={50}>이미지</MenuItem>\r\n            <MenuItem value={60}>악세사리</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl \r\n        sx={{width: \"40%\", marginTop : \"25px\"}}>\r\n          <InputLabel id=\"demo-simple-select-label\">시즌</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={season}\r\n            label=\"season\"\r\n            onChange={handleSeasonChange}\r\n          >\r\n            <MenuItem value={10}>23SS</MenuItem>\r\n            <MenuItem value={20}>23FW</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          sx={{marginTop : \"30px\"}}\r\n          value={text}\r\n          onChange={onChangeText}\r\n          fullWidth\r\n          label=\"해시태그입력 #검정 #반팔 \"\r\n          variant= \"outlined\"\r\n        />\r\n\r\n        {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n        <div className=\"file-upload\"\r\n          style={{marginTop : \"6px\"}}>\r\n          <div className=\"custom-form-group\">\r\n            {!isImage && (\r\n              <div\r\n                className={\r\n                  highlight\r\n                    ? \"custom-file-drop-area highlight\"\r\n                    : \"custom-file-drop-area\"\r\n                }\r\n                onDragEnter={handlehighlight}\r\n                onDragOver={handlehighlight}\r\n                onDragLeave={handleunhighlight}\r\n                onDrop={handledrop}\r\n              >\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"photos\"\r\n                  placeholder=\"Enter photos\"\r\n                  multiple={false}\r\n                  id=\"filephotos\"\r\n                  onChange={handlefilechange}\r\n                />\r\n                <label htmlFor=\"filephotos\">Drag & Drop</label>\r\n              </div>\r\n            )}\r\n            <div className=\"custom-file-preview\">\r\n              {photos.length > 0 &&\r\n                photos.map((item: any, index) =>\r\n                  index != 0 ? (\r\n                    <div className=\"prev-img\" key={index}>\r\n                      <span onClick={handeldelete}>&times;</span>\r\n                      {item && <Image src={item.src} alt={item.name} />}\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect,useState } from 'react';\r\nimport useInput from '../hooks/useInput';\r\nimport axios from 'axios';\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\n\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  setIsLoggedIn : any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function LoginForm({ setIsLoggedIn, setloginModalOpen }: LoginFormProps): ReactElement {\r\n    \r\n  const API = \"http://localhost:3065/login\";\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const onFinish = (values: FormData) => {};\r\n  const [User, setUser] = useState({\r\n    id : 0,\r\n    name : null,\r\n  });\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback((event : any) => {\r\n    event.preventDefault();\r\n    console.log(\"signup\")\r\n    console.log(password)\r\n    console.log(email)\r\n    axios.post(API,\r\n      // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n      // 회원가입창에서 클라이언트가 입력하는 데이터\r\n      {\r\n        email: email,           \r\n        password: password,  // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n      },\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          // 'Accept': 'application/json',\r\n        },\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        console.log(\"singupDB!\");\r\n        console.log(result.data.data)\r\n        setUser(result.data.data);\r\n        setIsLoggedIn(true);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert('로그인이 정상적으로 되지 않았습니다.');\r\n        console.log(error); \r\n      })\r\n  }, [email, password, setIsLoggedIn]);\r\n\r\n  console.log(User)\r\n  return (\r\n    \r\n    <Modal\r\n    open={true}\r\n    onClose={closeModal}\r\n    aria-labelledby=\"modal-modal-title\"\r\n    aria-describedby=\"modal-modal-description\"\r\n  >\r\n    <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          로그인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      </Modal>\r\n  )\r\n\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\n// import { useNavigate  } from 'react-router-dom'; // 설치한 패키지\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/signup\";\r\nimport Upload from \"@/Components/upload\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\nconst inter = Inter({ subsets: [\"latin\"] });\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(\"#F8F8F8\", 0.73),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(\"#F8F8F8\", 0.33),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n    height: \"40%\",\r\n  },\r\n}));\r\n\r\ntype NavbarProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n};\r\n\r\nexport default function Navbar({\r\n  isLoggedIn,\r\n  setIsLoggedIn,\r\n  setPost,\r\n}: NavbarProps): ReactElement {\r\n  // const navigate = useNavigate();\r\n  const HASHAPI = \"http://localhost:3065/hashtagsearch\";\r\n  const API = \"http://localhost:3065/loadpost\";\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n\r\n  const onChangeCategory = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const onChangeSeason = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const showModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const reloadPost = () => {\r\n    // navigate('/home'); // /test로 url 이동\r\n  };\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const showUploadModal = () => {\r\n    setuploadModalOpen(true);\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    const LOGOUTAPI = \"http://localhost:3065/logout\";\r\n    axios\r\n      .get(LOGOUTAPI)\r\n      .then((result) => {\r\n        if (result.data.message == \"ok\") setIsLoggedIn(false);\r\n        setloginModalOpen(false);\r\n      })\r\n      .catch((err) => {});\r\n  }, [setIsLoggedIn]);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (isLoggedIn) {\r\n      setuploadModalOpen(true);\r\n    } else {\r\n      setloginModalOpen(true);\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      if (value == \"\") {\r\n        axios\r\n          .get(API)\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n            console.log(error);\r\n          });\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        axios\r\n          .post(\r\n            HASHAPI,\r\n            {\r\n              hashtags: value,\r\n              category: category,\r\n              season: season,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          .then((result) => {\r\n            console.log(\"----------------------------\");\r\n            console.log(result.data);\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"로그인이 정상적으로 되지 않았습니다.\");\r\n            console.log(error);\r\n          });\r\n      }\r\n    },\r\n    [value, setPost]\r\n  );\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {!isLoggedIn && modalOpen && (\r\n        <Signup setIsLoggedIn={setIsLoggedIn} setModalOpen={setModalOpen} />\r\n      )}\r\n      {isLoggedIn && uploadModalOpen && (\r\n        <Upload setuploadModalOpen={setuploadModalOpen} />\r\n      )}\r\n      {!isLoggedIn && loginModalOpen && (\r\n        <LoginForm\r\n          setIsLoggedIn={setIsLoggedIn}\r\n          setloginModalOpen={setloginModalOpen}\r\n        />\r\n      )}\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          {/* <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n            onClick={reloadPost}\r\n          >\r\n            <HomeIcon color=\"disabled\" />\r\n          </IconButton> */}\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            {/* <p>검색할 태그</p> */}\r\n          </Typography>\r\n          {/* <Search>\r\n            <StyledInputBase\r\n              onChange={(event) => {\r\n                setValue(event.target.value);\r\n              }}\r\n              placeholder=\"태그 입력\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyPress={(event) => {\r\n                if (event.which == 32) alert(value);\r\n              }}\r\n            />\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n          </Search> */}\r\n          <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">\r\n              카테고리\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              value={category}\r\n              label=\"category\"\r\n              onChange={onChangeCategory}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"25px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">시즌</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              value={season}\r\n              label=\"season\"\r\n              onChange={onChangeSeason}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <form onSubmit={TagSearch} style={{ width: \"50%\" }}>\r\n            <IconButton type=\"submit\" aria-label=\"search\">\r\n              <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n            </IconButton>\r\n            <TextField\r\n              id=\"search-bar\"\r\n              className=\"text\"\r\n              sx={{ display: \"inline-block\", width: \"80%\" }}\r\n              value={value}\r\n              onChange={onChangeValue}\r\n              label=\"#상의 #검정\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Search...\"\r\n              size=\"small\"\r\n            />\r\n          </form>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={0} color=\"error\"></Badge>\r\n            </IconButton> */}\r\n            <Button\r\n              variant=\"outlined\"\r\n              sx={{\r\n                height: \"60%\",\r\n                width: \"55%\",\r\n                marginRight: \"5px\",\r\n                backgroundColor: \"#F0F0F0\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n              size=\"small\"\r\n              onClick={uploadClick}\r\n            >\r\n              업로드 <AddIcon />\r\n            </Button>\r\n            {!isLoggedIn ? (\r\n              <div style={{ height: \"60%\", width:\"100%\" }}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div style={{ height: \"60%\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{\r\n                      // height: \"60%\",\r\n                      width: \"100%\",\r\n                      marginRight: \"5px\",\r\n                      fontWeight: \"bold\",\r\n                      display: \"inline-block\",\r\n                    }}\r\n                    size=\"small\"\r\n                    onClick={Logout}\r\n                  >\r\n                    로그아웃\r\n                  </Button>\r\n                </div>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport {useCallback, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\ntype AlignItemsListProps = {\r\n  category: number;\r\n  brand: string;\r\n  link: string;\r\n  season: string;\r\n  reason: string;\r\n  hashtags: any[];\r\n  id : number,\r\n  setPost: any;\r\n  posts : any[];\r\n  index : number;\r\n  name : string;\r\n};\r\n\r\nconst category = {\r\n  상의: 1,\r\n  하의: 2,\r\n  아우터: 3,\r\n  디테일: 4,\r\n  이미지: 5,\r\n  악세사리: 6,\r\n};\r\n\r\nconst season = {\r\n  \"23SS\": 7,\r\n  \"23FW\": 8,\r\n};\r\nexport default function AlignItemsList(props: AlignItemsListProps) {\r\n  const DELAPI = `http://localhost:3065/deletpost/${props.id}`\r\n  const editClick = useCallback(()=>{\r\n    alert(\"만드는 중입니다..\");\r\n  },[])\r\n  const delClick = useCallback(()=>{\r\n    axios.post(DELAPI,{\r\n    }).then((result)=>{\r\n      console.log(props.id)\r\n      const Posts = props.posts.filter((post)=> post.id !== props.id)\r\n      props.setPost(Posts);\r\n      console.log(Posts);\r\n    })\r\n    .catch((err)=>{\r\n\r\n      console.log(err)\r\n    })\r\n  },[])\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        maxWidth: \"15\",\r\n        marginTop: \"20px\",\r\n        // borderRadius: \"24px\",\r\n        // boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          // height=\"300\"\r\n          image={`../${props.link}`}\r\n          alt=\"green iguana\"\r\n        />\r\n        <CardContent>\r\n          <span style={{fontWeight :900, fontSize: \"130%\"}}>\r\n            {props.name}_{`${props.brand}`}\r\n          </span>\r\n\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            선정이유 {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <div style={{width:\"100%\"}}>\r\n          <EditIcon id=\"editicon\" onClick={editClick}/>\r\n          <DeleteIcon id=\"delicon\" onClick={delClick}/>\r\n        </div>\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${props.category / 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{props.season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className=\"Tag1 Tag\"\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{props.category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        {props.hashtags.map((hashtag, index) => (\r\n          <div style={{ margin: \"2px\" }} key={index}>\r\n            <div\r\n              className={`Tag${parseInt(hashtag.id) % 8} Tag`}\r\n              style={{ display: \"inline-block\", margin: \"2px\" }}\r\n            >\r\n              <a href=\"\">#{hashtag.name}</a>\r\n            </div>{\" \"}\r\n            &nbsp;\r\n          </div>\r\n        ))}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { useCallback, useEffect,useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport AlignItemsList from \"./AlignItemsList\";\r\nimport Grid from '@mui/material/Grid';\r\nimport { useInput } from '@mui/base';\r\nimport axios from 'axios';\r\nimport Image from \"next/image\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\ntype ResponsiveGridProps = {\r\n  setPost: any;\r\n  posts : any[];\r\n};\r\n\r\nexport default function ResponsiveGrid({ setPost, posts }: ResponsiveGridProps) {\r\n  \r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n        {posts.map((post, index) => (\r\n          <Grid item xs={6} sm={4} md={2.4} lg ={4} key={index}>\r\n            <Item>\r\n            <li\r\n              style={{\r\n                maxWidth: \"320px\",\r\n                display: \"inline-block\",\r\n                // marginRight: \"4%\",\r\n                // marginLeft: \"1%\",\r\n                // marginTop: \"1%\",\r\n              }}\r\n            >\r\n            <AlignItemsList name={post.name} index={index} setPost={setPost} posts={posts} id={post.id} category={post.category} brand={post.brand} link={post.Images[0].src} season={post.season} hashtags ={post.Hashtags} reason ={post.reason}/> </li>\r\n            </Item>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios from 'axios';\nimport React, { useCallback, useState, useEffect } from 'react';\nimport Link from 'next/link'\n// const inter = Inter({ subsets: [\"latin\"] });\n\nexport default function Home() {\n  \n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [posts, setPost] = useState<any[]>([])\n\n  const LOADAPI = \"http://localhost:3065/loadpost\";\n\n  const loadPost = useCallback(() => {\n    axios.get(LOADAPI)\n      .then((result) => {\n        console.log(result.data)\n        setPost(result.data);\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\n        // history.replace('/login');\n      })\n      .catch((error) => {\n        alert('로그인이 정상적으로 되지 않았습니다.?');\n        console.log(error); \n      })\n\n  },[setPost])\n\n  useEffect(()=>{\n    loadPost()\n  },[loadPost])\n  \n  const LOGINCHECKAPI = \"http://localhost:3065/logincheck\";\n  useEffect( ()=>{\n    axios.get(LOGINCHECKAPI)\n      .then((result) => {\n        console.log(result.data.login)\n        if(result.data.login){\n          setIsLoggedIn(true);\n        }\n      })\n      .catch((error) => {\n        console.log(error); \n      })\n  },[])\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPost}><h1 id=\"title\">CRUMP REFERENCE</h1></a>\n        <div style={{marginBottom: \"40px\"}}>\n          <Navbar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} setPost={setPost}/>\n          {/* <LoginForm /> */}\n          {/* <SignupForm /> */}\n        </div>\n        <ResponsiveGrid setPost={setPost} posts={posts}/>\n      </div>\n    </>\n  );\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","useInput","value","setter","useState","initValue","handler","useCallback","e","target","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Signup","param","setIsLoggedIn","setModalOpen","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","closeModal","onSubmit","preventDefault","console","log","axios","name","headers","then","result","data","catch","alert","error","jsx_runtime","jsx","Modal","open","onClose","aria-labelledby","aria-describedby","jsxs","Box","component","noValidate","autoComplete","sx","Typography","variant","TextField","label","fullWidth","type","required","checkEmail","res","check","test","onChange","span","Button","mt","mb","size","Upload","setuploadModalOpen","file","setFile","imageFile","setImageFile","setValue","React","isImage","setIsImage","highlight","setHighlight","reason","onChangeReason","brand","onChangeBrand","link","onChangeLink","post","setPost","title","desc","photos","category","setCategory","season","setSeason","text","onChangeText","setText","handleCategoryChange","event","handleSeasonChange","handlefilechange","handfiles","files","photosArr","undefined","length","i","reader","FileReader","readAsDataURL","addEventListener","fileobj","src","handeldelete","parentElement","dataset","slice","targetindex","handlehighlight","stopPropagation","handleunhighlight","handledrop","dt","dataTransfer","userInfo","setUserInfo","useEffect","err","formData","FormData","append","marginTop","FormControl","marginRight","InputLabel","id","Select","labelId","MenuItem","div","className","onDragEnter","onDragOver","onDragLeave","onDrop","input","placeholder","multiple","htmlFor","map","item","index","onClick","Image","alt","Fragment","LoginForm","setloginModalOpen","User","setUser","onSubmitForm","Navbar","isLoggedIn","modalOpen","uploadModalOpen","loginModalOpen","onChangeValue","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","onChangeCategory","onChangeSeason","showModal","showLoginModal","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","Logout","message","uploadClick","handleMobileMenuOpen","TagSearch","split","hashtags","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","IconButton","aria-label","color","Badge","badgeContent","MailIcon","NotificationsIcon","aria-controls","aria-haspopup","AccountCircle","flexGrow","AppBar","backgroundColor","Toolbar","noWrap","display","xs","sm","m","minWidth","marginBottom","form","SearchIcon","fill","md","height","fontWeight","AddIcon","edge","MoreIcon","styled","theme","borderRadius","shape","alpha","spacing","marginLeft","breakpoints","up","padding","pointerEvents","alignItems","justifyContent","InputBase","paddingLeft","concat","transition","transitions","create","AlignItemsList","props","DELAPI","editClick","delClick","Posts","posts","filter","Card","maxWidth","CardActionArea","CardMedia","image","CardContent","fontSize","CardActions","EditIcon","DeleteIcon","margin","a","href","hashtag","parseInt","Item","Paper","palette","mode","typography","body2","textAlign","secondary","ResponsiveGrid","Grid","container","columns","lg","li","Images","Hashtags","Home","loadPost","login","Head","meta","content","h1"],"sourceRoot":""}