{"version":3,"file":"static/chunks/pages/index-eb914b5568866096.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./hooks/useInput.ts","webpack://_N_E/./Components/Signup.tsx","webpack://_N_E/./Components/Upload.tsx","webpack://_N_E/./Components/LoginForm.tsx","webpack://_N_E/./Components/Searchbar.tsx","webpack://_N_E/./Components/Navbar.tsx","webpack://_N_E/./Components/Cardpost.tsx","webpack://_N_E/./Components/ResponsiveGrid.tsx","webpack://_N_E/./pages/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginRequestAction } from \"@/reducers/user\";\r\n\r\ntype SignupProps = {\r\n  setModalOpen: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({\r\n  setModalOpen,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: SignupProps): ReactElement {\r\n  const dispatch = useDispatch();\r\n  const API = `${process.env.NEXT_PUBLIC_API}/signups`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password, setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email: any) => {\r\n    let res = false;\r\n\r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n\r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (password !== passwordCheck) {\r\n        setPasswordError(true);\r\n      } else if (!checkEmail(email)) {\r\n        setEmailError(true);\r\n      } else {\r\n        axios\r\n          .post(\r\n            API,\r\n            // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n            // 회원가입창에서 클라이언트가 입력하는 데이터\r\n            {\r\n              email: email,\r\n              name: nickname,\r\n              password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          // 그러면 서버에서 클라이언트로 response(응답)으로\r\n          // {ok: true} 아니면 {ok: false}가 온다.\r\n          // .then((response) => {\r\n          //   console.log(response); // response.data로 해야?\r\n          // })\r\n          .then((result) => {\r\n            dispatch(loginRequestAction())\r\n            setUserId(result.data.userId);\r\n            setUserName(result.data.userName);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.data.message == \"already exist\") {\r\n              alert(\"이미 존재하는 이메일입니다.\");\r\n            } else {\r\n              alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n            }\r\n          });\r\n      }\r\n      // if (!term) {\r\n      //   return setTermError(true);\r\n      // }\r\n    },\r\n    [API, dispatch, setUserId, setUserName, email, password, passwordCheck, nickname]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\" sx={{ textAlign: \"center\" }}>\r\n          회원가입\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          // error={checkEmail(email)}\r\n          onChange={onChangeEmail}\r\n        />\r\n        {emailError && (\r\n          <span style={{ color: \"red\" }}>Email 형식이 잘못되었습니다</span>\r\n        )}\r\n        <TextField\r\n          label=\"이름\"\r\n          name=\"user-nick\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          onChange={onChangeNickname}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          fullWidth\r\n          name=\"user-password\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={password}\r\n          required\r\n          onChange={onChangePassword}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호체크\"\r\n          fullWidth\r\n          name=\"user-password-check\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={passwordCheck}\r\n          required\r\n          onChange={setPasswordCheck}\r\n        />\r\n        {passwordError && (\r\n          <span style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다</span>\r\n        )}\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    // {/* <div className={\"container\"} ref={modalRef}>\r\n    //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n    //       <br />\r\n    //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n    //     </TextField>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-nick\">닉네임</label>\r\n    //       <br />\r\n    //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password\">비밀번호</label>\r\n    //       <br />\r\n    //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n    //       <br />\r\n    //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n    //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n    //     </div>\r\n    //     {/* <div>\r\n    //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n    //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n    //     </div> */}\r\n    //     <div style={{ marginTop: 10 }}>\r\n    //       <button>가입하기</button>\r\n    //     </div>\r\n    //     <button className={\"close\"} onClick={closeModal}>\r\n    //         X\r\n    //     </button>\r\n    //   </div> */}\r\n    // }\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nimport Router from \"next/router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addPost } from \"@/reducers/post\";\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype UploadProps = {\r\n  setuploadModalOpen: any;\r\n  userId: string;\r\n  setUserId: any;\r\n  userName: string;\r\n  setUserName: any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload(props: UploadProps) {\r\n\r\n  const dispatch = useDispatch();\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  const API = `${process.env.NEXT_PUBLIC_API}/uploads`;\r\n  const [imageFile, setImageFile] = useState<File>();\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [reason, onChangeReason] = useInput(\"\");\r\n  const [brand, onChangeBrand] = useInput(\"\");\r\n  const [link, onChangeLink] = useInput(\"\");\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n  const GETHASHAPI = `${process.env.NEXT_PUBLIC_API}/getHash`;\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const closeModal = () => {\r\n    props.setuploadModalOpen(false);\r\n  };\r\n  const { title, desc, photos } = post;\r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n  const inputRef = useRef(null);\r\n  const [category, setCategory] = React.useState(\"상의\");\r\n  const [season, setSeason] = React.useState(\"23SS\");\r\n\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = (files: FileList | null) => {\r\n    let photosArr: any[] = [];\r\n    if (files != undefined) {\r\n      if (files.length > 1) {\r\n        alert(\"이미지는 1개만 넣어주세요\");\r\n      } else {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          setImageFile(files[i]);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              photos: [...photos, ...photosArr],\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handeldelete = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    let target = (e.target as HTMLSpanElement).parentElement;\r\n    let targetindex = 1;\r\n    setPost({\r\n      ...post,\r\n      photos: [\r\n        ...photos.slice(0, targetindex),\r\n        ...photos.slice(targetindex + 1),\r\n      ],\r\n    });\r\n    setIsImage(false);\r\n  };\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(false);\r\n  }, []);\r\n  const handledrop = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let dt = e.dataTransfer;\r\n    let files = dt?.files;\r\n    setHighlight(false);\r\n    handfiles(files);\r\n  };\r\n\r\n  // const USERINFOAPI = `${process.env.NEXT_PUBLIC_API}/USERINFO`;\r\n  // const [userInfo, setUserInfo] = useState({ name: \"\" });\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(USERINFOAPI, {})\r\n  //     .then((result) => {\r\n  //       setUserInfo(result.data);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // }, [props.userId, USERINFOAPI]);\r\n  \r\n  const [hashTags, setHashTags] = React.useState({\r\n    data: [{ name: \"\" }],\r\n  });\r\n\r\n  const getHashtags = useCallback(() => {\r\n    axios\r\n      .get(GETHASHAPI)\r\n      .then((result) => {\r\n        setShowHashModalOpen(true);\r\n        setHashTags(result);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n      });\r\n  }, [GETHASHAPI]);\r\n\r\n\r\n  const onSubmit = (e: any) => {\r\n    console.log(\"!\");\r\n    if (brand == \"\") {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      alert(\"브랜드입력 필수\");\r\n    } else if (imageFile == undefined) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      alert(\"이미지 필수\");\r\n    } else {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      // location.reload();\r\n      const formData = new FormData();\r\n      formData.append(\"image\", imageFile as File);\r\n      formData.append(\"userId\", props.userId);\r\n      formData.append(\"userName\", props.userName);\r\n      formData.append(\"brand\", brand);\r\n      formData.append(\"link\", link);\r\n      formData.append(\"category\", category);\r\n      formData.append(\"season\", season);\r\n      formData.append(\"hashtag\", text);\r\n      formData.append(\"reason\", reason);\r\n      // alert(formData)\r\n\r\n      axios\r\n        .post(API, formData)\r\n        .then((result) => {\r\n          dispatch(addPost(result));\r\n          console.log(result);\r\n          location.reload();\r\n          // const ele = document.getElementById('submit_bt');\r\n          // ele?.click();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          location.reload();\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {showHashModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closehashtagsModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <div className=\"hashlistdiv\" style={{ height: \"300px\", overflow: \"overlay\" }}>\r\n              {hashTags.data.map((hashtag, index) => (\r\n                <li id=\"hashlist\" key={index} style={{ listStyle: \"none\" }}>\r\n                  {\" \"}\r\n                  #{hashtag.name}\r\n                </li>\r\n              ))}\r\n            </div>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closehashtagsModal}\r\n            >\r\n              확인\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Modal\r\n        open={true}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box\r\n          component=\"form\"\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          onSubmit={onSubmit}\r\n          sx={style}\r\n        >\r\n          {/* <form onSubmit={onSubmit}> */}\r\n          <Typography sx={{ textAlign: \"center\" }} component=\"h1\" variant=\"h5\">\r\n            업로드\r\n          </Typography>\r\n          {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n          <TextField\r\n            required\r\n            label=\"브랜드\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-brand\"\r\n            type=\"text\"\r\n            value={brand}\r\n            variant=\"standard\"\r\n            onChange={onChangeBrand}\r\n          />\r\n          <TextField\r\n            label=\"Link\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={link}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeLink}\r\n          />\r\n\r\n          <TextField\r\n            label=\"선정이유\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={reason}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeReason}\r\n          />\r\n\r\n          <FormControl\r\n            sx={{ width: \"40%\", marginRight: \"10%\", marginTop: \"25px\" }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-label\">상의</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"상의\"}\r\n              value={category}\r\n              label=\"카테고리\"\r\n              required\r\n              onChange={handleCategoryChange}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl sx={{ width: \"40%\", marginTop: \"25px\" }}>\r\n            <InputLabel id=\"demo-simple-select-label\">23SS</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"23SS\"}\r\n              value={season}\r\n              label=\"시즌\"\r\n              required\r\n              onChange={handleSeasonChange}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            sx={{ marginTop: \"30px\" }}\r\n            value={text}\r\n            onChange={onChangeText}\r\n            fullWidth\r\n            label=\"해시태그입력 #검정 #반팔 \"\r\n            variant=\"outlined\"\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n          <div className=\"file-upload\" style={{ marginTop: \"10px\" }}>\r\n            <div className=\"custom-form-group\">\r\n              {!isImage && (\r\n                <div\r\n                  className={\r\n                    highlight\r\n                      ? \"custom-file-drop-area highlight\"\r\n                      : \"custom-file-drop-area\"\r\n                  }\r\n                  onDragEnter={handlehighlight}\r\n                  onDragOver={handlehighlight}\r\n                  onDragLeave={handleunhighlight}\r\n                  onDrop={handledrop}\r\n                >\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"photos\"\r\n                    placeholder=\"Enter photos\"\r\n                    multiple={false}\r\n                    id=\"filephotos\"\r\n                    onChange={handlefilechange}\r\n                  />\r\n                  <label htmlFor=\"filephotos\">이미지를 드래그해서 넣어주세요</label>\r\n                </div>\r\n              )}\r\n              <div className=\"custom-file-preview\">\r\n                {photos.length > 0 &&\r\n                  photos.map((item: any, index) =>\r\n                    index != 0 ? (\r\n                      <div className=\"prev-img\" key={index}>\r\n                        <span onClick={handeldelete}>&times;</span>\r\n                        {item && <Image src={item.src} alt={item.name} />}\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )\r\n                  )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            id=\"submit_bt\"\r\n            style={{ display: \"none\" }}\r\n            type=\"submit\"\r\n          ></button>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            size=\"large\"\r\n          >\r\n            확인\r\n          </Button>\r\n          {/* </form> */}\r\n        </Box>\r\n        {/* <Button onClick={closeModal}>닫기</Button> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginRequestAction } from \"@/reducers/user\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n};\r\nexport default function LoginForm({\r\n  setloginModalOpen,\r\n}: LoginFormProps): ReactElement {\r\n  \r\n  const dispatch = useDispatch();\r\n  const {isLoggingIn} = useSelector((state : any) => state.user)\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback(\r\n    (event: any) => {\r\n      event.preventDefault();\r\n      if (email == \"\") {\r\n        alert(\"이메일을 입력해주세요\");\r\n      } else if (password == \"\") {\r\n        alert(\"비밀번호를 입력해주세요\");\r\n      } else {\r\n        console.log(email, password)\r\n        dispatch(loginRequestAction({email,password}))\r\n        setloginModalOpen(false);\r\n        // axios\r\n        //   .post(\r\n        //     LOGINAPI,\r\n        //     // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n        //     // 회원가입창에서 클라이언트가 입력하는 데이터\r\n        //     {\r\n        //       email: email,\r\n        //       password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n        //     },\r\n        //     {\r\n        //       headers: {\r\n        //         \"Content-Type\": \"application/json\",\r\n        //         // 'Accept': 'application/json',\r\n        //       },\r\n        //     }\r\n        //   )\r\n        //   .then((result) => {\r\n        //     setUser(result.data.data);\r\n        //     console.log(\"dispatch\");\r\n        //     dispatch(loginRequestAction(\"usersample\"));\r\n        //     // setIsLoggedIn(true);\r\n        //     setUserId(result.data.data.id);\r\n        //     setUserName(result.data.data.name);\r\n        //     setloginModalOpen(false);\r\n        //     console.log(result.data.data);\r\n        //     // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        //     // history.replace('/login');\r\n        //   })\r\n        //   .catch((error) => {\r\n        //     alert(\"로그인 정보가 일치하지 않습니다.\");\r\n        //     setloginModalOpen(false);\r\n        //     console.log(error);\r\n        //   });\r\n      }\r\n    },\r\n    [email, password, dispatch, setloginModalOpen]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n          loading={isLoggingIn}\r\n        >\r\n          로그인\r\n        </LoadingButton>\r\n        {/* </form> */}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { loadPost } from \"@/reducers/post\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {useEffect, useRef} from 'react';\r\n\r\ntype SearchbarProps = {};\r\n\r\nexport default function Searchbar({}: SearchbarProps) {\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const API = `${process.env.NEXT_PUBLIC_API}/loadpost`;\r\n  const dispatch = useDispatch();\r\n  const HASHAPI = `${process.env.NEXT_PUBLIC_API}/hashtagsearch`;\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (searchBar.current) {\r\n      searchBar.current.focus();\r\n    }\r\n  }, []);\r\n\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      // e.preventDeafult();\r\n      // e.stopPropagation();\r\n      if (value == \"\") {\r\n        axios\r\n          .get(API)\r\n          .then((result) => {\r\n            dispatch(loadPost(result.data))\r\n            // setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n          });\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        let upperCaseValue = value.toUpperCase();\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        axios\r\n          .post(\r\n            HASHAPI,\r\n            {\r\n              hashtags: upperCaseValue,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          .then((result) => {\r\n            dispatch(loadPost(result.data));\r\n            onChangeValue(\"\");\r\n            // setCount(1)\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n            console.log(error);\r\n          });\r\n      }\r\n    },\r\n    [API, HASHAPI,dispatch, value, onChangeValue]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={TagSearch}\r\n        style={{ width: \"70%\", flex: \"auto\", marginLeft: \"15%\" }}\r\n      >\r\n        <IconButton\r\n          type=\"submit\"\r\n          aria-label=\"search\"\r\n          sx={{ display: { xs: \"none\", md: \"inline-block\" } }}\r\n        >\r\n          <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n        </IconButton>\r\n        <TextField\r\n          id=\"search-bar\"\r\n          className=\"text\"\r\n          sx={{ display: \"inline-block\", width: \"80%\" }}\r\n          value={value}\r\n          onChange={onChangeValue}\r\n          label=\"#상의 #검정\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Search...\"\r\n          size=\"small\"\r\n          inputRef={searchBar}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement, useRef } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\n// import { useNavigate  } from 'react-router-dom'; // 설치한 패키지\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/Signup\";\r\nimport Upload from \"@/Components/Upload\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginRequestAction, logoutRequestAction } from \"@/reducers/user\";\r\nimport Searchbar from \"./Searchbar\";\r\n\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\ntype NavbarProps = {\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n  setCount: any,\r\n};\r\n\r\nexport default function Navbar({\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n  setCount,\r\n}: NavbarProps): ReactElement {\r\n  // const navigate = useNavigate();\r\n  \r\n  //redux\r\n  const {isLoggedIn} = useSelector((state : any) => state.user)  \r\n  const { user } = useSelector((state : any) => state.user)\r\n  // const isLoggedIn = false;\r\n  const dispatch = useDispatch();\r\n\r\n  const GETHASHAPI = `${process.env.NEXT_PUBLIC_API}/getHash`;\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n  const [hashTags, setHashTags] = React.useState({\r\n    data :[\r\n      {name : \"\"},\r\n    ]\r\n  });\r\n\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n  \r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n\r\n\r\n  const showModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const showUploadModal = () => {\r\n    setuploadModalOpen(true);\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    const LOGOUTAPI = `${process.env.NEXT_PUBLIC_API}/logout`;\r\n    axios\r\n      .get(LOGOUTAPI)\r\n      .then((result) => {\r\n        if (result.data.message == \"ok\")\r\n          dispatch(logoutRequestAction());\r\n          //dispatch \r\n        // setloginModalOpen(false);\r\n      })\r\n      .catch((err) => {alert(\"서버와 연결 끊겼네요. 새로고침.!\")});\r\n  }, [dispatch]);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (isLoggedIn) {\r\n      setuploadModalOpen(true);\r\n    } else {\r\n      setloginModalOpen(true);\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onReady = useCallback(()=>{alert(\"준비중입니다.\")},[])\r\n\r\n\r\n  const getHashtags = useCallback(()=>{\r\n    axios\r\n    .get(GETHASHAPI)\r\n    .then((result) => {\r\n      setShowHashModalOpen(true);\r\n      setHashTags(result)\r\n      // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n      // history.replace('/login');\r\n    })\r\n    .catch((error) => {\r\n      alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n    });\r\n  },[GETHASHAPI])\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <p>만드는 중입니다</p>\r\n      </MenuItem>\r\n      {/* <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>프로필</p>\r\n      </MenuItem> */}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {!isLoggedIn && modalOpen && (\r\n        <Signup setModalOpen={setModalOpen} \r\n        userId = {userId}\r\n        setUserId = {setUserId}\r\n        userName= {userName}\r\n        setUserName = {setUserName}/>\r\n      )}\r\n      {isLoggedIn && uploadModalOpen && (\r\n        <Upload setuploadModalOpen={setuploadModalOpen} \r\n        userId = {userId}\r\n        setUserId = {setUserId}\r\n        userName= {userName}\r\n        setUserName = {setUserName}/>\r\n      )}\r\n      {!isLoggedIn && loginModalOpen && (\r\n        <LoginForm\r\n          setloginModalOpen={setloginModalOpen}\r\n        />\r\n      )}\r\n      {showHashModalOpen && <Modal\r\n      open={true}\r\n      onClose={closehashtagsModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        sx={modalstyle}\r\n      >\r\n      <div className=\"hashlistdiv\" style={{height:\"300px\", overflow : \"overlay\"}}>\r\n      {hashTags.data.map((hashtag, index)=> (\r\n        <li id=\"hashlist\" key={index} style={{listStyle: \"none\", marginBottom:\"5px\"}}> #{hashtag.name}</li>\r\n      ))}\r\n      </div>\r\n        \r\n      <Button\r\n        fullWidth\r\n        variant=\"contained\"\r\n        sx={{ mt: 3, mb: 2}}\r\n        size=\"large\"\r\n        onClick={closehashtagsModal}\r\n      >\r\n        확인\r\n      </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n\r\n      }\r\n      \r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            {/* <p>검색할 태그</p> */}\r\n          </Typography>\r\n          {/* <Search>\r\n            <StyledInputBase\r\n              onChange={(event) => {\r\n                setValue(event.target.value);\r\n              }}\r\n              placeholder=\"태그 입력\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyPress={(event) => {\r\n                if (event.which == 32) alert(value);\r\n              }}\r\n            />\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n          </Search> */}\r\n          {/* <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">\r\n              카테고리\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              required\r\n              value={category}\r\n              label=\"category\"\r\n              onChange={onChangeCategory}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"25px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">시즌</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              value={season}\r\n              label=\"season\"\r\n              required\r\n              onChange={onChangeSeason}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl> */}\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n          <Searchbar />\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={0} color=\"error\"></Badge>\r\n            </IconButton> */}\r\n            <>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                sx={{ marginRight: \"10px\" }}\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"false\"\r\n                color=\"primary\"\r\n                onClick={uploadClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </>\r\n            {!isLoggedIn ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"100%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                    whiteSpace: \"nowrap\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={Logout}\r\n                >\r\n                  로그아웃\r\n                </Button>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                  onClick={onReady}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" }, float: \"right\" }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loadPost } from \"@/reducers/post\"; \r\nimport FavoriteBorderTwoToneIcon from '@mui/icons-material/FavoriteBorderTwoTone';\r\n\r\ntype CardpostProps = {\r\n  setCount: any;\r\n  index: number;\r\n  posts: any[];\r\n  category: string;\r\n  id: number;\r\n  brand: string;\r\n  link: string;\r\n  Images: {\r\n    src: string;\r\n  }[];\r\n  season: string;\r\n  reason: string;\r\n  name: string;\r\n  hashtags: {\r\n    PostHashtag: {\r\n      HashtagId: number;\r\n    };\r\n    name: string;\r\n  }[];\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Cardpost(props: CardpostProps) {\r\n  // const isLoggedIn = false;\r\n  const [like, setLike] = useState(false);\r\n  const { isLoggedIn } = useSelector((state: any) => state.user);\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  const HASHAPI = `${process.env.NEXT_PUBLIC_API}/hashtagsearch`;\r\n  const DELAPI = `${process.env.NEXT_PUBLIC_API}/deletpost/${props.id}`;\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [ImagePath, setImagePath] = React.useState(\"\");\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const onToggleLike = useCallback(()=>{\r\n    setLike( (prev) => !prev )\r\n  },[])\r\n\r\n  const delClick = useCallback(() => {\r\n    if (isLoggedIn) {\r\n      setModalOpen(true);\r\n    } else {\r\n      alert(\"로그인 해주세요\");\r\n      //로그인 모달 띄우기 넣어야\r\n    }\r\n    // if (props.isLoggedIn) {\r\n    //   axios\r\n    //     .post(DELAPI, {})\r\n    //     .then((result) => {\r\n    //       const Posts = props.posts.filter((post) => post.id !== props.id);\r\n    //       props.setPost(Posts);\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.log(err);\r\n    //     });\r\n    // } else {\r\n    //   //로그인 모달 띄우기\r\n    //   alert(\"로그인 해주세요\");\r\n    // }\r\n  }, [isLoggedIn]);\r\n\r\n  const copyClick = useCallback(() => {\r\n    alert(\"준비중입니다.\");\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      if (isLoggedIn) {\r\n        axios\r\n          .post(DELAPI, {})\r\n          .then((result) => {\r\n            const Posts = props.posts.filter((post) => post.id !== props.id);\r\n            dispatch(loadPost(result.data));\r\n            setModalOpen(false);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            alert(\"버그 발생!\");\r\n          });\r\n      } else {\r\n        //로그인 모달 띄우기\r\n        alert(\"로그인 해주세요\");\r\n      }\r\n    },\r\n    [DELAPI,dispatch, props.id, props.posts,  isLoggedIn]\r\n  );\r\n\r\n  const editClick = useCallback(() => {\r\n    alert(\"만드는 중입니다..\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.Images[0] == undefined) {\r\n    } else {\r\n      // console.log(\"props\")\r\n      // console.log(props)\r\n      setImagePath(`../${props.Images[0].src}`);\r\n    }\r\n  }, [props.Images]);\r\n\r\n  const TagClick = React.useCallback((e: any, hashname: string) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    axios\r\n      .post(\r\n        HASHAPI,\r\n        {\r\n          hashtags: \"#\" + hashname,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            // 'Accept': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then((result) => {\r\n        dispatch(loadPost(result.data));\r\n        props.setCount(1);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n        console.log(error);\r\n      });\r\n  }, [HASHAPI,dispatch, props]);\r\n\r\n  return (\r\n    <>\r\n      {modalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closeModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={onSubmit}\r\n            sx={style}\r\n          >\r\n            {/* <form onSubmit={onSubmit}> */}\r\n            <Typography\r\n              component=\"h2\"\r\n              variant=\"h5\"\r\n              sx={{ textAlign: \"center\", marginBottom: \"15px\" }}\r\n            >\r\n              정말 삭제하시겠습니까?\r\n            </Typography>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              sx={{\r\n                mt: 3,\r\n                mb: 2,\r\n                width: \"40%\",\r\n                marginLeft: \"5%\",\r\n                marginRight: \"10%\",\r\n              }}\r\n              size=\"large\"\r\n            >\r\n              삭제\r\n            </Button>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2, width: \"40%\" }}\r\n              size=\"large\"\r\n              onClick={closeModal}\r\n            >\r\n              취소\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Card\r\n        sx={{\r\n          maxWidth: \"15\",\r\n          marginTop: \"20px\",\r\n          // borderRadius: \"24px\",\r\n          boxShadow: \"none\",\r\n        }}\r\n      >\r\n        {/* <Typography>\r\n          <span style={{ float: \"left\", color: \"#A6A6A6\", fontSize: \"80%\" }}>\r\n            {props.name}문병욱\r\n          </span>\r\n        </Typography> */}\r\n        <CardActionArea href={`${props.link}`} target=\"_blank\">\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"400\"\r\n            image={ImagePath}\r\n            alt=\"이미지 오류, 삭제 후 다시 등록해주세요\"\r\n          />\r\n          {/* <button style={{position: \"absolute\", top:\"40%\", left:\"0%\"}}> <span>s</span></button> */}\r\n\r\n          <CardContent>\r\n            <Typography>\r\n              <span\r\n                style={{\r\n                  fontWeight: 900,\r\n                  fontSize: \"130%\",\r\n                  marginBottom: \"4%\",\r\n                }}\r\n              >\r\n                {`${props.brand}`}\r\n              </span>\r\n            </Typography>\r\n\r\n            {/* <span style={{fontWeight :900, fontSize: \"100%\", marginBottom: 5}}>\r\n            참고할 부분\r\n          </span> */}\r\n            <Typography\r\n              sx={{ fontWeight: 900, marginBottom: \"2%\" }}\r\n              variant=\"subtitle2\"\r\n              color=\"text.secondary\"\r\n            >\r\n              참고할 부분\r\n            </Typography>\r\n\r\n            <Typography\r\n              sx={{ marginBottom: \"1%\" }}\r\n              variant=\"body2\"\r\n              color=\"text.secondary\"\r\n            >\r\n              {props.reason}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"inline-block\",\r\n              marginBottom: \"5px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: \"20%\",\r\n                marginBottom: \"3%\",\r\n                verticalAlign: \"center\",\r\n                display: \"inline-block\",\r\n              }}\r\n            >\r\n              {like \r\n              ? <FavoriteIcon\r\n                  onClick={onToggleLike}\r\n                  sx={{ opacity: \"80%\", color:\"#FF3040\" }}\r\n                  \r\n                />\r\n              : <FavoriteBorderTwoToneIcon\r\n                onClick={onToggleLike}\r\n                sx={{ opacity: \"40%\"}}\r\n              />\r\n              }\r\n              <span\r\n                style={{\r\n                  position: \"relative\",\r\n                  top: \"-7px\",\r\n                  marginLeft: \"5px\",\r\n                  color: \"#A6A6A6\",\r\n                }}\r\n              >\r\n                0\r\n              </span>\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: \"60%\",\r\n                marginBottom: \"3%\",\r\n                display: \"inline-block\",\r\n                float: \"right\",\r\n              }}\r\n            >\r\n              <DeleteIcon\r\n                id=\"delicon\"\r\n                onClick={delClick}\r\n                sx={{ marginRight: \"10px\", opacity: \"40%\", float: \"right\" }}\r\n              />\r\n              <EditIcon\r\n                id=\"editicon\"\r\n                onClick={editClick}\r\n                sx={{ marginRight: \"10px\", opacity: \"40%\", float: \"right\" }}\r\n              />\r\n              <FileCopyIcon\r\n                id=\"copyicon\"\r\n                onClick={copyClick}\r\n                sx={{ marginRight: \"10px\", opacity: \"40%\", float: \"right\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n          {/* <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${parseInt(props.season) % 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`TagCategory Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div> */}\r\n          {props.hashtags.map((hashtag, index) => (\r\n            <div style={{ margin: \"2px\" }} key={index}>\r\n              <div\r\n                className={`Tag${hashtag.PostHashtag.HashtagId % 8} Tag`}\r\n                style={{ display: \"inline-block\", margin: \"2px\" }}\r\n                onClick={(e) => {\r\n                  TagClick(e, hashtag.name);\r\n                }}\r\n              >\r\n                <a href=\"\">#{hashtag.name}</a>\r\n              </div>{\" \"}\r\n              &nbsp;\r\n            </div>\r\n          ))}\r\n\r\n          <div style={{ width: \"100%\" }}>\r\n            <span\r\n              style={{\r\n                float: \"left\",\r\n                color: \"#A6A6A6\",\r\n                fontSize: \"80%\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              작성자 : {props.name}\r\n            </span>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Card from \"./Cardpost\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { useInput } from \"@mui/base\";\r\nimport axios from \"axios\";\r\nimport Image from \"next/image\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\ntype ResponsiveGridProps = {\r\n  setCount: any;\r\n};\r\n\r\nexport default function ResponsiveGrid({ setCount }: ResponsiveGridProps) {\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n\r\n  const [Imagesrc, setImagesrc] = useState(\"\");\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Grid\r\n          container\r\n          spacing={{ xs: 2, md: 3 }}\r\n          columns={{ xs: 4, sm: 8, md: 12 }}\r\n        >\r\n          {postArray &&\r\n            (postArray as Array<any>).map((post, index) => (\r\n              <Grid item xs={6} sm={4} md={3} lg={4} key={post.id}>\r\n                <Item>\r\n                  <li\r\n                    style={{\r\n                      maxWidth: \"320px\",\r\n                      display: \"inline-block\",\r\n                      // marginRight: \"4%\",\r\n                      // marginLeft: \"1%\",\r\n                      // marginTop: \"1%\",-\r\n                    }}\r\n                  >\r\n                    <Card\r\n                      setCount={setCount}\r\n                      index={index}\r\n                      name={post.name}\r\n                      posts={postArray}\r\n                      id={post.id}\r\n                      category={post.category}\r\n                      brand={post.brand}\r\n                      Images={post.Images}\r\n                      link={post.link}\r\n                      season={post.season}\r\n                      hashtags={post.Hashtags}\r\n                      reason={post.reason}\r\n                    />{\" \"}\r\n                  </li>\r\n                </Item>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios from \"axios\";\nimport { useSelector } from 'react-redux';\nimport { initialState as postinitialState } from \"@/reducers/post\";\nimport { initialState as userinitialState } from \"@/reducers/user\";\nimport React, { useCallback, useState, useEffect, useMemo } from \"react\";\nimport Link from \"next/link\";\nimport Pagination from \"@mui/material/Pagination\";\nimport Stack from \"@mui/material/Stack\";\nimport { loadPost } from \"@/reducers/post\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Home() {\n  // const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  const { user } = useSelector((state : any) => state.user)\n  const dispatch = useDispatch();\n\n\n  const [userId, setUserId] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [count, setCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [resultStore, setResultStore] = useState([]);\n\n  var sliceCount = 24;\n\n  const LOADAPI = `${process.env.NEXT_PUBLIC_API}/loadpost`;\n\n  const loadPosts = useCallback(() => {\n    axios\n      .get(LOADAPI)\n      .then((result) => {\n        const slicedPosts =[];\n        setResultStore(result.data)\n        for(let i=0; i< sliceCount; i++){\n          slicedPosts.push(result.data[i])\n        }\n\n        dispatch(loadPost(slicedPosts))\n\n        console.log(result.data)\n        // setPost(slicedPosts);\n        setPage(1)\n        setCount( Math.ceil(result.data.length / sliceCount))\n      })\n      .catch((error) => {\n        alert(\"로딩이 정상적으로 되지 않았습니다.\");\n        \n        console.log(error);\n        dispatch(loadPost([]))\n      });\n  }, [LOADAPI, dispatch, sliceCount]);\n\n  const handleChange = useCallback((event: React.ChangeEvent<unknown>, value: number)=>{\n    const slicedPosts:any[] =[];\n    const num = (resultStore.length < sliceCount*value) ? resultStore.length : sliceCount*value\n    for(let i=sliceCount*(value-1); i< num; i++){\n      slicedPosts.push(resultStore[i])\n    }\n\n    \n    dispatch(loadPost(slicedPosts))\n\n    setPage(value)\n    console.log(\"hanlde\")\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n\n  },[dispatch, sliceCount, resultStore])\n\n  useEffect(() => {\n    loadPosts();\n  }, [loadPosts]);\n\n  // const LOGINCHECKAPI = `${process.env.NEXT_PUBLIC_API}/logincheck`;\n  // useEffect(() => {\n  //   axios\n  //     .get(LOGINCHECKAPI)\n  //     .then((result) => {\n  //       if (result.data.login) {\n  //         dispatch(loginAction())\n  //         // setIsLoggedIn(true);\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // }, [LOGINCHECKAPI, dispatch]);\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPosts}>\n          <h1 id=\"title\">CRUMP REFERENCE</h1>\n        </a>\n        <div style={{ marginBottom: \"40px\" }}>\n          <Navbar\n            userId={userId}\n            setUserId={setUserId}\n            userName={userName}\n            setUserName={setUserName}\n            setCount={setCount}\n          />\n        </div>\n        <ResponsiveGrid\n          setCount={setCount}\n        />\n        {/* <div>\n          <Stack spacing={2} sx={{alignItems:\"center\", marginTop:\"30px\", marginBottom:\"50px\"}}>\n            <Pagination page={page} count={count} color=\"primary\" onChange={handleChange}/>\n          </Stack>\n        </div> */}\n      </div>\n    </>\n  );\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","useInput","value","setter","useState","initValue","handler","useCallback","e","target","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Signup","param","setModalOpen","userId","setUserId","userName","setUserName","dispatch","useDispatch","API","concat","process","email","onChangeEmail","emailError","setEmailError","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","checkEmail","res","check","test","closeModal","onSubmit","preventDefault","stopPropagation","axios","name","headers","then","loginRequestAction","result","data","catch","error","response","message","alert","jsx_runtime","jsx","Modal","open","onClose","aria-labelledby","aria-describedby","jsxs","Box","component","noValidate","autoComplete","sx","Typography","variant","textAlign","TextField","label","marginTop","fullWidth","type","required","onChange","span","color","Button","mt","mb","size","modalstyle","Upload","props","file","setFile","imageFile","setImageFile","isImage","setIsImage","highlight","setHighlight","reason","onChangeReason","brand","onChangeBrand","link","onChangeLink","showHashModalOpen","setShowHashModalOpen","React","GETHASHAPI","post","setPost","title","desc","photos","setuploadModalOpen","closehashtagsModal","useRef","category","setCategory","season","setSeason","text","onChangeText","setText","handleCategoryChange","event","handleSeasonChange","handlefilechange","handfiles","files","photosArr","undefined","length","i","reader","FileReader","readAsDataURL","addEventListener","fileobj","src","handeldelete","parentElement","slice","targetindex","handlehighlight","handleunhighlight","handledrop","dt","dataTransfer","hashTags","setHashTags","getHashtags","console","log","formData","FormData","append","addPost","location","reload","err","Fragment","div","className","height","overflow","map","hashtag","index","li","id","listStyle","onClick","FormControl","marginRight","InputLabel","Select","labelId","defaultValue","MenuItem","whiteSpace","fontWeight","display","onDragEnter","onDragOver","onDragLeave","onDrop","input","placeholder","multiple","htmlFor","item","Image","alt","button","LoginForm","setloginModalOpen","isLoggingIn","useSelector","state","user","onSubmitForm","LoadingButton","loading","Searchbar","onChangeValue","HASHAPI","searchBar","useEffect","current","focus","TagSearch","loadPost","split","upperCaseValue","toUpperCase","hashtags","form","flex","marginLeft","IconButton","aria-label","xs","md","SearchIcon","fill","inputRef","Navbar","setCount","isLoggedIn","uploadModalOpen","loginModalOpen","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","modalOpen","showModal","showLoginModal","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","Logout","logoutRequestAction","uploadClick","handleMobileMenuOpen","currentTarget","onReady","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","flexGrow","marginBottom","AppBar","backgroundColor","Toolbar","noWrap","sm","edge","aria-haspopup","AddIcon","aria-controls","AccountCircle","float","MoreIcon","Cardpost","like","setLike","postArray","DELAPI","ImagePath","setImagePath","onToggleLike","prev","delClick","copyClick","posts","filter","editClick","Images","TagClick","hashname","Card","maxWidth","CardActionArea","href","CardMedia","image","CardContent","fontSize","CardActions","verticalAlign","FavoriteIcon","opacity","FavoriteBorderTwoToneIcon","DeleteIcon","EditIcon","FileCopyIcon","margin","PostHashtag","HashtagId","a","Item","styled","Paper","theme","palette","mode","typography","body2","padding","spacing","secondary","ResponsiveGrid","Imagesrc","setImagesrc","Grid","container","columns","lg","Hashtags","Home","count","page","setPage","resultStore","setResultStore","LOADAPI","loadPosts","slicedPosts","Math","ceil","num","sliceCount","scrollTo","behavior","Head","meta","content","h1"],"sourceRoot":""}