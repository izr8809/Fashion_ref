{"version":3,"file":"static/chunks/pages/index-c6d6329afceec6d2.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./hooks/useInput.ts","webpack://_N_E/./Components/signup.tsx","webpack://_N_E/./Components/upload.tsx","webpack://_N_E/./Components/LoginForm.tsx","webpack://_N_E/./Components/Navbar.tsx","webpack://_N_E/./Components/AlignItemsList.tsx","webpack://_N_E/./Components/ResponsiveGrid.tsx","webpack://_N_E/./pages/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { color } from \"@mui/system\";\r\n\r\ntype SignupProps = {\r\n  setModalOpen: any;\r\n  setIsLoggedIn: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({\r\n  setIsLoggedIn,\r\n  setModalOpen,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: SignupProps): ReactElement {\r\n  const API = `${process.env.NEXT_PUBLIC_API}/signups`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password, setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email: any) => {\r\n    let res = false;\r\n\r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n\r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (password !== passwordCheck) {\r\n        setPasswordError(true);\r\n      } else if (!checkEmail(email)) {\r\n        setEmailError(true);\r\n      } else {\r\n        axios\r\n          .post(\r\n            API,\r\n            // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n            // 회원가입창에서 클라이언트가 입력하는 데이터\r\n            {\r\n              email: email,\r\n              name: nickname,\r\n              password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          // 그러면 서버에서 클라이언트로 response(응답)으로\r\n          // {ok: true} 아니면 {ok: false}가 온다.\r\n          // .then((response) => {\r\n          //   console.log(response); // response.data로 해야?\r\n          // })\r\n          .then((result) => {\r\n            setIsLoggedIn(true);\r\n            setUserId(result.data.userId);\r\n            setUserName(result.data.userName);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.data.message == \"already exist\") {\r\n              alert(\"이미 존재하는 이메일입니다.\");\r\n            } else {\r\n              alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n            }\r\n          });\r\n      }\r\n      // if (!term) {\r\n      //   return setTermError(true);\r\n      // }\r\n    },\r\n    [email, password, passwordCheck, setIsLoggedIn, nickname]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\" sx={{ textAlign: \"center\" }}>\r\n          회원가입\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          // error={checkEmail(email)}\r\n          onChange={onChangeEmail}\r\n        />\r\n        {emailError && (\r\n          <span style={{ color: \"red\" }}>Email 형식이 잘못되었습니다</span>\r\n        )}\r\n        <TextField\r\n          label=\"이름\"\r\n          name=\"user-nick\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          onChange={onChangeNickname}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          fullWidth\r\n          name=\"user-password\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={password}\r\n          required\r\n          onChange={onChangePassword}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호체크\"\r\n          fullWidth\r\n          name=\"user-password-check\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={passwordCheck}\r\n          required\r\n          onChange={setPasswordCheck}\r\n        />\r\n        {passwordError && (\r\n          <span style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다</span>\r\n        )}\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    // {/* <div className={\"container\"} ref={modalRef}>\r\n    //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n    //       <br />\r\n    //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n    //     </TextField>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-nick\">닉네임</label>\r\n    //       <br />\r\n    //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password\">비밀번호</label>\r\n    //       <br />\r\n    //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n    //       <br />\r\n    //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n    //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n    //     </div>\r\n    //     {/* <div>\r\n    //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n    //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n    //     </div> */}\r\n    //     <div style={{ marginTop: 10 }}>\r\n    //       <button>가입하기</button>\r\n    //     </div>\r\n    //     <button className={\"close\"} onClick={closeModal}>\r\n    //         X\r\n    //     </button>\r\n    //   </div> */}\r\n    // }\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nimport Router from \"next/router\";\r\n\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype UploadProps = {\r\n  setuploadModalOpen: any;\r\n  userId: string;\r\n  setUserId: any;\r\n  userName: string;\r\n  setUserName: any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload(props: UploadProps) {\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  const button = useRef();\r\n  // const handleChange = (file: any) => {\r\n  //   setFile(file);\r\n  //   console.log(file);\r\n  // };\r\n  const API = `${process.env.NEXT_PUBLIC_API}/uploads`;\r\n  const [imageFile, setImageFile] = useState<File>();\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [reason, onChangeReason] = useInput(\"\");\r\n  const [brand, onChangeBrand] = useInput(\"\");\r\n  const [link, onChangeLink] = useInput(\"\");\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n  const GETHASHAPI = `${process.env.NEXT_PUBLIC_API}/getHash`;\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const closeModal = () => {\r\n    props.setuploadModalOpen(false);\r\n  };\r\n  const { title, desc, photos } = post;\r\n  // const handlechange = e =>{\r\n  //   setPost({\r\n  //     ...post,\r\n  //     [e.target.name]: e.target.value;\r\n  //   })\r\n  // }\r\n\r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n  const inputRef = useRef(null);\r\n  const [category, setCategory] = React.useState(\"상의\");\r\n  const [season, setSeason] = React.useState(\"23SS\");\r\n\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = (files: FileList | null) => {\r\n    let photosArr: any[] = [];\r\n    if (files != undefined) {\r\n      if (files.length > 1) {\r\n        alert(\"이미지는 1개만 넣어주세요\");\r\n      } else {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          setImageFile(files[i]);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              photos: [...photos, ...photosArr],\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handeldelete = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    let target = (e.target as HTMLSpanElement).parentElement;\r\n    let targetindex = 1;\r\n    setPost({\r\n      ...post,\r\n      photos: [\r\n        ...photos.slice(0, targetindex),\r\n        ...photos.slice(targetindex + 1),\r\n      ],\r\n    });\r\n    setIsImage(false);\r\n  };\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(false);\r\n  }, []);\r\n  const handledrop = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let dt = e.dataTransfer;\r\n    let files = dt?.files;\r\n    setHighlight(false);\r\n    handfiles(files);\r\n  };\r\n\r\n  const uploadClick = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const USERINFOAPI = `${process.env.NEXT_PUBLIC_API}/USERINFO`;\r\n  const [userInfo, setUserInfo] = useState({ name: \"\" });\r\n\r\n  const [hashTags, setHashTags] = React.useState({\r\n    data: [{ name: \"\" }],\r\n  });\r\n  useEffect(() => {\r\n    axios\r\n      .get(USERINFOAPI, {})\r\n      .then((result) => {\r\n        setUserInfo(result.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [props.userId]);\r\n\r\n  const getHashtags = useCallback(() => {\r\n    axios\r\n      .get(GETHASHAPI)\r\n      .then((result) => {\r\n        setShowHashModalOpen(true);\r\n        setHashTags(result);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n      });\r\n  }, []);\r\n\r\n\r\n  const onSubmit = (e: any) => {\r\n    console.log(\"!\");\r\n    if (brand == \"\") {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      alert(\"브랜드입력 필수\");\r\n    } else if (imageFile == undefined) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      alert(\"이미지 필수\");\r\n    } else {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      // location.reload();\r\n      const formData = new FormData();\r\n      formData.append(\"image\", imageFile as File);\r\n      formData.append(\"userId\", props.userId);\r\n      formData.append(\"userName\", props.userName);\r\n      formData.append(\"brand\", brand);\r\n      formData.append(\"link\", link);\r\n      formData.append(\"category\", category);\r\n      formData.append(\"season\", season);\r\n      formData.append(\"hashtag\", text);\r\n      formData.append(\"reason\", reason);\r\n      // alert(formData)\r\n\r\n      axios\r\n        .post(API, formData)\r\n        .then((result) => {\r\n          console.log(result);\r\n          location.reload();\r\n          // const ele = document.getElementById('submit_bt');\r\n          // ele?.click();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          location.reload();\r\n        });\r\n    }\r\n    //   axios\r\n    //     .post(\r\n    //       API,\r\n    //       // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n    //       // 회원가입창에서 클라이언트가 입력하는 데이터\r\n    //       {\r\n    //         nickname: nickname,\r\n    //         brand: brand,\r\n    //         link: link, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n    //         image : (imageFile as File).name\r\n    //       },\r\n    //       {\r\n    //         headers: {\r\n    //           \"Content-Type\": \"application/json\",\r\n    //           // 'Accept': 'application/json',\r\n    //         },\r\n    //       }\r\n    //     )\r\n    //     // 그러면 서버에서 클라이언트로 response(응답)으로\r\n    //     // {ok: true} 아니면 {ok: false}가 온다.\r\n    //     // .then((response) => {\r\n    //     //   console.log(response); // response.data로 해야?\r\n    //     // })\r\n    //     .then((result) => {\r\n    //       console.log(result);\r\n    //       // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n    //       // history.replace('/login');\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n    //       console.log(error);\r\n    //     });\r\n  };\r\n  return (\r\n    <>\r\n      {showHashModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closehashtagsModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <div style={{ height: \"300px\", overflow: \"overlay\" }}>\r\n              {hashTags.data.map((hashtag, index) => (\r\n                <li key={index} style={{ listStyle: \"none\" }}>\r\n                  {\" \"}\r\n                  #{hashtag.name}\r\n                </li>\r\n              ))}\r\n            </div>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closehashtagsModal}\r\n            >\r\n              확인\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Modal\r\n        open={true}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box\r\n          component=\"form\"\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          onSubmit={onSubmit}\r\n          sx={style}\r\n        >\r\n          {/* <form onSubmit={onSubmit}> */}\r\n          <Typography sx={{ textAlign: \"center\" }} component=\"h1\" variant=\"h5\">\r\n            업로드\r\n          </Typography>\r\n          {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n          <TextField\r\n            required\r\n            label=\"브랜드\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-brand\"\r\n            type=\"text\"\r\n            value={brand}\r\n            variant=\"standard\"\r\n            onChange={onChangeBrand}\r\n          />\r\n          <TextField\r\n            label=\"Link\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={link}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeLink}\r\n          />\r\n\r\n          <TextField\r\n            label=\"선정이유\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={reason}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeReason}\r\n          />\r\n\r\n          <FormControl\r\n            sx={{ width: \"40%\", marginRight: \"10%\", marginTop: \"25px\" }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-label\">상의</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"상의\"}\r\n              value={category}\r\n              label=\"카테고리\"\r\n              required\r\n              onChange={handleCategoryChange}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl sx={{ width: \"40%\", marginTop: \"25px\" }}>\r\n            <InputLabel id=\"demo-simple-select-label\">23SS</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"23SS\"}\r\n              value={season}\r\n              label=\"시즌\"\r\n              required\r\n              onChange={handleSeasonChange}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            sx={{ marginTop: \"30px\" }}\r\n            value={text}\r\n            onChange={onChangeText}\r\n            fullWidth\r\n            label=\"해시태그입력 #검정 #반팔 \"\r\n            variant=\"outlined\"\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n          <div className=\"file-upload\" style={{ marginTop: \"10px\" }}>\r\n            <div className=\"custom-form-group\">\r\n              {!isImage && (\r\n                <div\r\n                  className={\r\n                    highlight\r\n                      ? \"custom-file-drop-area highlight\"\r\n                      : \"custom-file-drop-area\"\r\n                  }\r\n                  onDragEnter={handlehighlight}\r\n                  onDragOver={handlehighlight}\r\n                  onDragLeave={handleunhighlight}\r\n                  onDrop={handledrop}\r\n                >\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"photos\"\r\n                    placeholder=\"Enter photos\"\r\n                    multiple={false}\r\n                    id=\"filephotos\"\r\n                    onChange={handlefilechange}\r\n                  />\r\n                  <label htmlFor=\"filephotos\">Drag & Drop</label>\r\n                </div>\r\n              )}\r\n              <div className=\"custom-file-preview\">\r\n                {photos.length > 0 &&\r\n                  photos.map((item: any, index) =>\r\n                    index != 0 ? (\r\n                      <div className=\"prev-img\" key={index}>\r\n                        <span onClick={handeldelete}>&times;</span>\r\n                        {item && <Image src={item.src} alt={item.name} />}\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )\r\n                  )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            id=\"submit_bt\"\r\n            style={{ display: \"none\" }}\r\n            type=\"submit\"\r\n          ></button>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            size=\"large\"\r\n          >\r\n            확인\r\n          </Button>\r\n          {/* </form> */}\r\n        </Box>\r\n        {/* <Button onClick={closeModal}>닫기</Button> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  setIsLoggedIn: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function LoginForm({\r\n  setIsLoggedIn,\r\n  setloginModalOpen,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: LoginFormProps): ReactElement {\r\n  const API = `${process.env.NEXT_PUBLIC_API}/login`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [User, setUser] = useState({\r\n    id: 0,\r\n    name: null,\r\n  });\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback(\r\n    (event: any) => {\r\n      event.preventDefault();\r\n      if(email == \"\"){\r\n        alert(\"이메일을 입력해주세요\")\r\n      }\r\n      else if(password == \"\"){\r\n        alert(\"비밀번호를 입력해주세요\")\r\n      }\r\n      else{\r\n        axios\r\n        .post(\r\n          API,\r\n          // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n          // 회원가입창에서 클라이언트가 입력하는 데이터\r\n          {\r\n            email: email,\r\n            password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // 'Accept': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        .then((result) => {\r\n          setUser(result.data.data);\r\n          setIsLoggedIn(true);\r\n          setUserId(result.data.data.id);\r\n          setUserName(result.data.data.name);\r\n          console.log(result.data.data)\r\n          // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n          // history.replace('/login');\r\n        })\r\n        .catch((error) => {\r\n          alert(\"로그인 정보가 일치하지 않습니다.\");\r\n          console.log(error);\r\n        });\r\n      }\r\n      \r\n    },\r\n    [email, password, setIsLoggedIn]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          로그인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement, useRef } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\n// import { useNavigate  } from 'react-router-dom'; // 설치한 패키지\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/signup\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Upload from \"@/Components/upload\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nconst inter = Inter({ subsets: [\"latin\"] });\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(\"#F8F8F8\", 0.73),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(\"#F8F8F8\", 0.33),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n    height: \"40%\",\r\n  },\r\n}));\r\n\r\ntype NavbarProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n  setCount: any,\r\n};\r\n\r\nexport default function Navbar({\r\n  isLoggedIn,\r\n  setIsLoggedIn,\r\n  setPost,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n  setCount,\r\n}: NavbarProps): ReactElement {\r\n  // const navigate = useNavigate();\r\n  const HASHAPI = `${process.env.NEXT_PUBLIC_API}/hashtagsearch`;\r\n  const GETHASHAPI = `${process.env.NEXT_PUBLIC_API}/getHash`;\r\n  const API = `${process.env.NEXT_PUBLIC_API}/loadpost`;\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n  const [hashTags, setHashTags] = React.useState({\r\n    data :[\r\n      {name : \"\"},\r\n    ]\r\n  });\r\n\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n  \r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchBar.current) {\r\n      searchBar.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  const showModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const showUploadModal = () => {\r\n    setuploadModalOpen(true);\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    const LOGOUTAPI = `${process.env.NEXT_PUBLIC_API}/logout`;\r\n    axios\r\n      .get(LOGOUTAPI)\r\n      .then((result) => {\r\n        if (result.data.message == \"ok\") setIsLoggedIn(false);\r\n        setloginModalOpen(false);\r\n      })\r\n      .catch((err) => {alert(\"서버와 연결 끊겼네요. 새로고침.!\")});\r\n  }, [setIsLoggedIn]);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (isLoggedIn) {\r\n      setuploadModalOpen(true);\r\n    } else {\r\n      setloginModalOpen(true);\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onReady = useCallback(()=>{alert(\"준비중입니다.\")},[])\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      // e.preventDeafult();\r\n      // e.stopPropagation();\r\n      if (value == \"\") {\r\n        axios\r\n          .get(API)\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n          });\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        let upperCaseValue = value.toUpperCase();\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        axios\r\n          .post(\r\n            HASHAPI,\r\n            {\r\n              hashtags: upperCaseValue,\r\n              category: category,\r\n              season: season,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            setCount(1)\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n            console.log(error);\r\n          });\r\n      }\r\n    },\r\n    [value, setPost, category, season]\r\n  );\r\n\r\n  const getHashtags = useCallback(()=>{\r\n    axios\r\n    .get(GETHASHAPI)\r\n    .then((result) => {\r\n      setShowHashModalOpen(true);\r\n      setHashTags(result)\r\n      // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n      // history.replace('/login');\r\n    })\r\n    .catch((error) => {\r\n      alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n    });\r\n  },[])\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <p>만드는 중입니다</p>\r\n      </MenuItem>\r\n      {/* <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>프로필</p>\r\n      </MenuItem> */}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {!isLoggedIn && modalOpen && (\r\n        <Signup setIsLoggedIn={setIsLoggedIn} setModalOpen={setModalOpen} \r\n        userId = {userId}\r\n        setUserId = {setUserId}\r\n        userName= {userName}\r\n        setUserName = {setUserName}/>\r\n      )}\r\n      {isLoggedIn && uploadModalOpen && (\r\n        <Upload setuploadModalOpen={setuploadModalOpen} \r\n        userId = {userId}\r\n        setUserId = {setUserId}\r\n        userName= {userName}\r\n        setUserName = {setUserName}/>\r\n      )}\r\n      {!isLoggedIn && loginModalOpen && (\r\n        <LoginForm\r\n          setIsLoggedIn={setIsLoggedIn}\r\n          setloginModalOpen={setloginModalOpen}\r\n          userId = {userId}\r\n          setUserId = {setUserId}\r\n          userName= {userName}\r\n          setUserName = {setUserName}\r\n        />\r\n      )}\r\n      {showHashModalOpen && <Modal\r\n      open={true}\r\n      onClose={closehashtagsModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        sx={modalstyle}\r\n      >\r\n      <div className=\"hashlistdiv\" style={{height:\"300px\", overflow : \"overlay\"}}>\r\n      {hashTags.data.map((hashtag, index)=> (\r\n        <li id=\"hashlist\" key={index} style={{listStyle: \"none\", marginBottom:\"5px\"}}> #{hashtag.name}</li>\r\n      ))}\r\n      </div>\r\n        \r\n      <Button\r\n        fullWidth\r\n        variant=\"contained\"\r\n        sx={{ mt: 3, mb: 2}}\r\n        size=\"large\"\r\n        onClick={closehashtagsModal}\r\n      >\r\n        확인\r\n      </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n\r\n      }\r\n      \r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            {/* <p>검색할 태그</p> */}\r\n          </Typography>\r\n          {/* <Search>\r\n            <StyledInputBase\r\n              onChange={(event) => {\r\n                setValue(event.target.value);\r\n              }}\r\n              placeholder=\"태그 입력\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyPress={(event) => {\r\n                if (event.which == 32) alert(value);\r\n              }}\r\n            />\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n          </Search> */}\r\n          {/* <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">\r\n              카테고리\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              required\r\n              value={category}\r\n              label=\"category\"\r\n              onChange={onChangeCategory}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"25px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">시즌</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              value={season}\r\n              label=\"season\"\r\n              required\r\n              onChange={onChangeSeason}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl> */}\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n          <form\r\n            onSubmit={TagSearch}\r\n            style={{ width: \"70%\", flex: \"auto\", marginLeft: \"15%\" }}\r\n          >\r\n            <IconButton\r\n              type=\"submit\"\r\n              aria-label=\"search\"\r\n              sx={{ display: { xs: \"none\", md: \"inline-block\" } }}\r\n            >\r\n              <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n            </IconButton>\r\n            <TextField\r\n              id=\"search-bar\"\r\n              className=\"text\"\r\n              sx={{ display: \"inline-block\", width: \"80%\" }}\r\n              value={value}\r\n              onChange={onChangeValue}\r\n              label=\"#상의 #검정\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Search...\"\r\n              size=\"small\"\r\n              inputRef={searchBar}\r\n            />\r\n          </form>\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={0} color=\"error\"></Badge>\r\n            </IconButton> */}\r\n            <>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                sx={{ marginRight: \"10px\" }}\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"false\"\r\n                color=\"primary\"\r\n                onClick={uploadClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </>\r\n            {!isLoggedIn ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"100%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                    whiteSpace: \"nowrap\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={Logout}\r\n                >\r\n                  로그아웃\r\n                </Button>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                  onClick={onReady}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" }, float: \"right\" }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\n\r\ntype AlignItemsListProps = {\r\n  category: string;\r\n  brand: string;\r\n  link: string;\r\n  Images: [{\r\n    src :string,\r\n  }\r\n  ];\r\n  season: string;\r\n  reason: string;\r\n  hashtags: any[];\r\n  id: number;\r\n  setPost: any;\r\n  posts: any[];\r\n  index: number;\r\n  name: string;\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nconst category = {\r\n  상의: 1,\r\n  하의: 2,\r\n  아우터: 3,\r\n  디테일: 4,\r\n  이미지: 5,\r\n  악세사리: 6,\r\n};\r\n\r\nconst season = {\r\n  \"23SS\": 7,\r\n  \"23FW\": 8,\r\n};\r\nexport default function AlignItemsList(props: AlignItemsListProps) {\r\n  const [category, setCategory] = useState(\"\");\r\n  const [season, setSeason] = useState(\"\");\r\n\r\n  const HASHAPI = `${process.env.NEXT_PUBLIC_API}/hashtagsearch`;\r\n  const DELAPI = `${process.env.NEXT_PUBLIC_API}/deletpost/${props.id}`;\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [ImagePath, setImagePath] = React.useState(\"\");\r\n  \r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n  const delClick = useCallback(() => {\r\n    if(props.isLoggedIn)\r\n    {\r\n      setModalOpen(true)\r\n    }\r\n    else{\r\n      alert(\"로그인 해주세요\")\r\n    }\r\n    // if (props.isLoggedIn) {\r\n    //   axios\r\n    //     .post(DELAPI, {})\r\n    //     .then((result) => {\r\n    //       const Posts = props.posts.filter((post) => post.id !== props.id);\r\n    //       props.setPost(Posts);\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.log(err);\r\n    //     });\r\n    // } else {\r\n    //   //로그인 모달 띄우기\r\n    //   alert(\"로그인 해주세요\");\r\n    // }\r\n  }, [DELAPI, props]);\r\n\r\n  const copyClick = useCallback(()=>{\r\n\r\n    alert(\"준비중입니다.\")\r\n  },[])\r\n\r\n\r\n  const onSubmit = useCallback((e:any)=>{\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    if (props.isLoggedIn) {\r\n      axios\r\n        .post(DELAPI, {})\r\n        .then((result) => {\r\n          const Posts = props.posts.filter((post) => post.id !== props.id);\r\n          props.setPost(Posts);\r\n          setModalOpen(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"버그 발생!\")\r\n        });\r\n    } else {\r\n      //로그인 모달 띄우기\r\n      alert(\"로그인 해주세요\");\r\n    }\r\n  },[props.isLoggedIn, props.posts])\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const editClick = useCallback(() => {\r\n    alert(\"만드는 중입니다..\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCategory(props.category);\r\n    setSeason(\"23SS\");\r\n    if(props.Images[0] == undefined){\r\n\r\n    }\r\n    else{\r\n      // console.log(\"props\")\r\n      // console.log(props)\r\n      setImagePath(`../${props.Images[0].src}`)\r\n    }\r\n  }, [props.category,props.Images]);\r\n\r\n  const TagClick = React.useCallback((e: any, hashname: string) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    axios\r\n      .post(\r\n        HASHAPI,\r\n        {\r\n          hashtags: \"#\" + hashname,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            // 'Accept': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then((result) => {\r\n        props.setPost(result.data);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    { modalOpen && \r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h2\" variant=\"h5\" sx={{ textAlign: \"center\", marginBottom:\"15px\" }}>\r\n          정말 삭제하시겠습니까?\r\n        </Typography>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2, width:\"40%\", marginLeft:\"5%\", marginRight:\"10%\" }}\r\n          size=\"large\"\r\n        >\r\n          삭제\r\n        </Button>\r\n        \r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2, width:\"40%\" }}\r\n          size=\"large\"\r\n          onClick={closeModal}\r\n        >\r\n          취소\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    }\r\n    <Card\r\n      sx={{\r\n        maxWidth: \"15\",\r\n        marginTop: \"20px\",\r\n        // borderRadius: \"24px\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <CardActionArea href={`${props.link}`} target=\"_blank\">\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"400\"\r\n          image={ImagePath}\r\n          alt=\"이미지 오류, 삭제 후 다시 등록해주세요\"\r\n        />\r\n        <CardContent>\r\n          <Typography>\r\n            <span\r\n              style={{ fontWeight: 900, fontSize: \"130%\", marginBottom: \"4%\" }}\r\n            >\r\n              {props.name[0]}_{`${props.brand}`}\r\n            </span>\r\n          </Typography>\r\n\r\n          {/* <span style={{fontWeight :900, fontSize: \"100%\", marginBottom: 5}}>\r\n            참고할 부분\r\n          </span> */}\r\n          <Typography\r\n            sx={{ fontWeight: 900, marginBottom: \"1%\" }}\r\n            variant=\"subtitle2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            참고할 부분\r\n          </Typography>\r\n\r\n          <Typography\r\n            sx={{ marginBottom: \"1%\" }}\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <div style={{ width: \"100%\", display:\"inline-block\", marginBottom:\"5px\"}}>\r\n          <div style={{ width: \"20%\", marginBottom: \"3%\", verticalAlign:\"center\" , display:\"inline-block\"}}>\r\n            <FavoriteBorderIcon onClick={() => alert(\"준비중입니다\")}  sx={{opacity:\"40%\"}}/>\r\n            <span style={{position:\"relative\", top:\"-7px\", marginLeft:\"5px\", color:\"#A6A6A6\"}}>0</span>\r\n          </div>\r\n          <div style={{ width: \"60%\", marginBottom: \"3%\", display:\"inline-block\", float:\"right\"}}>\r\n            <DeleteIcon id=\"delicon\" onClick={delClick} sx={{marginRight:\"10px\", opacity:\"40%\", float:\"right\"}}/>\r\n            <EditIcon id=\"editicon\" onClick={editClick} sx={{marginRight:\"10px\", opacity:\"40%\", float:\"right\"}}/>\r\n            <FileCopyIcon id=\"copyicon\" onClick={copyClick} sx={{marginRight:\"10px\", opacity:\"40%\", float:\"right\"}}/>\r\n          </div>\r\n        </div>\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n        {/* <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${parseInt(props.season) % 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`TagCategory Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div> */}\r\n        {props.hashtags.map((hashtag, index) => (\r\n          <div style={{ margin: \"2px\" }} key={index}>\r\n            <div\r\n              className={`Tag${\r\n                parseInt(hashtag.PostHashtag.HashtagId) % 8\r\n              } Tag`}\r\n              style={{ display: \"inline-block\", margin: \"2px\" }}\r\n              onClick={(e) => {\r\n                TagClick(e, hashtag.name);\r\n              }}\r\n            >\r\n              <a href=\"\">#{hashtag.name}</a>\r\n            </div>{\" \"}\r\n            &nbsp;\r\n          </div>\r\n        ))}\r\n      </CardActions>\r\n    </Card>\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { useCallback, useEffect,useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport AlignItemsList from \"./AlignItemsList\";\r\nimport Grid from '@mui/material/Grid';\r\nimport { useInput } from '@mui/base';\r\nimport axios from 'axios';\r\nimport Image from \"next/image\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\ntype ResponsiveGridProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n  posts : any[];\r\n};\r\n\r\nexport default function ResponsiveGrid({ setIsLoggedIn, isLoggedIn, setPost, posts }: ResponsiveGridProps) {\r\n  const [Imagesrc, setImagesrc] = useState(\"\");\r\n  useEffect(()=>{\r\n  },[])\r\n\r\n  return (\r\n    <>\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n        {posts.map((post, index) => (\r\n          <Grid item xs={6} sm={4} md={3} lg ={4} key={index}>\r\n            <Item>\r\n            <li\r\n              style={{\r\n                maxWidth: \"320px\",\r\n                display: \"inline-block\",\r\n                // marginRight: \"4%\",\r\n                // marginLeft: \"1%\",\r\n                // marginTop: \"1%\",-\r\n              }}\r\n            >\r\n            <AlignItemsList isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} name={post.name} index={index} setPost={setPost} posts={posts} id={post.id} category={post.category} brand={post.brand} Images={post.Images}link={post.link} season={post.season} hashtags ={post.Hashtags} reason ={post.reason}/> </li>\r\n            </Item>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n    </>\r\n  );\r\n}\r\n","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios from \"axios\";\nimport React, { useCallback, useState, useEffect, useMemo } from \"react\";\nimport Link from \"next/link\";\n// const inter = Inter({ subsets: [\"latin\"] });\n\nimport Pagination from \"@mui/material/Pagination\";\nimport Stack from \"@mui/material/Stack\";\n\nexport default function Home() {\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [posts, setPost] = useState<any[]>([]);\n  const [userId, setUserId] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [count, setCount] = useState(0);\n  var sliceCount = 24;\n  var resultStore:any[];\n\n  const LOADAPI = `${process.env.NEXT_PUBLIC_API}/loadpost`;\n\n  const loadPost = useCallback(() => {\n    axios\n      .get(LOADAPI)\n      .then((result) => {\n        const slicedPosts =[];\n        resultStore = result.data;\n        for(let i=0; i< sliceCount; i++){\n          slicedPosts.push(result.data[i])\n        }\n        setPost(slicedPosts);\n        setCount( Math.ceil(result.data.length / sliceCount))\n        // for(let i=0; i< result.data.length ; i++){\n        //   console.log(result.data[i].Images[0])\n        //   console.log(i)\n\n        // }\n        // for(let i=0 ; i< result.data.lengths\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\n        // history.replace('/login');\n      })\n      .catch((error) => {\n        alert(\"로딩이 정상적으로 되지 않았습니다.\");\n        setPost([]);\n        console.log(error);\n      });\n  }, [setPost]);\n\n  const handleChange = useCallback((event: React.ChangeEvent<unknown>, value: number)=>{\n    const slicedPosts =[];\n    const num = (resultStore.length < sliceCount*value) ? resultStore.length : sliceCount*value\n    for(let i=sliceCount*(value-1); i< num; i++){\n      slicedPosts.push(resultStore[i])\n    }\n    setPost(slicedPosts);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n\n  },[])\n\n  useEffect(() => {\n    loadPost();\n  }, [loadPost]);\n\n  const LOGINCHECKAPI = `${process.env.NEXT_PUBLIC_API}/logincheck`;\n  useEffect(() => {\n    axios\n      .get(LOGINCHECKAPI)\n      .then((result) => {\n        if (result.data.login) {\n          setIsLoggedIn(true);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPost}>\n          <h1 id=\"title\">CRUMP REFERENCE</h1>\n        </a>\n        <div style={{ marginBottom: \"40px\" }}>\n          <Navbar\n            isLoggedIn={isLoggedIn}\n            setIsLoggedIn={setIsLoggedIn}\n            setPost={setPost}\n            userId={userId}\n            setUserId={setUserId}\n            userName={userName}\n            setUserName={setUserName}\n            setCount={setCount}\n          />\n          {/* <LoginForm /> */}\n          {/* <SignupForm /> */}\n        </div>\n        <ResponsiveGrid\n          isLoggedIn={isLoggedIn}\n          setIsLoggedIn={setIsLoggedIn}\n          setPost={setPost}\n          posts={posts}\n        />\n        <div>\n          <Stack spacing={2} sx={{alignItems:\"center\", marginTop:\"30px\", marginBottom:\"50px\"}}>\n            <Pagination count={count} color=\"primary\" onChange={handleChange}/>\n          </Stack>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","useInput","value","setter","useState","initValue","handler","useCallback","e","target","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Signup","param","setIsLoggedIn","setModalOpen","userId","setUserId","userName","setUserName","API","concat","process","email","onChangeEmail","emailError","setEmailError","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","checkEmail","res","check","test","closeModal","onSubmit","preventDefault","stopPropagation","axios","name","headers","then","result","data","catch","error","response","message","alert","jsx_runtime","jsx","Modal","open","onClose","aria-labelledby","aria-describedby","jsxs","Box","component","noValidate","autoComplete","sx","Typography","variant","textAlign","TextField","label","marginTop","fullWidth","type","required","onChange","span","color","Button","mt","mb","size","modalstyle","Upload","props","file","setFile","useRef","imageFile","setImageFile","setValue","React","isImage","setIsImage","highlight","setHighlight","reason","onChangeReason","brand","onChangeBrand","link","onChangeLink","showHashModalOpen","setShowHashModalOpen","GETHASHAPI","post","setPost","title","desc","photos","setuploadModalOpen","closehashtagsModal","category","setCategory","season","setSeason","text","onChangeText","setText","handleCategoryChange","event","handleSeasonChange","handlefilechange","handfiles","files","photosArr","undefined","length","i","reader","FileReader","readAsDataURL","addEventListener","fileobj","src","handeldelete","parentElement","slice","targetindex","handlehighlight","handleunhighlight","handledrop","dt","dataTransfer","USERINFOAPI","userInfo","setUserInfo","hashTags","setHashTags","useEffect","console","log","err","getHashtags","formData","FormData","append","location","reload","Fragment","div","height","overflow","map","hashtag","index","li","listStyle","onClick","FormControl","marginRight","InputLabel","id","Select","labelId","defaultValue","MenuItem","whiteSpace","fontWeight","display","className","onDragEnter","onDragOver","onDragLeave","onDrop","input","placeholder","multiple","htmlFor","item","Image","alt","button","LoginForm","setloginModalOpen","User","setUser","onSubmitForm","Navbar","isLoggedIn","setCount","HASHAPI","uploadModalOpen","loginModalOpen","onChangeValue","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","searchBar","modalOpen","current","focus","showModal","showLoginModal","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","Logout","uploadClick","handleMobileMenuOpen","currentTarget","onReady","TagSearch","split","upperCaseValue","toUpperCase","hashtags","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","flexGrow","marginBottom","AppBar","backgroundColor","Toolbar","noWrap","xs","sm","md","form","flex","marginLeft","IconButton","aria-label","SearchIcon","fill","inputRef","edge","aria-haspopup","AddIcon","aria-controls","AccountCircle","float","MoreIcon","styled","theme","borderRadius","shape","alpha","spacing","breakpoints","up","padding","pointerEvents","alignItems","justifyContent","InputBase","paddingLeft","transition","transitions","create","AlignItemsList","DELAPI","ImagePath","setImagePath","delClick","copyClick","Posts","posts","filter","editClick","Images","TagClick","hashname","Card","maxWidth","CardActionArea","href","CardMedia","image","CardContent","fontSize","CardActions","verticalAlign","FavoriteBorderIcon","opacity","DeleteIcon","EditIcon","FileCopyIcon","margin","parseInt","PostHashtag","HashtagId","a","Item","Paper","palette","mode","typography","body2","secondary","ResponsiveGrid","Imagesrc","setImagesrc","Grid","container","columns","lg","Hashtags","Home","resultStore","count","LOADAPI","loadPost","slicedPosts","Math","ceil","handleChange","num","sliceCount","scrollTo","behavior","LOGINCHECKAPI","login","Head","meta","content","h1","Stack","Pagination"],"sourceRoot":""}