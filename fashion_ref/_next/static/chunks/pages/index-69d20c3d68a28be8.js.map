{"version":3,"file":"static/chunks/pages/index-69d20c3d68a28be8.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./hooks/useInput.ts","webpack://_N_E/./Components/signup.tsx","webpack://_N_E/./Components/upload.tsx","webpack://_N_E/./Components/LoginForm.tsx","webpack://_N_E/./Components/Navbar.tsx","webpack://_N_E/./Components/AlignItemsList.tsx","webpack://_N_E/./Components/ResponsiveGrid.tsx","webpack://_N_E/./pages/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from '@mui/material/Button';\r\n\r\ntype SignupProps = {\r\n  setModalOpen: any;\r\n  setIsLoggedIn : any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({ setIsLoggedIn, setModalOpen }: SignupProps): ReactElement {\r\n  const API = \"http://15.164.224.172:8080/signups\";\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password,setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email : any) => {\r\n    let res = false;\r\n  \r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n  \r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  // const modalRef = useRef<HTMLDivElement>(null);\r\n  // useEffect(() => {\r\n  //   // 이벤트 핸들러 함수\r\n  //   const handler = (event: any) => {\r\n  //     // mousedown 이벤트가 발생한 영역이 모달창이 아닐 때, 모달창 제거 처리\r\n  //     if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n  //       setModalOpen(false);\r\n  //     }\r\n  //   };\r\n\r\n  //   // 이벤트 핸들러 등록\r\n  //   document.addEventListener(\"mousedown\", handler);\r\n  //   // document.addEventListener('touchstart', handler); // 모바일 대응\r\n\r\n  //   return () => {\r\n  //     // 이벤트 핸들러 해제\r\n  //     document.removeEventListener(\"mousedown\", handler);\r\n  //     // document.removeEventListener('touchstart', handler); // 모바일 대응\r\n  //   };\r\n  // }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if (password !== passwordCheck) {\r\n        return setPasswordError(true);\r\n      }\r\n      e.preventDefault();\r\n      // if (!term) {\r\n      //   return setTermError(true);\r\n      // }\r\n      console.log(email, nickname, password);\r\n      axios\r\n        .post(\r\n          API,\r\n          // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n          // 회원가입창에서 클라이언트가 입력하는 데이터\r\n          {\r\n            email: email,\r\n            name: nickname,\r\n            password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // 'Accept': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        // 그러면 서버에서 클라이언트로 response(응답)으로\r\n        // {ok: true} 아니면 {ok: false}가 온다.\r\n        // .then((response) => {\r\n        //   console.log(response); // response.data로 해야?\r\n        // })\r\n        .then((result) => {\r\n          console.log(result);\r\n          console.log(\"singupDB!\");\r\n          console.log(result.data);\r\n          setIsLoggedIn(true);\r\n          // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n          // history.replace('/login');\r\n        })\r\n        .catch((error) => {\r\n          alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n          console.log(error);\r\n        });\r\n    },\r\n    [email, password, passwordCheck,setIsLoggedIn , nickname]\r\n  );\r\n\r\n    return (\r\n      <Modal\r\n        open={true}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box \r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}>\r\n          {/* <form onSubmit={onSubmit}> */}\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            회원가입\r\n          </Typography>\r\n            <TextField\r\n              label=\"이메일\"\r\n              name=\"user-email\"\r\n              fullWidth\r\n              type=\"email\"\r\n              value={email}\r\n              required\r\n              // error={checkEmail(email)}\r\n              onChange={onChangeEmail}\r\n            />\r\n            <TextField\r\n              label=\"이름\"\r\n              name=\"user-nick\"\r\n              fullWidth\r\n              value={nickname}\r\n              required\r\n              onChange={onChangeNickname}\r\n            />\r\n            <TextField\r\n              label=\"비밀번호\"\r\n              fullWidth\r\n              name=\"user-password\"\r\n              type=\"password\"\r\n              value={password}\r\n              required\r\n              onChange={onChangePassword}\r\n            />\r\n            <TextField\r\n              label=\"비밀번호체크\"\r\n              fullWidth\r\n              name=\"user-password-check\"\r\n              type=\"password\"\r\n              value={passwordCheck}\r\n              required\r\n              onChange={setPasswordCheck}\r\n            />\r\n            {passwordError && <span>비밀번호가 일치하지 않습니다.</span>}\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n                size=\"large\"\r\n              >\r\n                회원가입\r\n              </Button>\r\n          {/* </form> */}\r\n        </Box>\r\n        {/* <Button onClick={closeModal}>닫기</Button> */}\r\n      </Modal>\r\n      // {/* <div className={\"container\"} ref={modalRef}>\r\n      //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n      //       <br />\r\n      //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n      //     </TextField>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-nick\">닉네임</label>\r\n      //       <br />\r\n      //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n      //     </div>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-password\">비밀번호</label>\r\n      //       <br />\r\n      //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n      //     </div>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n      //       <br />\r\n      //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n      //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n      //     </div>\r\n      //     {/* <div>\r\n      //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n      //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n      //     </div> */}\r\n      //     <div style={{ marginTop: 10 }}>\r\n      //       <button>가입하기</button>\r\n      //     </div>\r\n      //     <button className={\"close\"} onClick={closeModal}>\r\n      //         X\r\n      //     </button>\r\n      //   </div> */}\r\n      // }\r\n    );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\ntype UploadProps = {\r\n  setuploadModalOpen: any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload({ setuploadModalOpen }: UploadProps) {\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  // const handleChange = (file: any) => {\r\n  //   setFile(file);\r\n  //   console.log(file);\r\n  // };\r\n  const API = \"http://15.164.224.172:8080/uploads\";\r\n  const [imageFile, setImageFile] = useState<File>();\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [reason, onChangeReason] = useInput(\"\");\r\n  const [brand, onChangeBrand] = useInput(\"\");\r\n  const [link, onChangeLink] = useInput(\"\");\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const closeModal = () => {\r\n    setuploadModalOpen(false);\r\n  };\r\n  const { title, desc, photos } = post;\r\n  // const handlechange = e =>{\r\n  //   setPost({\r\n  //     ...post,\r\n  //     [e.target.name]: e.target.value;\r\n  //   })\r\n  // }\r\n\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n\r\n  const [text, onChangeText, setText] = useInput('');\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = (files: FileList | null) => {\r\n    let photosArr: any[] = [];\r\n    if (files != undefined) {\r\n      if (files.length > 1) {\r\n        alert(\"이미지는 1개만 넣어주세요\");\r\n      } else {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          setImageFile(files[i]);\r\n          console.log(files[i]);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              photos: [...photos, ...photosArr],\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handeldelete = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    let target = (e.target as HTMLSpanElement).parentElement;\r\n    console.log(target?.dataset);\r\n    let targetindex = 1;\r\n    console.log(targetindex);\r\n    setPost({\r\n      ...post,\r\n      photos: [\r\n        ...photos.slice(0, targetindex),\r\n        ...photos.slice(targetindex + 1),\r\n      ],\r\n    });\r\n    console.log(photos);\r\n    setIsImage(false);\r\n  };\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    console.log(\"leave\");\r\n    setHighlight(false);\r\n  }, []);\r\n  const handledrop = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let dt = e.dataTransfer;\r\n    let files = dt?.files;\r\n    setHighlight(false);\r\n    handfiles(files);\r\n  };\r\n\r\n  const uploadClick = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const USERINFOAPI = `http://15.164.224.172:8080/USERINFO`\r\n  const [userInfo, setUserInfo]= useState({name : \"\"});\r\n\r\n  useEffect(()=>{\r\n    axios.get(USERINFOAPI,{\r\n    }).then((result)=>{\r\n      console.log(result.data)\r\n      setUserInfo(result.data)\r\n    })\r\n    .catch((err)=>{\r\n\r\n      console.log(err)\r\n    })\r\n  },[]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if(category==\"\" || season==\"\"){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"카테고리, 시즌 필수\")\r\n      }\r\n      else if(brand==\"\" || link ==\"\"){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"브랜드, 링크 입력 필수\")\r\n      }\r\n      else if(imageFile == undefined){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"이미지 필수\")\r\n\r\n      }\r\n      else{\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        console.log(imageFile);\r\n        const formData = new FormData();\r\n        formData.append(\"image\", imageFile as File);\r\n        formData.append(\"nickname\", nickname);\r\n        formData.append(\"brand\", brand);\r\n        formData.append(\"link\", link);\r\n        formData.append(\"category\", category);\r\n        formData.append(\"season\", season);\r\n        formData.append(\"hashtag\", text);\r\n        // alert(formData)\r\n        axios.post(API, formData)\r\n        .then((result)=>{\r\n          console.log(\"result\")\r\n          console.log(result) \r\n        })\r\n        .catch((err)=>{\r\n          console.log(err);\r\n        });\r\n      }\r\n      //   axios\r\n      //     .post(\r\n      //       API,\r\n      //       // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n      //       // 회원가입창에서 클라이언트가 입력하는 데이터\r\n      //       {\r\n      //         nickname: nickname,\r\n      //         brand: brand,\r\n      //         link: link, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n      //         image : (imageFile as File).name\r\n      //       },\r\n      //       {\r\n      //         headers: {\r\n      //           \"Content-Type\": \"application/json\",\r\n      //           // 'Accept': 'application/json',\r\n      //         },\r\n      //       }\r\n      //     )\r\n      //     // 그러면 서버에서 클라이언트로 response(응답)으로\r\n      //     // {ok: true} 아니면 {ok: false}가 온다.\r\n      //     // .then((response) => {\r\n      //     //   console.log(response); // response.data로 해야?\r\n      //     // })\r\n      //     .then((result) => {\r\n      //       console.log(result);\r\n      //       // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n      //       // history.replace('/login');\r\n      //     })\r\n      //     .catch((error) => {\r\n      //       alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n      //       console.log(error);\r\n      //     });\r\n    },\r\n    [brand, link, nickname, imageFile, category, text, season]\r\n  );\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography sx={{textAlign: \"center\"}} component=\"h1\" variant=\"h5\">\r\n          업로드\r\n        </Typography>\r\n        {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n        <TextField\r\n          required\r\n          label=\"브랜드\"\r\n          fullWidth\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-brand\"\r\n          type=\"text\"\r\n          value={brand}\r\n          variant=\"standard\"\r\n          onChange={onChangeBrand}\r\n        />\r\n        <TextField\r\n          label=\"Link\"\r\n          fullWidth\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={link}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeLink}\r\n        />\r\n        \r\n        <TextField\r\n          label=\"선정이유\"\r\n          fullWidth\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={reason}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeReason}\r\n        />\r\n\r\n        <FormControl \r\n        sx={{width: \"40%\", marginRight : \"10%\", marginTop : \"25px\"}}>\r\n          <InputLabel id=\"demo-simple-select-label\">카테고리</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={category}\r\n            label=\"category\"\r\n            required\r\n            onChange={handleCategoryChange}\r\n          >\r\n            <MenuItem value={\"상의\"}>상의</MenuItem>\r\n            <MenuItem value={\"하의\"}>하의</MenuItem>\r\n            <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n            <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n            <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n            <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl \r\n        sx={{width: \"40%\", marginTop : \"25px\"}}>\r\n          <InputLabel id=\"demo-simple-select-label\">시즌</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={season}\r\n            label=\"season\"\r\n            required\r\n            onChange={handleSeasonChange}\r\n          >\r\n            <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n            <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          sx={{marginTop : \"30px\"}}\r\n          value={text}\r\n          onChange={onChangeText}\r\n          fullWidth\r\n          label=\"해시태그입력 #검정 #반팔 \"\r\n          variant= \"outlined\"\r\n        />\r\n\r\n        {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n        <div className=\"file-upload\"\r\n          style={{marginTop : \"6px\"}}>\r\n          <div className=\"custom-form-group\">\r\n            {!isImage && (\r\n              <div\r\n                className={\r\n                  highlight\r\n                    ? \"custom-file-drop-area highlight\"\r\n                    : \"custom-file-drop-area\"\r\n                }\r\n                onDragEnter={handlehighlight}\r\n                onDragOver={handlehighlight}\r\n                onDragLeave={handleunhighlight}\r\n                onDrop={handledrop}\r\n              >\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"photos\"\r\n                  placeholder=\"Enter photos\"\r\n                  multiple={false}\r\n                  id=\"filephotos\"\r\n                  onChange={handlefilechange}\r\n                />\r\n                <label htmlFor=\"filephotos\">Drag & Drop</label>\r\n              </div>\r\n            )}\r\n            <div className=\"custom-file-preview\">\r\n              {photos.length > 0 &&\r\n                photos.map((item: any, index) =>\r\n                  index != 0 ? (\r\n                    <div className=\"prev-img\" key={index}>\r\n                      <span onClick={handeldelete}>&times;</span>\r\n                      {item && <Image src={item.src} alt={item.name} />}\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect,useState } from 'react';\r\nimport useInput from '../hooks/useInput';\r\nimport axios from 'axios';\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\n\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  setIsLoggedIn : any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function LoginForm({ setIsLoggedIn, setloginModalOpen }: LoginFormProps): ReactElement {\r\n    \r\n  const API = \"http://15.164.224.172:8080/login\";\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const onFinish = (values: FormData) => {};\r\n  const [User, setUser] = useState({\r\n    id : 0,\r\n    name : null,\r\n  });\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback((event : any) => {\r\n    event.preventDefault();\r\n    console.log(\"signup\")\r\n    console.log(password)\r\n    console.log(email)\r\n    axios.post(API,\r\n      // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n      // 회원가입창에서 클라이언트가 입력하는 데이터\r\n      {\r\n        email: email,           \r\n        password: password,  // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n      },\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          // 'Accept': 'application/json',\r\n        },\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        console.log(\"singupDB!\");\r\n        console.log(result.data.data)\r\n        setUser(result.data.data);\r\n        setIsLoggedIn(true);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert('로그인이 정상적으로 되지 않았습니다.');\r\n        console.log(error); \r\n      })\r\n  }, [email, password, setIsLoggedIn]);\r\n\r\n  console.log(User)\r\n  return (\r\n    \r\n    <Modal\r\n    open={true}\r\n    onClose={closeModal}\r\n    aria-labelledby=\"modal-modal-title\"\r\n    aria-describedby=\"modal-modal-description\"\r\n  >\r\n    <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          로그인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      </Modal>\r\n  )\r\n\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement, useRef  } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\n// import { useNavigate  } from 'react-router-dom'; // 설치한 패키지\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/signup\";\r\nimport Upload from \"@/Components/upload\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\nconst inter = Inter({ subsets: [\"latin\"] });\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(\"#F8F8F8\", 0.73),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(\"#F8F8F8\", 0.33),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n    height: \"40%\",\r\n  },\r\n}));\r\n\r\ntype NavbarProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n};\r\n\r\nexport default function Navbar({\r\n  isLoggedIn,\r\n  setIsLoggedIn,\r\n  setPost,\r\n}: NavbarProps): ReactElement {\r\n  // const navigate = useNavigate();\r\n  const HASHAPI = \"http://15.164.224.172:8080/hashtagsearch\";\r\n  const API = \"http://15.164.224.172:8080/loadpost\";\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(()=>{\r\n    if(searchBar.current ){\r\n      searchBar.current.focus();\r\n    }\r\n  }\r\n  ,[])\r\n\r\n  const onChangeCategory = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const onChangeSeason = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const showModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const reloadPost = () => {\r\n    // navigate('/home'); // /test로 url 이동\r\n  };\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const showUploadModal = () => {\r\n    setuploadModalOpen(true);\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    const LOGOUTAPI = \"http://15.164.224.172:8080/logout\";\r\n    axios\r\n      .get(LOGOUTAPI)\r\n      .then((result) => {\r\n        if (result.data.message == \"ok\") setIsLoggedIn(false);\r\n        setloginModalOpen(false);\r\n      })\r\n      .catch((err) => {});\r\n  }, [setIsLoggedIn]);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (isLoggedIn) {\r\n      setuploadModalOpen(true);\r\n    } else {\r\n      setloginModalOpen(true);\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      if (value == \"\") {\r\n        axios\r\n          .get(API)\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n            console.log(error);\r\n          });\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        axios\r\n          .post(\r\n            HASHAPI,\r\n            {\r\n              hashtags: value,\r\n              category: category,\r\n              season: season,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          .then((result) => {\r\n            console.log(\"----------------------------\");\r\n            console.log(result.data);\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n            console.log(error);\r\n          });\r\n      }\r\n    },\r\n    [value, setPost, category, season]\r\n  );\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {!isLoggedIn && modalOpen && (\r\n        <Signup setIsLoggedIn={setIsLoggedIn} setModalOpen={setModalOpen} />\r\n      )}\r\n      {isLoggedIn && uploadModalOpen && (\r\n        <Upload setuploadModalOpen={setuploadModalOpen} />\r\n      )}\r\n      {!isLoggedIn && loginModalOpen && (\r\n        <LoginForm\r\n          setIsLoggedIn={setIsLoggedIn}\r\n          setloginModalOpen={setloginModalOpen}\r\n        />\r\n      )}\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          {/* <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n            onClick={reloadPost}\r\n          >\r\n            <HomeIcon color=\"disabled\" />\r\n          </IconButton> */}\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            {/* <p>검색할 태그</p> */}\r\n          </Typography>\r\n          {/* <Search>\r\n            <StyledInputBase\r\n              onChange={(event) => {\r\n                setValue(event.target.value);\r\n              }}\r\n              placeholder=\"태그 입력\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyPress={(event) => {\r\n                if (event.which == 32) alert(value);\r\n              }}\r\n            />\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n          </Search> */}\r\n          {/* <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">\r\n              카테고리\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              required\r\n              value={category}\r\n              label=\"category\"\r\n              onChange={onChangeCategory}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"25px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">시즌</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              value={season}\r\n              label=\"season\"\r\n              required\r\n              onChange={onChangeSeason}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl> */}\r\n          <form onSubmit={TagSearch} style={{ width: \"50%\" }}>\r\n            <IconButton type=\"submit\" aria-label=\"search\">\r\n              <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n            </IconButton>\r\n            <TextField\r\n              id=\"search-bar\"\r\n              className=\"text\"\r\n              sx={{ display: \"inline-block\", width: \"80%\" }}\r\n              value={value}\r\n              onChange={onChangeValue}\r\n              label=\"#상의 #검정\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Search...\"\r\n              size=\"small\"\r\n              inputRef={searchBar}\r\n            />\r\n          </form>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={0} color=\"error\"></Badge>\r\n            </IconButton> */}\r\n            <>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                sx={{marginRight:\"10px\"}}\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"false\"\r\n                color=\"primary\"\r\n                onClick={uploadClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </>\r\n            {!isLoggedIn ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"100%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={Logout}\r\n                >\r\n                  로그아웃\r\n                </Button>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport {useCallback, useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\ntype AlignItemsListProps = {\r\n  category: string;\r\n  brand: string;\r\n  link: string;\r\n  src: string;\r\n  season: string;\r\n  reason: string;\r\n  hashtags: any[];\r\n  id : number,\r\n  setPost: any;\r\n  posts : any[];\r\n  index : number;\r\n  name : string;\r\n};\r\n\r\nconst category = {\r\n  상의: 1,\r\n  하의: 2,\r\n  아우터: 3,\r\n  디테일: 4,\r\n  이미지: 5,\r\n  악세사리: 6,\r\n};\r\n\r\nconst season = {\r\n  \"23SS\": 7,\r\n  \"23FW\": 8,\r\n};\r\nexport default function AlignItemsList(props: AlignItemsListProps) {\r\n\r\n  const [category, setCategory] = useState(\"\")\r\n  const [season, setSeason] = useState(\"\")\r\n\r\n\r\n  const DELAPI = `http://15.164.224.172:8080/deletpost/${props.id}`\r\n  console.log(DELAPI)\r\n  const delClick = useCallback(()=>{\r\n    axios.post(DELAPI,{\r\n    }).then((result)=>{\r\n      console.log(props.id)\r\n      const Posts = props.posts.filter((post)=> post.id !== props.id)\r\n      props.setPost(Posts);\r\n      console.log(Posts);\r\n    })\r\n    .catch((err)=>{\r\n\r\n      console.log(err)\r\n    })\r\n  },[DELAPI,props])\r\n  const editClick = useCallback(()=>{\r\n    alert(\"만드는 중입니다..\");\r\n  },[])\r\n  \r\n  console.log(\"rendered\");\r\n  useEffect(()=>{\r\n    setCategory(props.category)\r\n    setSeason(\"23SS\")\r\n\r\n  },[props.category])\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        maxWidth: \"15\",\r\n        marginTop: \"20px\",\r\n        // borderRadius: \"24px\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <CardActionArea href={`${props.link}`} target='_blank'>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"300\"\r\n          image={`../${props.src}`}\r\n          alt=\"green iguana\"\r\n        />\r\n        <CardContent>\r\n          <span style={{fontWeight :900, fontSize: \"130%\"}}>\r\n            {props.name}_{`${props.brand}`}_ {props.id}\r\n          </span>\r\n\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            참고할 부분 {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <div style={{width:\"100%\"}}>\r\n          <EditIcon id=\"editicon\" onClick={editClick}/>\r\n          <DeleteIcon id=\"delicon\" onClick={delClick}/>\r\n        </div>\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${parseInt(props.season) % 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`TagCategory Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        {props.hashtags.map((hashtag, index) => (\r\n          <div style={{ margin: \"2px\" }} key={index}>\r\n            <div\r\n              className={`Tag${parseInt(hashtag.id) % 8} Tag`}\r\n              style={{ display: \"inline-block\", margin: \"2px\" }}\r\n            >\r\n              <a href=\"\">#{hashtag.name}</a>\r\n            </div>{\" \"}\r\n            &nbsp;\r\n          </div>\r\n        ))}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { useCallback, useEffect,useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport AlignItemsList from \"./AlignItemsList\";\r\nimport Grid from '@mui/material/Grid';\r\nimport { useInput } from '@mui/base';\r\nimport axios from 'axios';\r\nimport Image from \"next/image\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\ntype ResponsiveGridProps = {\r\n  setPost: any;\r\n  posts : any[];\r\n};\r\n\r\nexport default function ResponsiveGrid({ setPost, posts }: ResponsiveGridProps) {\r\n  \r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n        {posts.map((post, index) => (\r\n          <Grid item xs={6} sm={4} md={2.4} lg ={4} key={index}>\r\n            <Item>\r\n            <li\r\n              style={{\r\n                maxWidth: \"320px\",\r\n                display: \"inline-block\",\r\n                // marginRight: \"4%\",\r\n                // marginLeft: \"1%\",\r\n                // marginTop: \"1%\",\r\n              }}\r\n            >\r\n            <AlignItemsList name={post.name} index={index} setPost={setPost} posts={posts} id={post.id} category={post.category} brand={post.brand} src={post.Images[0].src}link={post.link} season={post.season} hashtags ={post.Hashtags} reason ={post.reason}/> </li>\r\n            </Item>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios from 'axios';\nimport React, { useCallback, useState, useEffect } from 'react';\nimport Link from 'next/link'\n// const inter = Inter({ subsets: [\"latin\"] });\n\nexport default function Home() {\n  \n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [posts, setPost] = useState<any[]>([])\n\n  const LOADAPI = \"http://15.164.224.172:8080/loadpost\";\n\n  const loadPost = useCallback(() => {\n    axios.get(LOADAPI)\n      .then((result) => {\n        console.log(result.data)\n        setPost(result.data);\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\n        // history.replace('/login');\n      })\n      .catch((error) => {\n        alert('로그인이 정상적으로 되지 않았습니다.?');\n        console.log(error); \n      })\n\n  },[setPost])\n\n  useEffect(()=>{\n    loadPost()\n  },[loadPost])\n  \n  const LOGINCHECKAPI = \"http://15.164.224.172:8080/logincheck\";\n  useEffect( ()=>{\n    axios.get(LOGINCHECKAPI)\n      .then((result) => {\n        console.log(result.data.login)\n        if(result.data.login){\n          setIsLoggedIn(true);\n        }\n      })\n      .catch((error) => {\n        console.log(error); \n      })\n  },[])\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPost}><h1 id=\"title\">CRUMP REFERENCE</h1></a>\n        <div style={{marginBottom: \"40px\"}}>\n          <Navbar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} setPost={setPost}/>\n          {/* <LoginForm /> */}\n          {/* <SignupForm /> */}\n        </div>\n        <ResponsiveGrid setPost={setPost} posts={posts}/>\n      </div>\n    </>\n  );\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","useInput","value","setter","useState","initValue","handler","useCallback","e","target","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Signup","param","setIsLoggedIn","setModalOpen","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","closeModal","onSubmit","preventDefault","console","log","axios","name","headers","then","result","data","catch","alert","error","jsx_runtime","jsx","Modal","open","onClose","aria-labelledby","aria-describedby","jsxs","Box","component","noValidate","autoComplete","sx","Typography","variant","TextField","label","fullWidth","type","required","onChange","span","Button","mt","mb","size","Upload","setuploadModalOpen","file","setFile","imageFile","setImageFile","setValue","React","isImage","setIsImage","highlight","setHighlight","reason","onChangeReason","brand","onChangeBrand","link","onChangeLink","post","setPost","title","desc","photos","category","setCategory","season","setSeason","text","onChangeText","setText","handleCategoryChange","event","handleSeasonChange","handlefilechange","handfiles","files","photosArr","undefined","length","i","reader","FileReader","readAsDataURL","addEventListener","fileobj","src","handeldelete","parentElement","dataset","slice","targetindex","handlehighlight","stopPropagation","handleunhighlight","handledrop","dt","dataTransfer","userInfo","setUserInfo","useEffect","err","formData","FormData","append","textAlign","marginTop","FormControl","marginRight","InputLabel","id","Select","labelId","MenuItem","div","className","onDragEnter","onDragOver","onDragLeave","onDrop","input","placeholder","multiple","htmlFor","map","item","index","onClick","Image","alt","Fragment","LoginForm","setloginModalOpen","User","setUser","onSubmitForm","Navbar","isLoggedIn","modalOpen","uploadModalOpen","loginModalOpen","onChangeValue","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","searchBar","useRef","current","focus","showModal","showLoginModal","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","Logout","message","uploadClick","handleMobileMenuOpen","TagSearch","split","hashtags","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","IconButton","aria-label","color","Badge","badgeContent","MailIcon","NotificationsIcon","aria-controls","aria-haspopup","AccountCircle","flexGrow","AppBar","backgroundColor","Toolbar","noWrap","display","xs","sm","form","SearchIcon","fill","inputRef","md","edge","AddIcon","fontWeight","MoreIcon","styled","theme","borderRadius","shape","alpha","spacing","marginLeft","breakpoints","up","padding","height","pointerEvents","alignItems","justifyContent","InputBase","paddingLeft","concat","transition","transitions","create","AlignItemsList","props","DELAPI","delClick","Posts","posts","filter","editClick","Card","maxWidth","CardActionArea","href","CardMedia","image","CardContent","fontSize","CardActions","EditIcon","DeleteIcon","margin","parseInt","a","hashtag","Item","Paper","palette","mode","typography","body2","secondary","ResponsiveGrid","Grid","container","columns","lg","li","Images","Hashtags","Home","loadPost","login","Head","meta","content","h1","marginBottom"],"sourceRoot":""}