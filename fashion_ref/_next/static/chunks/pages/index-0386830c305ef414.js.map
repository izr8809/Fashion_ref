{"version":3,"file":"static/chunks/pages/index-0386830c305ef414.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./hooks/useInput.ts","webpack://_N_E/./Components/signup.tsx","webpack://_N_E/./Components/upload.tsx","webpack://_N_E/./Components/LoginForm.tsx","webpack://_N_E/./Components/Navbar.tsx","webpack://_N_E/./Components/AlignItemsList.tsx","webpack://_N_E/./Components/ResponsiveGrid.tsx","webpack://_N_E/./pages/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from '@mui/material/Button';\r\nimport { color } from \"@mui/system\";\r\n\r\ntype SignupProps = {\r\n  setModalOpen: any;\r\n  setIsLoggedIn : any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({ setIsLoggedIn, setModalOpen }: SignupProps): ReactElement {\r\n  const API = `${process.env.NEXT_PUBLIC_API}/signups`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password,setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email : any) => {\r\n    let res = false;\r\n  \r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n  \r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (password !== passwordCheck) {\r\n        setPasswordError(true);\r\n      }\r\n      else if (!checkEmail(email)){\r\n        setEmailError(true);\r\n      }\r\n      else{\r\n        axios\r\n        .post(\r\n          API,\r\n          // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n          // 회원가입창에서 클라이언트가 입력하는 데이터\r\n          {\r\n            email: email,\r\n            name: nickname,\r\n            password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // 'Accept': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        // 그러면 서버에서 클라이언트로 response(응답)으로\r\n        // {ok: true} 아니면 {ok: false}가 온다.\r\n        // .then((response) => {\r\n        //   console.log(response); // response.data로 해야?\r\n        // })\r\n        .then((result) => {\r\n          setIsLoggedIn(true);\r\n          // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n          // history.replace('/login');\r\n        })\r\n        .catch((error) => {\r\n          if(error.response.data.message == 'already exist'){\r\n            alert(\"이미 존재하는 이메일입니다.\");\r\n          }\r\n          else{\r\n            alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n          }\r\n        });\r\n      }\r\n      // if (!term) {\r\n      //   return setTermError(true);\r\n      // }\r\n      \r\n    },\r\n    [email, password, passwordCheck,setIsLoggedIn , nickname]\r\n  );\r\n\r\n    return (\r\n      <Modal\r\n        open={true}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box \r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}>\r\n          {/* <form onSubmit={onSubmit}> */}\r\n          <Typography component=\"h1\" variant=\"h5\" \r\n              sx={{ textAlign:\"center\"}}>\r\n            회원가입\r\n          </Typography>\r\n            <TextField\r\n              label=\"이메일\"\r\n              name=\"user-email\"\r\n              sx={{marginTop:3}}\r\n              fullWidth\r\n              type=\"email\"\r\n              value={email}\r\n              required\r\n              // error={checkEmail(email)}\r\n              onChange={onChangeEmail}\r\n            />\r\n            {emailError && <span style={{color:\"red\"}}>Email 형식이 잘못되었습니다</span>}\r\n            <TextField\r\n              label=\"이름\"\r\n              name=\"user-nick\"\r\n              sx={{marginTop:3}}\r\n              fullWidth\r\n              value={nickname}\r\n              required\r\n              onChange={onChangeNickname}\r\n            />\r\n            <TextField\r\n              label=\"비밀번호\"\r\n              fullWidth\r\n              name=\"user-password\"\r\n              sx={{marginTop:3}}\r\n              type=\"password\"\r\n              value={password}\r\n              required\r\n              onChange={onChangePassword}\r\n            />\r\n            <TextField\r\n              label=\"비밀번호체크\"\r\n              fullWidth\r\n              name=\"user-password-check\"\r\n              sx={{marginTop:3}}\r\n              type=\"password\"\r\n              value={passwordCheck}\r\n              required\r\n              onChange={setPasswordCheck}\r\n            />\r\n            {passwordError && <span style={{color:\"red\"}}>비밀번호가 일치하지 않습니다</span>}\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n                size=\"large\"\r\n              >\r\n                확인\r\n              </Button>\r\n          {/* </form> */}\r\n        </Box>\r\n        {/* <Button onClick={closeModal}>닫기</Button> */}\r\n      </Modal>\r\n      // {/* <div className={\"container\"} ref={modalRef}>\r\n      //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n      //       <br />\r\n      //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n      //     </TextField>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-nick\">닉네임</label>\r\n      //       <br />\r\n      //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n      //     </div>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-password\">비밀번호</label>\r\n      //       <br />\r\n      //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n      //     </div>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n      //       <br />\r\n      //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n      //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n      //     </div>\r\n      //     {/* <div>\r\n      //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n      //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n      //     </div> */}\r\n      //     <div style={{ marginTop: 10 }}>\r\n      //       <button>가입하기</button>\r\n      //     </div>\r\n      //     <button className={\"close\"} onClick={closeModal}>\r\n      //         X\r\n      //     </button>\r\n      //   </div> */}\r\n      // }\r\n    );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\ntype UploadProps = {\r\n  setuploadModalOpen: any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload({ setuploadModalOpen }: UploadProps) {\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  // const handleChange = (file: any) => {\r\n  //   setFile(file);\r\n  //   console.log(file);\r\n  // };\r\n  const API = `${process.env.NEXT_PUBLIC_API}/uploads`;\r\n  const [imageFile, setImageFile] = useState<File>();\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [reason, onChangeReason] = useInput(\"\");\r\n  const [brand, onChangeBrand] = useInput(\"\");\r\n  const [link, onChangeLink] = useInput(\"\");\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const closeModal = () => {\r\n    setuploadModalOpen(false);\r\n  };\r\n  const { title, desc, photos } = post;\r\n  // const handlechange = e =>{\r\n  //   setPost({\r\n  //     ...post,\r\n  //     [e.target.name]: e.target.value;\r\n  //   })\r\n  // }\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = (files: FileList | null) => {\r\n    let photosArr: any[] = [];\r\n    if (files != undefined) {\r\n      if (files.length > 1) {\r\n        alert(\"이미지는 1개만 넣어주세요\");\r\n      } else {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          setImageFile(files[i]);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              photos: [...photos, ...photosArr],\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handeldelete = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    let target = (e.target as HTMLSpanElement).parentElement;\r\n    let targetindex = 1;\r\n    setPost({\r\n      ...post,\r\n      photos: [\r\n        ...photos.slice(0, targetindex),\r\n        ...photos.slice(targetindex + 1),\r\n      ],\r\n    });\r\n    setIsImage(false);\r\n  };\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(false);\r\n  }, []);\r\n  const handledrop = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let dt = e.dataTransfer;\r\n    let files = dt?.files;\r\n    setHighlight(false);\r\n    handfiles(files);\r\n  };\r\n\r\n  const uploadClick = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const USERINFOAPI = `${process.env.NEXT_PUBLIC_API}/USERINFO`;\r\n  const [userInfo, setUserInfo] = useState({ name: \"\" });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(USERINFOAPI, {})\r\n      .then((result) => {\r\n        setUserInfo(result.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if (category == \"\" || season == \"\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"카테고리, 시즌 필수\");\r\n      } else if (brand == \"\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"브랜드입력 필수\");\r\n      } else if (imageFile == undefined) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"이미지 필수\");\r\n      } else {\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"image\", imageFile as File);\r\n        formData.append(\"nickname\", nickname);\r\n        formData.append(\"brand\", brand);\r\n        formData.append(\"link\", link);\r\n        formData.append(\"category\", category);\r\n        formData.append(\"season\", season);\r\n        formData.append(\"hashtag\", text);\r\n        formData.append(\"reason\", reason);\r\n        // alert(formData)\r\n        axios\r\n          .post(API, formData)\r\n          .then((result) => {\r\n          })\r\n          .catch((err) => {\r\n          });\r\n      }\r\n      //   axios\r\n      //     .post(\r\n      //       API,\r\n      //       // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n      //       // 회원가입창에서 클라이언트가 입력하는 데이터\r\n      //       {\r\n      //         nickname: nickname,\r\n      //         brand: brand,\r\n      //         link: link, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n      //         image : (imageFile as File).name\r\n      //       },\r\n      //       {\r\n      //         headers: {\r\n      //           \"Content-Type\": \"application/json\",\r\n      //           // 'Accept': 'application/json',\r\n      //         },\r\n      //       }\r\n      //     )\r\n      //     // 그러면 서버에서 클라이언트로 response(응답)으로\r\n      //     // {ok: true} 아니면 {ok: false}가 온다.\r\n      //     // .then((response) => {\r\n      //     //   console.log(response); // response.data로 해야?\r\n      //     // })\r\n      //     .then((result) => {\r\n      //       console.log(result);\r\n      //       // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n      //       // history.replace('/login');\r\n      //     })\r\n      //     .catch((error) => {\r\n      //       alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n      //       console.log(error);\r\n      //     });\r\n    },\r\n    [brand, link, nickname, imageFile, category, text, season]\r\n  );\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography sx={{ textAlign: \"center\" }} component=\"h1\" variant=\"h5\">\r\n          업로드\r\n        </Typography>\r\n        {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n        <TextField\r\n          required\r\n          label=\"브랜드\"\r\n          fullWidth\r\n          sx={{ marginTop: \"5px\" }}\r\n          name=\"user-brand\"\r\n          type=\"text\"\r\n          value={brand}\r\n          variant=\"standard\"\r\n          onChange={onChangeBrand}\r\n        />\r\n        <TextField\r\n          label=\"Link\"\r\n          fullWidth\r\n          sx={{ marginTop: \"5px\" }}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={link}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeLink}\r\n        />\r\n\r\n        <TextField\r\n          label=\"선정이유\"\r\n          fullWidth\r\n          sx={{ marginTop: \"5px\" }}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={reason}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeReason}\r\n        />\r\n\r\n        <FormControl\r\n          sx={{ width: \"40%\", marginRight: \"10%\", marginTop: \"25px\" }}\r\n        >\r\n          <InputLabel id=\"demo-simple-select-label\">카테고리</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={category}\r\n            label=\"category\"\r\n            required\r\n            onChange={handleCategoryChange}\r\n          >\r\n            <MenuItem value={\"상의\"}>상의</MenuItem>\r\n            <MenuItem value={\"하의\"}>하의</MenuItem>\r\n            <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n            <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n            <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n            <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl sx={{ width: \"40%\", marginTop: \"25px\" }}>\r\n          <InputLabel id=\"demo-simple-select-label\">시즌</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={season}\r\n            label=\"season\"\r\n            required\r\n            onChange={handleSeasonChange}\r\n          >\r\n            <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n            <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          sx={{ marginTop: \"30px\" }}\r\n          value={text}\r\n          onChange={onChangeText}\r\n          fullWidth\r\n          label=\"해시태그입력 #검정 #반팔 \"\r\n          variant=\"outlined\"\r\n        />\r\n\r\n        {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n        <div className=\"file-upload\" style={{ marginTop: \"6px\" }}>\r\n          <div className=\"custom-form-group\">\r\n            {!isImage && (\r\n              <div\r\n                className={\r\n                  highlight\r\n                    ? \"custom-file-drop-area highlight\"\r\n                    : \"custom-file-drop-area\"\r\n                }\r\n                onDragEnter={handlehighlight}\r\n                onDragOver={handlehighlight}\r\n                onDragLeave={handleunhighlight}\r\n                onDrop={handledrop}\r\n              >\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"photos\"\r\n                  placeholder=\"Enter photos\"\r\n                  multiple={false}\r\n                  id=\"filephotos\"\r\n                  onChange={handlefilechange}\r\n                />\r\n                <label htmlFor=\"filephotos\">Drag & Drop</label>\r\n              </div>\r\n            )}\r\n            <div className=\"custom-file-preview\">\r\n              {photos.length > 0 &&\r\n                photos.map((item: any, index) =>\r\n                  index != 0 ? (\r\n                    <div className=\"prev-img\" key={index}>\r\n                      <span onClick={handeldelete}>&times;</span>\r\n                      {item && <Image src={item.src} alt={item.name} />}\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  setIsLoggedIn: any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function LoginForm({\r\n  setIsLoggedIn,\r\n  setloginModalOpen,\r\n}: LoginFormProps): ReactElement {\r\n  const API = `${process.env.NEXT_PUBLIC_API}/login`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [User, setUser] = useState({\r\n    id: 0,\r\n    name: null,\r\n  });\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback(\r\n    (event: any) => {\r\n      event.preventDefault();\r\n      if(email == \"\"){\r\n        alert(\"이메일을 입력해주세요\")\r\n      }\r\n      else if(password == \"\"){\r\n        alert(\"비밀번호를 입력해주세요\")\r\n      }\r\n      else{\r\n        axios\r\n        .post(\r\n          API,\r\n          // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n          // 회원가입창에서 클라이언트가 입력하는 데이터\r\n          {\r\n            email: email,\r\n            password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // 'Accept': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        .then((result) => {\r\n          setUser(result.data.data);\r\n          setIsLoggedIn(true);\r\n          // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n          // history.replace('/login');\r\n        })\r\n        .catch((error) => {\r\n          alert(\"로그인 정보가 일치하지 않습니다.\");\r\n          console.log(error);\r\n        });\r\n      }\r\n      \r\n    },\r\n    [email, password, setIsLoggedIn]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          로그인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement, useRef } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\n// import { useNavigate  } from 'react-router-dom'; // 설치한 패키지\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/signup\";\r\nimport Upload from \"@/Components/upload\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\nconst inter = Inter({ subsets: [\"latin\"] });\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(\"#F8F8F8\", 0.73),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(\"#F8F8F8\", 0.33),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n    height: \"40%\",\r\n  },\r\n}));\r\n\r\ntype NavbarProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n};\r\n\r\nexport default function Navbar({\r\n  isLoggedIn,\r\n  setIsLoggedIn,\r\n  setPost,\r\n}: NavbarProps): ReactElement {\r\n  // const navigate = useNavigate();\r\n  const HASHAPI = `${process.env.NEXT_PUBLIC_API}/hashtagsearch`;\r\n  const API = `${process.env.NEXT_PUBLIC_API}/loadpost`;\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (searchBar.current) {\r\n      searchBar.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  const showModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const showUploadModal = () => {\r\n    setuploadModalOpen(true);\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    const LOGOUTAPI = `${process.env.NEXT_PUBLIC_API}/logout`;\r\n    axios\r\n      .get(LOGOUTAPI)\r\n      .then((result) => {\r\n        if (result.data.message == \"ok\") setIsLoggedIn(false);\r\n        setloginModalOpen(false);\r\n      })\r\n      .catch((err) => {alert(\"서버와 연결 끊겼네요. 새로고침.!\")});\r\n  }, [setIsLoggedIn]);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (isLoggedIn) {\r\n      setuploadModalOpen(true);\r\n    } else {\r\n      setloginModalOpen(true);\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onReady = useCallback(()=>{alert(\"준비중입니다.\")},[])\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      // e.preventDeafult();\r\n      // e.stopPropagation();\r\n      if (value == \"\") {\r\n        axios\r\n          .get(API)\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n          });\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        let upperCaseValue = value.toUpperCase();\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        axios\r\n          .post(\r\n            HASHAPI,\r\n            {\r\n              hashtags: upperCaseValue,\r\n              category: category,\r\n              season: season,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n            console.log(error);\r\n          });\r\n      }\r\n    },\r\n    [value, setPost, category, season]\r\n  );\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <p>만드는 중입니다</p>\r\n      </MenuItem>\r\n      {/* <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>프로필</p>\r\n      </MenuItem> */}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {!isLoggedIn && modalOpen && (\r\n        <Signup setIsLoggedIn={setIsLoggedIn} setModalOpen={setModalOpen} />\r\n      )}\r\n      {isLoggedIn && uploadModalOpen && (\r\n        <Upload setuploadModalOpen={setuploadModalOpen} />\r\n      )}\r\n      {!isLoggedIn && loginModalOpen && (\r\n        <LoginForm\r\n          setIsLoggedIn={setIsLoggedIn}\r\n          setloginModalOpen={setloginModalOpen}\r\n        />\r\n      )}\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          {/* <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n            onClick={reloadPost}\r\n          >\r\n            <HomeIcon color=\"disabled\" />\r\n          </IconButton> */}\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            {/* <p>검색할 태그</p> */}\r\n          </Typography>\r\n          {/* <Search>\r\n            <StyledInputBase\r\n              onChange={(event) => {\r\n                setValue(event.target.value);\r\n              }}\r\n              placeholder=\"태그 입력\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyPress={(event) => {\r\n                if (event.which == 32) alert(value);\r\n              }}\r\n            />\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n          </Search> */}\r\n          {/* <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">\r\n              카테고리\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              required\r\n              value={category}\r\n              label=\"category\"\r\n              onChange={onChangeCategory}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"25px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">시즌</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              value={season}\r\n              label=\"season\"\r\n              required\r\n              onChange={onChangeSeason}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl> */}\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n          <form\r\n            onSubmit={TagSearch}\r\n            style={{ width: \"70%\", flex: \"auto\", marginLeft: \"15%\" }}\r\n          >\r\n            <IconButton\r\n              type=\"submit\"\r\n              aria-label=\"search\"\r\n              sx={{ display: { xs: \"none\", md: \"inline-block\" } }}\r\n            >\r\n              <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n            </IconButton>\r\n            <TextField\r\n              id=\"search-bar\"\r\n              className=\"text\"\r\n              sx={{ display: \"inline-block\", width: \"80%\" }}\r\n              value={value}\r\n              onChange={onChangeValue}\r\n              label=\"#상의 #검정\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Search...\"\r\n              size=\"small\"\r\n              inputRef={searchBar}\r\n            />\r\n          </form>\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={0} color=\"error\"></Badge>\r\n            </IconButton> */}\r\n            <>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                sx={{ marginRight: \"10px\" }}\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"false\"\r\n                color=\"primary\"\r\n                onClick={uploadClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </>\r\n            {!isLoggedIn ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"100%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                    whiteSpace: \"nowrap\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={Logout}\r\n                >\r\n                  로그아웃\r\n                </Button>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                  onClick={onReady}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" }, float: \"right\" }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\ntype AlignItemsListProps = {\r\n  category: string;\r\n  brand: string;\r\n  link: string;\r\n  src: string;\r\n  season: string;\r\n  reason: string;\r\n  hashtags: any[];\r\n  id: number;\r\n  setPost: any;\r\n  posts: any[];\r\n  index: number;\r\n  name: string;\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n};\r\n\r\nconst category = {\r\n  상의: 1,\r\n  하의: 2,\r\n  아우터: 3,\r\n  디테일: 4,\r\n  이미지: 5,\r\n  악세사리: 6,\r\n};\r\n\r\nconst season = {\r\n  \"23SS\": 7,\r\n  \"23FW\": 8,\r\n};\r\nexport default function AlignItemsList(props: AlignItemsListProps) {\r\n  const [category, setCategory] = useState(\"\");\r\n  const [season, setSeason] = useState(\"\");\r\n\r\n  const HASHAPI = `${process.env.NEXT_PUBLIC_API}/hashtagsearch`;\r\n  const DELAPI = `${process.env.NEXT_PUBLIC_API}/deletpost/${props.id}`;\r\n  const delClick = useCallback(() => {\r\n    if (props.isLoggedIn) {\r\n      axios\r\n        .post(DELAPI, {})\r\n        .then((result) => {\r\n          const Posts = props.posts.filter((post) => post.id !== props.id);\r\n          props.setPost(Posts);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      //로그인 모달 띄우기\r\n      alert(\"로그인 해주세요\");\r\n    }\r\n  }, [DELAPI, props]);\r\n  const editClick = useCallback(() => {\r\n    alert(\"만드는 중입니다..\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCategory(props.category);\r\n    setSeason(\"23SS\");\r\n  }, [props.category]);\r\n\r\n  const TagClick = React.useCallback((e: any, hashname: string) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    axios\r\n      .post(\r\n        HASHAPI,\r\n        {\r\n          hashtags: \"#\" + hashname,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            // 'Accept': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then((result) => {\r\n        props.setPost(result.data);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        maxWidth: \"15\",\r\n        marginTop: \"20px\",\r\n        // borderRadius: \"24px\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <CardActionArea href={`${props.link}`} target=\"_blank\">\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"300\"\r\n          image={`../${props.src}`}\r\n          alt=\"green iguana\"\r\n        />\r\n        <CardContent>\r\n          <Typography>\r\n            <span\r\n              style={{ fontWeight: 900, fontSize: \"130%\", marginBottom: \"4%\" }}\r\n            >\r\n              {props.name[0]}_{`${props.brand}`}\r\n            </span>\r\n          </Typography>\r\n\r\n          {/* <span style={{fontWeight :900, fontSize: \"100%\", marginBottom: 5}}>\r\n            참고할 부분\r\n          </span> */}\r\n          <Typography\r\n            sx={{ fontWeight: 900, marginBottom: \"1%\" }}\r\n            variant=\"subtitle2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            참고할 부분\r\n          </Typography>\r\n\r\n          <Typography\r\n            sx={{ marginBottom: \"1%\" }}\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <div style={{ width: \"100%\", marginBottom: \"3%\" }}>\r\n          <EditIcon id=\"editicon\" onClick={editClick} />\r\n          <DeleteIcon id=\"delicon\" onClick={delClick} />\r\n        </div>\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n        {/* <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${parseInt(props.season) % 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`TagCategory Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div> */}\r\n        {props.hashtags.map((hashtag, index) => (\r\n          <div style={{ margin: \"2px\" }} key={index}>\r\n            <div\r\n              className={`Tag${\r\n                parseInt(hashtag.PostHashtag.HashtagId) % 8\r\n              } Tag`}\r\n              style={{ display: \"inline-block\", margin: \"2px\" }}\r\n              onClick={(e) => {\r\n                TagClick(e, hashtag.name);\r\n              }}\r\n            >\r\n              <a href=\"\">#{hashtag.name}</a>\r\n            </div>{\" \"}\r\n            &nbsp;\r\n          </div>\r\n        ))}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { useCallback, useEffect,useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport AlignItemsList from \"./AlignItemsList\";\r\nimport Grid from '@mui/material/Grid';\r\nimport { useInput } from '@mui/base';\r\nimport axios from 'axios';\r\nimport Image from \"next/image\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\ntype ResponsiveGridProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n  posts : any[];\r\n};\r\n\r\nexport default function ResponsiveGrid({ setIsLoggedIn, isLoggedIn, setPost, posts }: ResponsiveGridProps) {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n        {posts.map((post, index) => (\r\n          <Grid item xs={6} sm={4} md={3} lg ={4} key={index}>\r\n            <Item>\r\n            <li\r\n              style={{\r\n                maxWidth: \"320px\",\r\n                display: \"inline-block\",\r\n                // marginRight: \"4%\",\r\n                // marginLeft: \"1%\",\r\n                // marginTop: \"1%\",-\r\n              }}\r\n            >\r\n            <AlignItemsList isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} name={post.name} index={index} setPost={setPost} posts={posts} id={post.id} category={post.category} brand={post.brand} src={post.Images[0].src}link={post.link} season={post.season} hashtags ={post.Hashtags} reason ={post.reason}/> </li>\r\n            </Item>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios from \"axios\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport Link from \"next/link\";\n// const inter = Inter({ subsets: [\"latin\"] });\n\nexport default function Home() {\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [posts, setPost] = useState<any[]>([]);\n\n  const LOADAPI = `${process.env.NEXT_PUBLIC_API}/loadpost`;\n\n  const loadPost = useCallback(() => {\n    axios\n      .get(LOADAPI)\n      .then((result) => {\n        setPost(result.data);\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\n        // history.replace('/login');\n      })\n      .catch((error) => {\n        alert(\"로딩이 정상적으로 되지 않았습니다.\");\n        setPost([]);\n        console.log(error);\n      });\n  }, [setPost]);\n\n  useEffect(() => {\n    loadPost();\n  }, [loadPost]);\n\n  const LOGINCHECKAPI = `${process.env.NEXT_PUBLIC_API}/logincheck`;\n  useEffect(() => {\n    axios\n      .get(LOGINCHECKAPI)\n      .then((result) => {\n        if (result.data.login) {\n          setIsLoggedIn(true);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPost}>\n          <h1 id=\"title\">CRUMP REFERENCE</h1>\n        </a>\n        <div style={{ marginBottom: \"40px\" }}>\n          <Navbar\n            isLoggedIn={isLoggedIn}\n            setIsLoggedIn={setIsLoggedIn}\n            setPost={setPost}\n          />\n          {/* <LoginForm /> */}\n          {/* <SignupForm /> */}\n        </div>\n        <ResponsiveGrid\n          isLoggedIn={isLoggedIn}\n          setIsLoggedIn={setIsLoggedIn}\n          setPost={setPost}\n          posts={posts}\n        />\n      </div>\n    </>\n  );\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","useInput","value","setter","useState","initValue","handler","useCallback","e","target","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Signup","param","setIsLoggedIn","setModalOpen","API","concat","process","email","onChangeEmail","emailError","setEmailError","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","checkEmail","res","check","test","closeModal","onSubmit","preventDefault","stopPropagation","axios","name","headers","then","catch","error","response","data","message","alert","jsx_runtime","jsx","Modal","open","onClose","aria-labelledby","aria-describedby","jsxs","Box","component","noValidate","autoComplete","sx","Typography","variant","textAlign","TextField","label","marginTop","fullWidth","type","required","onChange","span","color","Button","mt","mb","size","Upload","setuploadModalOpen","file","setFile","imageFile","setImageFile","setValue","React","isImage","setIsImage","highlight","setHighlight","reason","onChangeReason","brand","onChangeBrand","link","onChangeLink","post","setPost","title","desc","photos","category","setCategory","season","setSeason","text","onChangeText","setText","handleCategoryChange","event","handleSeasonChange","handlefilechange","handfiles","files","photosArr","undefined","length","i","reader","FileReader","readAsDataURL","addEventListener","fileobj","src","result","handeldelete","parentElement","slice","targetindex","handlehighlight","handleunhighlight","handledrop","dt","dataTransfer","USERINFOAPI","userInfo","setUserInfo","useEffect","console","log","err","formData","FormData","append","FormControl","marginRight","InputLabel","id","Select","labelId","MenuItem","div","className","onDragEnter","onDragOver","onDragLeave","onDrop","input","placeholder","multiple","htmlFor","map","item","index","onClick","Image","alt","Fragment","LoginForm","setloginModalOpen","User","setUser","onSubmitForm","Navbar","isLoggedIn","HASHAPI","modalOpen","uploadModalOpen","loginModalOpen","onChangeValue","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","searchBar","useRef","current","focus","showModal","showLoginModal","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","Logout","uploadClick","handleMobileMenuOpen","currentTarget","onReady","TagSearch","split","upperCaseValue","toUpperCase","hashtags","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","flexGrow","AppBar","backgroundColor","Toolbar","noWrap","display","xs","sm","md","form","flex","marginLeft","IconButton","aria-label","SearchIcon","fill","inputRef","edge","aria-haspopup","AddIcon","fontWeight","whiteSpace","aria-controls","AccountCircle","float","MoreIcon","styled","theme","borderRadius","shape","alpha","spacing","breakpoints","up","padding","height","pointerEvents","alignItems","justifyContent","InputBase","paddingLeft","transition","transitions","create","AlignItemsList","props","DELAPI","delClick","Posts","posts","filter","editClick","TagClick","hashname","Card","maxWidth","CardActionArea","href","CardMedia","image","CardContent","fontSize","marginBottom","CardActions","EditIcon","DeleteIcon","hashtag","margin","parseInt","PostHashtag","HashtagId","a","Item","Paper","palette","mode","typography","body2","secondary","ResponsiveGrid","Grid","container","columns","lg","li","Images","Hashtags","Home","LOADAPI","loadPost","LOGINCHECKAPI","login","Head","meta","content","h1"],"sourceRoot":""}