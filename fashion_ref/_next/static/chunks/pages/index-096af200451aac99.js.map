{"version":3,"file":"static/chunks/pages/index-096af200451aac99.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./hooks/useInput.ts","webpack://_N_E/./Components/Navbar.tsx","webpack://_N_E/./Components/AlignItemsList.tsx","webpack://_N_E/./Components/ResponsiveGrid.tsx","webpack://_N_E/./Components/LoginForm.tsx","webpack://_N_E/./pages/index.tsx","webpack://_N_E/./pages/signup.tsx","webpack://_N_E/./pages/upload.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { useInput } from '@mui/base';\r\nimport { useState, useCallback } from 'react';\r\n\r\n\r\nexport default (initValue : null | string) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler : any = useCallback((e : any) => {\r\n    setter(e);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Badge from '@mui/material/Badge';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport Button from \"@mui/material/Button\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport Signup from '@/pages/signup';\r\nimport Upload from '@/pages/upload';\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\nconst inter = Inter({ subsets: [\"latin\"] });\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(\"#F8F8F8\", 0.73),\r\n  '&:hover': {\r\n    backgroundColor: alpha(\"#F8F8F8\", 0.33),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n    height : '30px',\r\n  },\r\n}));\r\nconst Navbar: React.FC = () => {\r\n\r\n  \r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState(\"\")\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const showModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const showUploadModal = () => {\r\n    setuploadModalOpen(true);\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton\r\n          size=\"large\"\r\n          color=\"inherit\"\r\n        >\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {modalOpen && <Signup setModalOpen={setModalOpen} />}\r\n      {uploadModalOpen && <Upload setuploadModalOpen={setuploadModalOpen} />}\r\n      <AppBar position=\"static\" style={{backgroundColor : \"#D9D9D9\", color:\"#000\"}}>\r\n        <Toolbar>\r\n          {/* <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}\r\n          >\r\n          {/* <p>검색할 태그</p> */}\r\n          </Typography>\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              onChange={(event) => {setValue(event.target.value)}}\r\n              placeholder=\"태그 입력\"\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onKeyPress={(event) => {\r\n                if (event.which  == 32)\r\n                  alert(value)\r\n                }}\r\n            />\r\n          </Search>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\" onClick={() => {setuploadModalOpen(true)}}>\r\n              <Badge badgeContent={0} color=\"error\">\r\n                <AddIcon />\r\n              </Badge>\r\n            </IconButton>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ height: \"50%\" }}\r\n          size=\"small\"\r\n        >\r\n          로그인\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          sx={{ height: \"50%\" }}\r\n          size=\"small\"\r\n        >\r\n          가입\r\n        </Button>\r\n\r\n\r\n\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={showModal}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\n\r\ntype AlignItemsListProps = {\r\n  name: string;\r\n};\r\n\r\nexport default function AlignItemsList(props: AlignItemsListProps) {\r\n  return (\r\n    <Card\r\n      sx={{\r\n        maxWidth: \"15\",\r\n        marginTop: \"40px\",\r\n        borderRadius: \"24px\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"300\"\r\n          image=\"../11.jpg\"\r\n          alt=\"green iguana\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n            승_01_크럼프\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            선정이유\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className=\"Tag1 Tag\"\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#상의</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n          <div\r\n            className=\"Tag2 Tag\"\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#하의</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n          <div\r\n            className=\"Tag3 Tag\"\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#23SS</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n          <div\r\n            className=\"Tag4 Tag\"\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#검정</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n          <div\r\n            className=\"Tag5 Tag\"\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#프린트</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n          <div\r\n            className=\"Tag6 Tag\"\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#화려함</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n          <div\r\n            className=\"Tag7 Tag\"\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#심플</a>\r\n          </div>\r\n        </div>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport AlignItemsList from \"./AlignItemsList\";\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function ResponsiveGrid() {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n        {Array.from(Array(12)).map((_, index) => (\r\n          <Grid item xs={6} sm={4} md={3} lg ={4} key={index}>\r\n            <Item>\r\n            <li\r\n              style={{\r\n                maxWidth: \"320px\",\r\n                display: \"inline-block\",\r\n                // marginRight: \"4%\",\r\n                // marginLeft: \"1%\",\r\n                // marginTop: \"1%\",\r\n              }}\r\n            >\r\n            <AlignItemsList name =\"\"/> </li></Item>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect,useState } from 'react';\r\nimport useInput from '../hooks/useInput';\r\nimport axios from 'axios';\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\n\r\nexport default function LoginForm(): ReactElement {\r\n    \r\n  const API = \"http://localhost:3065/login\";\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const [isLoggedin, setisLoggedin] = useState(false);\r\n  const onFinish = (values: FormData) => {};\r\n  const [User, setUser] = useState({\r\n    id : 0,\r\n    name : null,\r\n  });\r\n\r\n  const onSubmitForm = useCallback((event : any) => {\r\n    event.preventDefault();\r\n    console.log(\"signup\")\r\n    console.log(password)\r\n    console.log(email)\r\n    axios.post(API,\r\n      // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n      // 회원가입창에서 클라이언트가 입력하는 데이터\r\n      {\r\n        email: email,           \r\n        password: password,  // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n      },\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          // 'Accept': 'application/json',\r\n        },\r\n      })\r\n      // 그러면 서버에서 클라이언트로 response(응답)으로 \r\n      // {ok: true} 아니면 {ok: false}가 온다.\r\n      // .then((response) => {\r\n      //   console.log(response); // response.data로 해야?\r\n      // })\r\n      .then((result) => {\r\n        console.log(result);\r\n        console.log(\"singupDB!\");\r\n        console.log(result.data.data)\r\n        setUser(result.data.data);\r\n        setisLoggedin(true);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert('회원가입이 정상적으로 되지 않았습니다.');\r\n        console.log(error); \r\n      })\r\n  }, [email, password]);\r\n\r\n  console.log(User)\r\n  if(isLoggedin){\r\n    return( <div>{User.name && User.name}님</div>)\r\n  }\r\n  return (\r\n    <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        // sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={(e) => {\r\n            onChangeEmail(e.target.value);\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={(e) => {\r\n            onChangePassword(e.target.value);\r\n          }}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          로그인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n  )\r\n\r\n\r\n\r\n}\r\n","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport AlignItemsList from \"../Components/AlignItemsList\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport LoginForm from \"@/Components/LoginForm\";\nimport SignupForm from \"@/pages/signup\";\nimport React, { useCallback, useState, useEffect } from 'react';\n\n\nconst inter = Inter({ subsets: [\"latin\"] });\n\nexport default function Home() {\n  \n  return (\n    <>\n      <Head>\n        <title>Create Next App</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <h1 id=\"title\">CRUMP REFERENCE</h1>\n        <div style={{marginBottom: \"40px\"}}>\n          <Navbar />\n          <LoginForm />\n          {/* <SignupForm /> */}\n        </div>\n        <ResponsiveGrid />\n      </div>\n    </>\n  );\n}\n","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from '@mui/material/Button';\r\n\r\ntype SignupProps = {\r\n  setModalOpen: any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({ setModalOpen }: SignupProps): ReactElement {\r\n  const API = \"http://localhost:3065/signups\";\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [isLoggedIn, setisLoggedIn] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password]\r\n  );\r\n\r\n  const checkEmail = (email : any) => {\r\n    let res = false;\r\n  \r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n  \r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  // const modalRef = useRef<HTMLDivElement>(null);\r\n  // useEffect(() => {\r\n  //   // 이벤트 핸들러 함수\r\n  //   const handler = (event: any) => {\r\n  //     // mousedown 이벤트가 발생한 영역이 모달창이 아닐 때, 모달창 제거 처리\r\n  //     if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n  //       setModalOpen(false);\r\n  //     }\r\n  //   };\r\n\r\n  //   // 이벤트 핸들러 등록\r\n  //   document.addEventListener(\"mousedown\", handler);\r\n  //   // document.addEventListener('touchstart', handler); // 모바일 대응\r\n\r\n  //   return () => {\r\n  //     // 이벤트 핸들러 해제\r\n  //     document.removeEventListener(\"mousedown\", handler);\r\n  //     // document.removeEventListener('touchstart', handler); // 모바일 대응\r\n  //   };\r\n  // }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if (password !== passwordCheck) {\r\n        return setPasswordError(true);\r\n      }\r\n      e.preventDefault();\r\n      // if (!term) {\r\n      //   return setTermError(true);\r\n      // }\r\n      console.log(email, nickname, password);\r\n      axios\r\n        .post(\r\n          API,\r\n          // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n          // 회원가입창에서 클라이언트가 입력하는 데이터\r\n          {\r\n            email: email,\r\n            name: nickname,\r\n            password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // 'Accept': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        // 그러면 서버에서 클라이언트로 response(응답)으로\r\n        // {ok: true} 아니면 {ok: false}가 온다.\r\n        // .then((response) => {\r\n        //   console.log(response); // response.data로 해야?\r\n        // })\r\n        .then((result) => {\r\n          console.log(result);\r\n          console.log(\"singupDB!\");\r\n          console.log(result.data);\r\n          setisLoggedIn(true);\r\n          // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n          // history.replace('/login');\r\n        })\r\n        .catch((error) => {\r\n          alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n          console.log(error);\r\n        });\r\n    },\r\n    [email, password, passwordCheck]\r\n  );\r\n\r\n  if (!isLoggedIn) {\r\n    return (\r\n      <Modal\r\n        open={true}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box \r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}>\r\n          {/* <form onSubmit={onSubmit}> */}\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            회원가입\r\n          </Typography>\r\n            <TextField\r\n              label=\"이메일\"\r\n              name=\"user-email\"\r\n              fullWidth\r\n              type=\"email\"\r\n              value={email}\r\n              required\r\n              error={checkEmail(email)}\r\n              onChange={(e) => {\r\n                onChangeEmail(e.target.value);\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"이름\"\r\n              name=\"user-nick\"\r\n              fullWidth\r\n              value={nickname}\r\n              required\r\n              onChange={(e) => {\r\n                onChangeNickname(e.target.value);\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"비밀번호\"\r\n              fullWidth\r\n              name=\"user-password\"\r\n              type=\"password\"\r\n              value={password}\r\n              required\r\n              onChange={(e) => {\r\n                onChangePassword(e.target.value);\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"비밀번호체크\"\r\n              fullWidth\r\n              name=\"user-password-check\"\r\n              type=\"password\"\r\n              value={passwordCheck}\r\n              required\r\n              onChange={(e) => {\r\n                setPasswordCheck(e.target.value);\r\n              }}\r\n            />\r\n            {passwordError && <span>비밀번호가 일치하지 않습니다.</span>}\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n                size=\"large\"\r\n              >\r\n                회원가입\r\n              </Button>\r\n          {/* </form> */}\r\n        </Box>\r\n        {/* <Button onClick={closeModal}>닫기</Button> */}\r\n      </Modal>\r\n      // {/* <div className={\"container\"} ref={modalRef}>\r\n      //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n      //       <br />\r\n      //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n      //     </TextField>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-nick\">닉네임</label>\r\n      //       <br />\r\n      //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n      //     </div>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-password\">비밀번호</label>\r\n      //       <br />\r\n      //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n      //     </div>\r\n      //     <div>\r\n      //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n      //       <br />\r\n      //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n      //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n      //     </div>\r\n      //     {/* <div>\r\n      //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n      //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n      //     </div> */}\r\n      //     <div style={{ marginTop: 10 }}>\r\n      //       <button>가입하기</button>\r\n      //     </div>\r\n      //     <button className={\"close\"} onClick={closeModal}>\r\n      //         X\r\n      //     </button>\r\n      //   </div> */}\r\n      // }\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\n\r\ntype SignupProps = {\r\n  setuploadModalOpen: any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload({ setuploadModalOpen }: SignupProps) {\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [brand, onChangeBrand] = useInput(\"\");\r\n  const [link, onChangeLink] = useInput(\"\");\r\n  const closeModal = () => {\r\n    setuploadModalOpen(false);\r\n  };\r\n  const onSubmit = useCallback(() => {}, []);\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          업로드\r\n        </Typography>\r\n        <TextField\r\n          label=\"nickname\"\r\n          name=\"user-nickname\"\r\n          fullWidth\r\n          type=\"text\"\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={(e) => {\r\n            onChangeNickname(e.target.value);\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"이름\"\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={(e) => {\r\n            onChangeNickname(e.target.value);\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          fullWidth\r\n          name=\"user-brand\"\r\n          type=\"text\"\r\n          value={brand}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={(e) => {\r\n            onChangeBrand(e.target.value);\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"link\"\r\n          fullWidth\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={link}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={(e) => {\r\n            onChangeLink(e.target.value);\r\n          }}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n  );\r\n}\r\n"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","value","setter","useState","initValue","handler","useCallback","e","Search","styled","theme","param","position","borderRadius","shape","backgroundColor","alpha","marginRight","spacing","marginLeft","width","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","concat","transition","transitions","create","Navbar","modalOpen","setModalOpen","React","uploadModalOpen","setuploadModalOpen","setValue","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","showModal","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","handleMobileMenuOpen","menuId","renderMenu","jsx_runtime","jsxs","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","jsx","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","size","aria-label","Badge","badgeContent","MailIcon","p","NotificationsIcon","aria-controls","aria-haspopup","AccountCircle","Box","sx","flexGrow","Signup","Upload","AppBar","style","Toolbar","Typography","noWrap","component","xs","sm","SearchIcon","onChange","target","placeholder","inputProps","onKeyPress","which","alert","md","AddIcon","Button","type","fullWidth","variant","edge","MoreIcon","AlignItemsList","props","Card","maxWidth","marginTop","boxShadow","CardActionArea","CardMedia","image","alt","CardContent","gutterBottom","CardActions","div","margin","className","a","href","Item","Paper","palette","mode","typography","body2","textAlign","text","secondary","ResponsiveGrid","Grid","container","columns","Array","from","map","_","index","item","lg","li","name","LoginForm","email","onChangeEmail","useInput","password","onChangePassword","isLoggedin","setisLoggedin","User","setUser","onSubmitForm","preventDefault","console","log","axios","headers","then","result","data","catch","error","noValidate","autoComplete","onSubmit","TextField","label","required","mt","mb","Home","Fragment","Head","title","meta","content","h1","marginBottom","top","left","transform","bgcolor","border","nickname","onChangeNickname","passwordCheck","setPasswordCheck","passwordError","setPasswordError","isLoggedIn","setisLoggedIn","closeModal","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Modal","aria-labelledby","aria-describedby","checkEmail","res","check","test","span","brand","onChangeBrand","link","onChangeLink"],"sourceRoot":""}