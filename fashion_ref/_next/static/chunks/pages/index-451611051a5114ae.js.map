{"version":3,"file":"static/chunks/pages/index-451611051a5114ae.js","mappings":"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","sources":["webpack://_N_E/./hooks/useInput.ts","webpack://_N_E/./Components/Signup.tsx","webpack://_N_E/./Components/Upload.tsx","webpack://_N_E/./Components/LoginForm.tsx","webpack://_N_E/./Components/Searchbar.tsx","webpack://_N_E/./Components/Navbar.tsx","webpack://_N_E/./Components/Cardpost.tsx","webpack://_N_E/./Components/ResponsiveGrid.tsx","webpack://_N_E/./Components/NoticeModal.tsx","webpack://_N_E/./Components/UserPage.tsx","webpack://_N_E/./pages/index.tsx","webpack://_N_E/","webpack://_N_E/<anon>"],"sourcesContent":["import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { TOGGLE_SIGNUP_DONE, loginRequestAction, signupRequestAction } from \"@/reducers/user\";\r\n\r\ntype SignupProps = {\r\n  setIsModalOpen: any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({\r\n  setIsModalOpen,\r\n}: SignupProps): ReactElement {\r\n  const dispatch = useDispatch();\r\n  const [isInitialOpen, setIsInitialOpen]= useState(true);\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const { signUpLoading } = useSelector((state: any) => state.user);\r\n  const { signUpDone } = useSelector((state: any) => state.user);\r\n  const { signUpError } = useSelector((state: any) => state.user);\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [name, onChangeName] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [nameError, setNameError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password, setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email: any) => {\r\n    let res = false;\r\n\r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      // e.stopPropagation();\r\n      if (password !== passwordCheck) {\r\n        setPasswordError(true);\r\n      } else if (!checkEmail(email) || email.replace(\" \",\"\") ==\"\") {\r\n        setEmailError(true);\r\n      } else if(name.replace(\" \",\"\") ==\"\"){\r\n        setNameError(true);\r\n      }\r\n      else {\r\n        dispatch(\r\n          signupRequestAction({\r\n            email,\r\n            name,\r\n            password,\r\n          })\r\n        );\r\n      }\r\n    },[email, password, passwordCheck, name]);\r\n\r\n    useEffect(()=>{\r\n      console.log(\"signupDone\",signUpDone)\r\n      if(signUpDone && !isInitialOpen){\r\n        console.log(\"modal\")\r\n        setIsModalOpen(false);\r\n        dispatch({\r\n          type: TOGGLE_SIGNUP_DONE,\r\n        })\r\n      }\r\n      setIsInitialOpen(false);\r\n    },[signUpDone])\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\" sx={{ textAlign: \"center\" }}>\r\n          회원가입\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          // error={checkEmail(email)}\r\n          onChange={onChangeEmail}\r\n        />\r\n        {emailError && (\r\n          <span style={{ color: \"red\" }}>Email 형식이 잘못되었습니다</span>\r\n        )}\r\n        <TextField\r\n          label=\"이름\"\r\n          name=\"user-nick\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          value={name}\r\n          required\r\n          onChange={onChangeName}\r\n        />\r\n        {nameError && (\r\n          <span style={{ color: \"red\" }}>이름을 입력해주세요</span>\r\n        )}\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          fullWidth\r\n          name=\"user-password\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={password}\r\n          required\r\n          onChange={onChangePassword}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호체크\"\r\n          fullWidth\r\n          name=\"user-password-check\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={passwordCheck}\r\n          required\r\n          onChange={setPasswordCheck}\r\n        />\r\n        {passwordError && (\r\n          <span style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다</span>\r\n        )}\r\n        {signUpError && (\r\n          <span style={{ color: \"red\" }}>회원가입 실패했습니다</span>\r\n        )}\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n          loading={signUpLoading}\r\n        >\r\n          확인\r\n        </LoadingButton>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    // {/* <div className={\"container\"} ref={modalRef}>\r\n    //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n    //       <br />\r\n    //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n    //     </TextField>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-nick\">닉네임</label>\r\n    //       <br />\r\n    //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password\">비밀번호</label>\r\n    //       <br />\r\n    //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n    //       <br />\r\n    //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n    //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n    //     </div>\r\n    //     {/* <div>\r\n    //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n    //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n    //     </div> */}\r\n    //     <div style={{ marginTop: 10 }}>\r\n    //       <button>가입하기</button>\r\n    //     </div>\r\n    //     <button className={\"close\"} onClick={closeModal}>\r\n    //         X\r\n    //     </button>\r\n    //   </div> */}\r\n    // }\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Router from \"next/router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  addPost,\r\n  ADD_POST_REQUEST,\r\n  EDIT_POST_REQUEST,\r\n  GET_HASHTAGS_REQUEST,\r\n  loadPost,\r\n  TOGGLE_ADD_POST_DONE_REQUEST,\r\n  TOGGLE_EDIT_POST_DONE_REQUEST,\r\n  TOGGLE_ISEDIT_REQUEST,\r\n} from \"@/reducers/post\";\r\nimport { and } from \"sequelize\";\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype UploadProps = {\r\n  setImageIndex: any;\r\n  setuploadModalOpen: any;\r\n  uploadModalOpen: boolean;\r\n  postId: number | null;\r\n  clipboardFile: any;\r\n  uploadModalClicked: boolean;\r\n  setUploadModalClicked: any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload(props: UploadProps) {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n  const { hashtags } = useSelector((state: any) => state.post);\r\n  const { isEdit } = useSelector((state: any) => state.post);\r\n  const { editPostWithImagesDone } = useSelector((state: any) => state.post);\r\n  const { addPostError } = useSelector((state: any) => state.post);\r\n  const { editPostError } = useSelector((state: any) => state.post);\r\n  const fileInput = useRef<HTMLInputElement>(null);\r\n\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  const postInfoArray = [];\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [reason, onChangeReason, setReason] = useInput(\"\");\r\n  const [brand, onChangeBrand, setBrand] = useInput(\"\");\r\n  const [link, onChangeLink, setLink] = useInput(\"\");\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n  const { addPostLoading } = useSelector((state: any) => state.post);\r\n  const { addPostDone } = useSelector((state: any) => state.post);\r\n  const { editPostDone } = useSelector((state: any) => state.post);\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const [imageFile, setImageFile] = useState<any>(post.photos || []);\r\n  const closeModal = useCallback(() => {\r\n    props.setuploadModalOpen(false);\r\n    props.setUploadModalClicked(false);\r\n    setPost({\r\n      title: \"\",\r\n      desc: \"\",\r\n      photos: [null],\r\n    });\r\n    dispatch({\r\n      type: TOGGLE_ISEDIT_REQUEST,\r\n      data: false,\r\n    });\r\n    //저장하시겠습니까?\r\n  }, [props]);\r\n\r\n  const { title, desc, photos } = post;\r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n  const inputRef = useRef(null);\r\n  const [category, setCategory] = React.useState(\"상의\");\r\n  const [season, setSeason] = React.useState(\"23SS\");\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n  const [cardPost, setCardPost] = useState([]);\r\n  const [prevBrandName, setPrevBrandName] = useState(\"\");\r\n\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = useCallback(\r\n    (files: FileList | null) => {\r\n      let photosArr: any[] = [];\r\n      let fileArr: any[] = [];\r\n      if (files != undefined) {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          fileArr.push(file);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              // photos: [...photos, ...photosArr],\r\n              photos: photos.concat(photosArr),\r\n            });\r\n          });\r\n        }\r\n\r\n        setImageFile(imageFile.concat(fileArr));\r\n      }\r\n    },\r\n    [post, photos, imageFile]\r\n  );\r\n\r\n  const addIconClick = useCallback(() => {\r\n    if (fileInput.current) {\r\n      (fileInput.current as any).click();\r\n    }\r\n  }, [fileInput]);\r\n\r\n  const handeldelete = useCallback(\r\n    (e: React.MouseEvent<HTMLSpanElement>) => {\r\n      let target = (e.target as HTMLSpanElement).parentElement;\r\n      var index = Array.from(\r\n        ((target as HTMLDivElement).parentElement as HTMLDivElement).children\r\n      ).indexOf(target as HTMLDivElement);\r\n      let targetindex = index;\r\n      setPost({\r\n        ...post,\r\n        photos: [...photos.slice(0, index + 1), ...photos.slice(index + 2)],\r\n      });\r\n      setImageFile([...photos.slice(0, index + 1), ...photos.slice(index + 2)]);\r\n\r\n      // setImageFile( (prev) => prev.filter())\r\n\r\n      //이미지 다 없어지면 다시 업로드 창 뜨도록\r\n      if (post.photos.length == 2) {\r\n        //랜더링 되기 전이라 2\r\n        setIsImage(false);\r\n      }\r\n    },\r\n    [post, photos]\r\n  );\r\n\r\n  //clipboard\r\n  useEffect(() => {\r\n    if (!props.uploadModalClicked) {\r\n      if (props.clipboardFile) {\r\n        handfiles(props.clipboardFile);\r\n      }\r\n    }\r\n  }, [props.clipboardFile, props.uploadModalClicked, props.uploadModalOpen]);\r\n\r\n  useEffect(() => {\r\n    const handlePaste = (event: any) => {\r\n      if (event.clipboardData.files.length > 0) {\r\n        handfiles(event.clipboardData.files);\r\n      }\r\n    };\r\n    window.addEventListener(\"paste\", handlePaste);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"paste\", handlePaste);\r\n    };\r\n  }, [post]);\r\n\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(false);\r\n  }, []);\r\n\r\n  const handledrop = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      let dt = e.dataTransfer;\r\n      let files = dt?.files;\r\n      setHighlight(false);\r\n      handfiles(files);\r\n    },\r\n    [post]\r\n  );\r\n\r\n  const [hashTags, setHashTags] = React.useState({\r\n    data: [{ name: \"\" }],\r\n  });\r\n\r\n  const getHashtags = useCallback(() => {\r\n    dispatch({\r\n      type: GET_HASHTAGS_REQUEST,\r\n    });\r\n    setShowHashModalOpen(true);\r\n  }, [dispatch]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if (brand == \"\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"브랜드입력 필수\");\r\n      } else {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        //수정일 때\r\n        if (isEdit) {\r\n          //이미지 새로 올렸을 때\r\n          if (post.photos.length == 1) {\r\n            alert(\"이미지 필수\");\r\n            return;\r\n          }\r\n          const formData = new FormData();\r\n          //if first element is null\r\n          if (!imageFile[0]) imageFile.shift();\r\n\r\n          [].forEach.call(imageFile, (f) => {\r\n            //file check\r\n            const isFile = (f as any).name || null;\r\n            if (isFile) {\r\n              formData.append(\"image\", f);\r\n            } else {\r\n              formData.append(\"imagePath\", (f as any).src);\r\n            }\r\n          });\r\n\r\n          formData.append(\"postId\", props.postId?.toString() as string);\r\n          formData.append(\"brand\", brand.replaceAll(\" \", \"\"));\r\n          formData.append(\"link\", link);\r\n          formData.append(\"category\", category);\r\n          formData.append(\"season\", season);\r\n          formData.append(\"hashtag\", text);\r\n          formData.append(\"reason\", reason);\r\n          formData.append(\"name\", userName);\r\n          dispatch({\r\n            type: EDIT_POST_REQUEST,\r\n            data: formData,\r\n          });\r\n        }\r\n        //수정 아닐 떄\r\n        else {\r\n          if (!imageFile) {\r\n            alert(\"이미지 필수\");\r\n            return;\r\n          }\r\n          const formData = new FormData();\r\n          [].forEach.call(imageFile, (f) => {\r\n            formData.append(\"image\", f);\r\n          });\r\n          formData.append(\"userId\", user.id);\r\n          formData.append(\"userName\", user.userName);\r\n          formData.append(\"brand\", brand.replaceAll(\" \", \"\"));\r\n          formData.append(\"link\", link);\r\n          formData.append(\"category\", category);\r\n          formData.append(\"season\", season);\r\n          formData.append(\"hashtag\", text);\r\n          formData.append(\"reason\", reason);\r\n          dispatch(addPost(formData));\r\n        }\r\n      }\r\n    },\r\n    [\r\n      brand,\r\n      category,\r\n      season,\r\n      text,\r\n      reason,\r\n      link,\r\n      user,\r\n      dispatch,\r\n      imageFile,\r\n      post.photos,\r\n      isEdit,\r\n      props.postId,\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      dispatch({\r\n        type: TOGGLE_ADD_POST_DONE_REQUEST,\r\n      });\r\n      closeModal();\r\n    }\r\n    if (editPostDone) {\r\n      dispatch({\r\n        type: TOGGLE_EDIT_POST_DONE_REQUEST,\r\n      });\r\n      closeModal();\r\n      // props.setIsEdit(false);\r\n      dispatch({\r\n        type: TOGGLE_ISEDIT_REQUEST,\r\n        data: false,\r\n      });\r\n      if (props.setImageIndex) props.setImageIndex(0);\r\n    }\r\n    if (editPostWithImagesDone && isEdit) {\r\n      dispatch({\r\n        type: TOGGLE_EDIT_POST_DONE_REQUEST,\r\n      });\r\n      // closeModal();\r\n      // props.setIsEdit(false);\r\n\r\n      dispatch({\r\n        type: TOGGLE_ISEDIT_REQUEST,\r\n        data: false,\r\n      });\r\n\r\n      if (props.setImageIndex) props.setImageIndex(0);\r\n    }\r\n  }, [\r\n    addPostDone,\r\n    dispatch,\r\n    closeModal,\r\n    editPostDone,\r\n    isEdit,\r\n    props,\r\n    editPostWithImagesDone,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const targetPost = postArray.find(\r\n        (post: any) => post.id === props.postId\r\n      );\r\n\r\n      //카테고리, 시즌, 이름, 브랜드명 제외\r\n      let postHashtags = \"\";\r\n      if (targetPost.Hashtags.length > 4) {\r\n        for (let i = 0; i < targetPost.Hashtags.length; i++) {\r\n          const hashname = targetPost.Hashtags[i]?.name;\r\n          if(hashname != targetPost.category.toUpperCase() && \r\n             hashname != targetPost.season.toUpperCase() &&\r\n             hashname != targetPost.brand.toUpperCase() && \r\n             hashname != targetPost.name.toUpperCase())\r\n             {\r\n             postHashtags = postHashtags.concat(\r\n              `#${hashname} `\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      setCardPost(targetPost.Images);\r\n      setImageFile(targetPost.Images);\r\n      setUserName(targetPost.name);\r\n      setCategory(targetPost.category);\r\n      setSeason(targetPost.season);\r\n      setText(postHashtags);\r\n      setBrand(targetPost.brand);\r\n      setPrevBrandName(targetPost.brand);\r\n      setReason(targetPost.reason);\r\n      setLink(targetPost.link);\r\n      setIsImage(true);\r\n      setPost({\r\n        ...post,\r\n        photos: photos.concat(targetPost.Images),\r\n      });\r\n\r\n    }\r\n  }, [isEdit, postArray]);\r\n\r\n  const addDrop = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      let dt = e.dataTransfer;\r\n      let files = dt?.files;\r\n      handfiles(files);\r\n    },\r\n    [post]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {showHashModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closehashtagsModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <div\r\n              className=\"hashlistdiv\"\r\n              style={{ height: \"300px\", overflow: \"overlay\" }}\r\n            >\r\n              {hashtags &&\r\n                hashtags.map((hashtag: any, index: number) => (\r\n                  <li id=\"hashlist\" key={index} style={{ listStyle: \"none\" }}>\r\n                    {\" \"}\r\n                    #{hashtag.name}\r\n                  </li>\r\n                ))}\r\n            </div>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closehashtagsModal}\r\n            >\r\n              확인\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Modal\r\n        open={true}\r\n        // onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box\r\n          component=\"form\"\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          onSubmit={onSubmit}\r\n          sx={style}\r\n        >\r\n          {/* <form onSubmit={onSubmit}> */}\r\n          <CloseIcon\r\n            style={{\r\n              position: \"absolute\",\r\n              cursor: \"pointer\",\r\n              top: \"15px\",\r\n              right: \"15px\",\r\n            }}\r\n            onClick={closeModal}\r\n          ></CloseIcon>\r\n          <Typography sx={{ textAlign: \"center\" }} component=\"h1\" variant=\"h5\">\r\n            업로드\r\n          </Typography>\r\n          {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n          <TextField\r\n            required\r\n            label=\"브랜드\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-brand\"\r\n            type=\"text\"\r\n            value={brand}\r\n            variant=\"standard\"\r\n            onChange={onChangeBrand}\r\n          />\r\n          <TextField\r\n            label=\"Link\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={link}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeLink}\r\n          />\r\n\r\n          <TextField\r\n            label=\"선정이유\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={reason}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeReason}\r\n          />\r\n\r\n          <FormControl\r\n            sx={{ width: \"40%\", marginRight: \"10%\", marginTop: \"25px\" }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-label\">상의</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"상의\"}\r\n              value={category}\r\n              label=\"카테고리\"\r\n              required\r\n              onChange={handleCategoryChange}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl sx={{ width: \"40%\", marginTop: \"25px\" }}>\r\n            <InputLabel id=\"demo-simple-select-label\">23SS</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"23SS\"}\r\n              value={season}\r\n              label=\"시즌\"\r\n              required\r\n              onChange={handleSeasonChange}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            sx={{ marginTop: \"30px\" }}\r\n            value={text}\r\n            onChange={onChangeText}\r\n            fullWidth\r\n            label=\"해시태그입력 #검정 #반팔 \"\r\n            variant=\"outlined\"\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n          <div className=\"file-upload\" style={{ marginTop: \"10px\" }}>\r\n            <div className=\"custom-form-group\">\r\n              {!isImage && (\r\n                <div\r\n                  className={\r\n                    highlight\r\n                      ? \"custom-file-drop-area highlight\"\r\n                      : \"custom-file-drop-area\"\r\n                  }\r\n                  onDragEnter={handlehighlight}\r\n                  onDragOver={handlehighlight}\r\n                  onDragLeave={handleunhighlight}\r\n                  onDrop={handledrop}\r\n                >\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"photos\"\r\n                    placeholder=\"Enter photos\"\r\n                    multiple={false}\r\n                    id=\"filephotos\"\r\n                    onChange={handlefilechange}\r\n                  />\r\n                  <label htmlFor=\"filephotos\">\r\n                    이미지를 드래그해서 넣어주세요\r\n                  </label>\r\n                </div>\r\n              )}\r\n              <div\r\n                className=\"custom-file-preview\"\r\n                onDragEnter={handlehighlight}\r\n                onDragOver={handlehighlight}\r\n                onDragLeave={handleunhighlight}\r\n                onDrop={addDrop}\r\n              >\r\n                {photos.length > 0 &&\r\n                  photos.map((item: any, index) =>\r\n                    index != 0 ? (\r\n                      <div className=\"prev-img\" key={index}>\r\n                        <span onClick={handeldelete}>&times;</span>\r\n                        {item && <img src={item.src} alt={item.name} />}\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )\r\n                  )}\r\n                {isImage ? (\r\n                  <>\r\n                    <AddIcon\r\n                      onClick={addIconClick}\r\n                      sx={{ marginLeft: \"54px\", marginTop: \"39px\" }}\r\n                    />\r\n                    <input\r\n                      type=\"file\"\r\n                      style={{ visibility: \"hidden\" }}\r\n                      name=\"photos\"\r\n                      placeholder=\"Enter photos\"\r\n                      multiple={false}\r\n                      id=\"filephotos\"\r\n                      onChange={handlefilechange}\r\n                      ref={fileInput}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {addPostError && (\r\n            <span style={{ color: \"red\" }}>업로드 실패했습니다</span>\r\n          )}\r\n          {editPostDone && (\r\n            <span style={{ color: \"red\" }}>업로드 실패했습니다</span>\r\n          )}\r\n          <button\r\n            id=\"submit_bt\"\r\n            style={{ display: \"none\" }}\r\n            type=\"submit\"\r\n          ></button>\r\n          <LoadingButton\r\n            type=\"submit\"\r\n            loading={addPostLoading}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            size=\"large\"\r\n            // loading={true}\r\n          >\r\n            확인\r\n          </LoadingButton>\r\n          {/* </form> */}\r\n        </Box>\r\n        {/* <Button onClick={closeModal}>닫기</Button> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TOGGLE_LOGIN_DONE, loginRequestAction } from \"@/reducers/user\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  loginModalOpen : boolean;\r\n};\r\nexport default function LoginForm({\r\n  setloginModalOpen,\r\n  loginModalOpen,\r\n}: LoginFormProps): ReactElement {\r\n  \r\n  const dispatch = useDispatch();\r\n  const [isInitialOpen, setIsInitialOpen]= useState(true);\r\n  const {logInDone} = useSelector((state : any) => state.user)\r\n  const {logInLoading} = useSelector((state : any) => state.user)\r\n  const {logInError} = useSelector((state : any) => state.user)\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback(\r\n    (event: any) => {\r\n      event.preventDefault();\r\n      if (email == \"\") {\r\n        alert(\"이메일을 입력해주세요\");\r\n      } else if (password == \"\") {\r\n        alert(\"비밀번호를 입력해주세요\");\r\n      } else {\r\n        dispatch(loginRequestAction({email,password}))\r\n      }\r\n    },\r\n    [email, password, dispatch]\r\n  );\r\n\r\n  useEffect(()=>{\r\n    if(logInDone && !isInitialOpen){\r\n      setloginModalOpen(false);\r\n      dispatch({\r\n        type: TOGGLE_LOGIN_DONE,\r\n      })\r\n    }\r\n    setIsInitialOpen(false);\r\n\r\n  },[logInDone])\r\n\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        {logInError && <span style={{marginTop:\"10px\", color:\"#F73334\"}}> 로그인 정보가 일치하지 않습니다.</span>}\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n          loading={logInLoading}\r\n        >\r\n          로그인\r\n        </LoadingButton>\r\n        {/* </form> */}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { HASHTAG_SEARCH_REQUEST, loadPost } from \"@/reducers/post\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {useEffect, useRef} from 'react';\r\n\r\ntype SearchbarProps = {\r\n  setIsUserpage:any\r\n};\r\n\r\nexport default function Searchbar({setIsUserpage}: SearchbarProps) {\r\n  const [value, onChangeValue, setValue] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (searchBar.current) {\r\n      searchBar.current.focus();\r\n    }\r\n  }, []);\r\n\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      // e.preventDeafult();\r\n      // e.stopPropagation();\r\n      if (value == \"\") {\r\n        dispatch(loadPost())\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        let upperCaseValue = value.toUpperCase();\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        dispatch({\r\n          type: HASHTAG_SEARCH_REQUEST,\r\n          data: {\r\n            hashtags: \"#\" + upperCaseValue,\r\n          }\r\n        })\r\n        setValue(\"\")\r\n        setIsUserpage(false)\r\n      }\r\n    },\r\n    [dispatch, value]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={TagSearch}\r\n        style={{ width: \"70%\", flex: \"auto\", marginLeft: \"15%\" }}\r\n      >\r\n        <IconButton\r\n          type=\"submit\"\r\n          aria-label=\"search\"\r\n          sx={{ display: { xs: \"none\", md: \"inline-block\" } }}\r\n        >\r\n          <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n        </IconButton>\r\n        <TextField\r\n          id=\"search-bar\"\r\n          className=\"text\"\r\n          sx={{ display: \"inline-block\", width: \"80%\", '> div' : {width :\"100%\"}}}\r\n          value={value}\r\n          onChange={onChangeValue}\r\n          label=\"#상의 #검정\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Search...\"\r\n          size=\"small\"\r\n          inputRef={searchBar}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement, useRef } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/Signup\";\r\nimport Upload from \"@/Components/Upload\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginRequestAction, logoutRequestAction } from \"@/reducers/user\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { GET_HASHTAGS_REQUEST, GET_USER_POST_REQUEST, TOGGLE_SCROLL_REQUEST } from \"@/reducers/post\";\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\n\r\ntype NavbarProps = {\r\n  setIsUserpage :any;\r\n};\r\n\r\nexport default function Navbar({\r\n  \r\n  setIsUserpage\r\n}: NavbarProps): ReactElement {\r\n\r\n  //redux\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { logOutLoading } = useSelector((state: any) => state.user);\r\n  const { hashtags } = useSelector((state: any) => state.post);\r\n  const { isEdit } = useSelector((state: any) => state.post);\r\n  const [clipboardFile, setClipboardFile] = useState(null);\r\n  const [uploadModalClicked, setUploadModalClicked] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n\r\n\r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    dispatch(logoutRequestAction());\r\n    //왜인지 모르겠는데 로그아웃 후 모달 켜짐\r\n    setloginModalOpen(false);\r\n  }, []);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (user) {\r\n      setuploadModalOpen(true);\r\n      setUploadModalClicked(true)\r\n    } else {\r\n      setloginModalOpen(true);\r\n      // setIsEdit(true);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onReady = useCallback(() => {\r\n    alert(\"준비중입니다.\");\r\n  }, []);\r\n\r\n  const getHashtags = useCallback(() => {\r\n    //dispatch\r\n    dispatch({\r\n      type: GET_HASHTAGS_REQUEST,\r\n    });\r\n    setShowHashModalOpen(true);\r\n  }, [dispatch]);\r\n\r\n  const profileClick = useCallback(()=>{\r\n    if(user){\r\n      setIsUserpage(true);\r\n      \r\n      dispatch({\r\n        type: GET_USER_POST_REQUEST,\r\n        data: null,\r\n      });\r\n      dispatch({\r\n        type: TOGGLE_SCROLL_REQUEST,\r\n      })\r\n    }else{\r\n      alert(\"준비중입니다.\");\r\n    }\r\n  },[user])\r\n\r\n\r\n  //Render Menu\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <p>만드는 중입니다</p>\r\n      </MenuItem>\r\n      {/* <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>프로필</p>\r\n      </MenuItem> */}\r\n    </Menu>\r\n  );\r\n\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {isModalOpen && (\r\n        <Signup\r\n          setIsModalOpen={setIsModalOpen}\r\n        />\r\n      )}\r\n      {user && uploadModalOpen && !isEdit && (\r\n        <Upload\r\n          uploadModalClicked={uploadModalClicked}\r\n          setUploadModalClicked={setUploadModalClicked}\r\n          setImageIndex={null}\r\n          uploadModalOpen={uploadModalOpen}\r\n          setuploadModalOpen={setuploadModalOpen}\r\n          postId={null}\r\n          clipboardFile={clipboardFile}\r\n        />\r\n      )}\r\n      {!user && loginModalOpen && (\r\n        <LoginForm\r\n          loginModalOpen={loginModalOpen}\r\n          setloginModalOpen={setloginModalOpen}\r\n        />\r\n      )}\r\n      {showHashModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closehashtagsModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <div\r\n              className=\"hashlistdiv\"\r\n              style={{ height: \"300px\", overflow: \"overlay\" }}\r\n            >\r\n              {hashtags &&\r\n                hashtags.map((hashtag: any, index: any) => (\r\n                  <li\r\n                    id=\"hashlist\"\r\n                    key={hashtag.id}\r\n                    style={{ listStyle: \"none\", marginBottom: \"5px\" }}\r\n                  >\r\n                    {\" \"}\r\n                    #{hashtag.name}\r\n                  </li>\r\n                ))}\r\n            </div>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closehashtagsModal}\r\n            >\r\n              확인\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          ></Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Searchbar setIsUserpage={setIsUserpage}/>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            <>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                sx={{ marginRight: \"10px\" }}\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"false\"\r\n                color=\"primary\"\r\n                onClick={uploadClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </>\r\n            {!user ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <LoadingButton\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"100%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                    whiteSpace: \"nowrap\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={Logout}\r\n                  loading={logOutLoading}\r\n                >\r\n                  로그아웃\r\n                </LoadingButton>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                  onClick={profileClick}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" }, float: \"right\" }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft';\r\nimport Brightness1RoundedIcon from '@mui/icons-material/Brightness1Rounded';\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  DELETE_POST_REQUEST,\r\n  DUPLICATE_POST_REQUEST,\r\n  HASHTAG_SEARCH_REQUEST,\r\n  LIKE_POST_REQUEST,\r\n  loadPost,\r\n  TOGGLE_ISEDIT_REQUEST,\r\n  UNLIKE_POST_REQUEST,\r\n} from \"@/reducers/post\";\r\nimport FavoriteBorderTwoToneIcon from \"@mui/icons-material/FavoriteBorderTwoTone\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport Upload from \"./Upload\";\r\n\r\ntype CardpostProps = {\r\n  index: number;\r\n  setIsUserpage:any;\r\n  // posts: any[];\r\n  category: string;\r\n  id: number;\r\n  brand: string;\r\n  link: string;\r\n  Images: {\r\n    src: string;\r\n  }[];\r\n  season: string;\r\n  reason: string;\r\n  name: string;\r\n  hashtags: {\r\n    PostHashtag: {\r\n      HashtagId: number;\r\n    };\r\n    name: string;\r\n  }[];\r\n  likers: any[];\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst StyledCardAction = styled(CardActions)`\r\n  display: flex;\r\n  -webkit-box-align: center;\r\n  align-items: center;\r\n  padding: 8px;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport default function Cardpost(props: CardpostProps) {\r\n  const { logInDone } = useSelector((state: any) => state.user);\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n  const dispatch = useDispatch();\r\n  // const isLoggedIn = false;\r\n  const [uploadModalClicked, setUploadModalClicked] = useState(false);\r\n  const [like, setLike] = useState(false);\r\n  const {isEdit} = useSelector((state: any) => state.post);\r\n  const [likeClick, setLikeClick] = useState(props.likers?.length || 0);\r\n  const [loginModalOpen, setIsLoginFormOpen] = useState(false);\r\n  const [isUploadFormOpen, setIsUploadFormOpen] = useState(false);\r\n  const [imageIndex, setImageIndex] = useState(0);\r\n\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [ImagePath, setImagePath] = React.useState(\"\");\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    if (user) {\r\n      setLike((prev) => !prev);\r\n\r\n      if (!like) {\r\n        dispatch({\r\n          type: LIKE_POST_REQUEST,\r\n          data: props.id,\r\n        });\r\n        setLikeClick((prev) => prev + 1);\r\n      } else {\r\n        dispatch({\r\n          type: UNLIKE_POST_REQUEST,\r\n          data: props.id,\r\n        });\r\n        setLikeClick((prev) => prev - 1);\r\n      }\r\n    } else {\r\n      alert(\"로그인 해주세요\");\r\n      setIsLoginFormOpen(true);\r\n      //로그인 모달 띄우기 넣어야\r\n    }\r\n  }, [user, like, props.id]);\r\n\r\n  const delClick = useCallback(() => {\r\n    if (user) {\r\n      setModalOpen(true);\r\n    } else {\r\n      alert(\"로그인 해주세요\");\r\n      setIsLoginFormOpen(true);\r\n      //로그인 모달 띄우기 넣어야\r\n    }\r\n  }, [user]);\r\n\r\n  const duplicateClick = useCallback(() => {\r\n    if (!user) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n\r\n    return dispatch({\r\n      type: DUPLICATE_POST_REQUEST,\r\n      data: props.id,\r\n    });\r\n  }, [dispatch, props.id, user]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      if (!user) {\r\n        return alert(\"로그인이 필요합니다.\");\r\n      }\r\n\r\n      return dispatch({\r\n        type: DELETE_POST_REQUEST,\r\n        data: props.id,\r\n      });\r\n    },\r\n    [dispatch, props.id, user]\r\n  );\r\n\r\n  const editClick = () => {\r\n    if (!user) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n    setIsUploadFormOpen(true);\r\n    if(!isEdit){\r\n      dispatch({\r\n        type: TOGGLE_ISEDIT_REQUEST,\r\n        data : true,\r\n      })\r\n    }\r\n\r\n    // alert(\"준비중입니다.\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.Images[imageIndex] == undefined) {\r\n    } else {\r\n      // console.log(\"props\")\r\n      // console.log(props)\r\n      setImagePath(`../${props.Images[imageIndex].src}`);\r\n    }\r\n  }, [props.Images,imageIndex]);\r\n\r\n  const onClickRightArrow = useCallback(()=>{\r\n    if(imageIndex < props.Images.length){\r\n      setImageIndex((prev)=> prev+1)\r\n    }\r\n  },[props.Images, imageIndex])\r\n  \r\n  const onClickLeftArrow = useCallback(()=>{\r\n    if(imageIndex > 0){\r\n      setImageIndex((prev)=> prev-1)\r\n    }\r\n  },[imageIndex])\r\n\r\n\r\n  const TagClick = React.useCallback(\r\n    (e: any, hashname: string) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      dispatch({\r\n        type: HASHTAG_SEARCH_REQUEST,\r\n        data: {\r\n          hashtags: \"#\" + hashname,\r\n        },\r\n      });\r\n      props.setIsUserpage(false);\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    },\r\n    [dispatch, props]\r\n  );\r\n\r\n  useEffect(() => {\r\n    //like 눌렀는지\r\n    if (user?.data && props.likers) {\r\n      const isUserLiked = props.likers.find((v) => v.id === user?.data.id);\r\n      if (isUserLiked) setLike(true);\r\n      else setLike(false);\r\n    }\r\n  }, [props.likers, user, props.id, logInDone]);\r\n\r\n  return (\r\n    <>\r\n      {isUploadFormOpen && isEdit && (\r\n        <Upload\r\n          setUploadModalClicked ={setUploadModalClicked}\r\n          uploadModalClicked={uploadModalClicked}\r\n          setImageIndex ={setImageIndex}\r\n          setuploadModalOpen={setIsUploadFormOpen}\r\n          uploadModalOpen={isUploadFormOpen}\r\n          postId={props.id}\r\n          clipboardFile={null}\r\n        />\r\n      )}\r\n      {loginModalOpen && (\r\n        <LoginForm\r\n          loginModalOpen={loginModalOpen}\r\n          setloginModalOpen={setIsLoginFormOpen}\r\n        />\r\n      )}\r\n      {modalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closeModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={onSubmit}\r\n            sx={style}\r\n          >\r\n            {/* <form onSubmit={onSubmit}> */}\r\n            <Typography\r\n              component=\"h2\"\r\n              variant=\"h5\"\r\n              sx={{ textAlign: \"center\", marginBottom: \"15px\" }}\r\n            >\r\n              정말 삭제하시겠습니까?\r\n            </Typography>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              sx={{\r\n                mt: 3,\r\n                mb: 2,\r\n                width: \"40%\",\r\n                marginLeft: \"5%\",\r\n                marginRight: \"10%\",\r\n              }}\r\n              size=\"large\"\r\n            >\r\n              삭제\r\n            </Button>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2, width: \"40%\" }}\r\n              size=\"large\"\r\n              onClick={closeModal}\r\n            >\r\n              취소\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Card\r\n        sx={{\r\n          maxWidth: \"15\",\r\n          marginTop: \"20px\",\r\n          // borderRadius: \"24px\",\r\n          boxShadow: \"none\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <CardActionArea href={`${props.link}`} target=\"_blank\">\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"400\"\r\n            image={ImagePath}\r\n            // alt=\"이미지 오류, 삭제 후 다시 등록해주세요\"\r\n          />\r\n        </CardActionArea>\r\n        {props.Images && props.Images.length > 1 && (\r\n          <>\r\n            <ArrowRightIcon\r\n              onClick={onClickRightArrow}\r\n              style={{ position: \"absolute\", top: \"30%\", right: \"0%\", zIndex: 100, color:\"#3D3D3D\", cursor:\"pointer\"}}\r\n            />\r\n            <Brightness1RoundedIcon \r\n              style={{ position: \"absolute\", top: \"30%\", right: \"0%\", color:\"#B5B5B7\" }}\r\n            />\r\n            <ArrowLeftIcon\r\n              onClick={onClickLeftArrow}\r\n              style={{ position: \"absolute\", top: \"30%\", left: \"0%\", zIndex: 100, color:\"#3D3D3D\",cursor:\"pointer\" }}\r\n            />\r\n            <Brightness1RoundedIcon \r\n              style={{ position: \"absolute\", top: \"30%\", left: \"0%\", color:\"#B5B5B7\" }}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        <CardContent>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              marginBottom: \"3%\",\r\n              display: \"inline-block\",\r\n            }}\r\n          >\r\n            <FileCopyIcon\r\n              id=\"copyicon\"\r\n              onClick={duplicateClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                marginRight: \"17px\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n            <EditIcon\r\n              id=\"editicon\"\r\n              onClick={editClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n            <DeleteIcon\r\n              id=\"delicon\"\r\n              onClick={delClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                marginLeft: \"17px\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n          </div>\r\n          <Typography>\r\n            <span\r\n              style={{\r\n                fontWeight: 900,\r\n                fontSize: \"130%\",\r\n                marginBottom: \"4%\",\r\n              }}\r\n            >\r\n              {`${props.brand}`}\r\n            </span>\r\n          </Typography>\r\n\r\n          {/* <span style={{fontWeight :900, fontSize: \"100%\", marginBottom: 5}}>\r\n            참고할 부분\r\n          </span> */}\r\n          <Typography\r\n            sx={{ fontWeight: 900, marginBottom: \"2%\" }}\r\n            variant=\"subtitle2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            참고할 부분\r\n          </Typography>\r\n\r\n          <Typography\r\n            sx={{ marginBottom: \"1%\" }}\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n        <StyledCardAction>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"inline-block\",\r\n              marginBottom: \"5px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: \"20%\",\r\n                marginBottom: \"3%\",\r\n                verticalAlign: \"center\",\r\n                display: \"inline-block\",\r\n                float: \"left\",\r\n              }}\r\n            >\r\n              {like ? (\r\n                <FavoriteIcon\r\n                  onClick={onToggleLike}\r\n                  sx={{ cursor: \"pointer\", opacity: \"80%\", color: \"#FF3040\" }}\r\n                />\r\n              ) : (\r\n                <FavoriteBorderTwoToneIcon\r\n                  onClick={onToggleLike}\r\n                  sx={{ cursor: \"pointer\", opacity: \"40%\" }}\r\n                />\r\n              )}\r\n              <span\r\n                style={{\r\n                  position: \"relative\",\r\n                  top: \"-7px\",\r\n                  marginLeft: \"5px\",\r\n                  color: \"#A6A6A6\",\r\n                }}\r\n              >\r\n                {likeClick ? likeClick : 0}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n          {/* <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${parseInt(props.season) % 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`TagCategory Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div> */}\r\n          {props.hashtags.map((hashtag, index) => (\r\n            <div style={{ margin: \"2px\" }} key={index}>\r\n              <div\r\n                className={`Tag${hashtag.PostHashtag.HashtagId % 8} Tag`}\r\n                style={{ display: \"inline-block\", margin: \"2px\" }}\r\n                onClick={(e) => {\r\n                  TagClick(e, hashtag.name);\r\n                }}\r\n              >\r\n                <a href=\"\">#{hashtag.name}</a>\r\n              </div>{\" \"}\r\n              &nbsp;\r\n            </div>\r\n          ))}\r\n\r\n          <div style={{ width: \"100%\" }}>\r\n            <span\r\n              style={{\r\n                float: \"left\",\r\n                color: \"#A6A6A6\",\r\n                fontSize: \"80%\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              작성자 : {props.name}\r\n            </span>\r\n          </div>\r\n        </StyledCardAction>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Cardpost from \"./Cardpost\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { useInput } from \"@mui/base\";\r\nimport axios from \"axios\";\r\nimport Image from \"next/image\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\ntype ResponsiveGridProps = {\r\n  setIsUserpage:any\r\n};\r\n\r\nexport default function ResponsiveGrid({setIsUserpage}: ResponsiveGridProps) {\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n\r\n  useEffect(() => {\r\n  }, [postArray]);\r\n\r\n\r\n\r\n  //check if I like\r\n  return (\r\n    <>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Grid\r\n          container\r\n          spacing={{ xs: 2, md: 3 }}\r\n          columns={{ xs: 4, sm: 8, md: 12 }}\r\n        >\r\n          {postArray &&\r\n            (postArray as Array<any>).map((post, index) => (\r\n              <Grid item xs={6} sm={4} md={3} lg={4} key={post.id}>\r\n                <Item>\r\n                  <li\r\n                    style={{\r\n                      maxWidth: \"320px\",\r\n                      display: \"inline-block\",\r\n                      // marginRight: \"4%\",\r\n                      // marginLeft: \"1%\",\r\n                      // marginTop: \"1%\",-\r\n                    }}\r\n                  >\r\n                    <Cardpost\r\n                      setIsUserpage={setIsUserpage}\r\n                      index={index}\r\n                      name={post.name}\r\n                      // posts={postArray}\r\n                      id={post.id}\r\n                      likers={post.Likers}\r\n                      category={post.category}\r\n                      brand={post.brand}\r\n                      Images={post.Images}\r\n                      link={post.link}\r\n                      season={post.season}\r\n                      hashtags={post.Hashtags}\r\n                      reason={post.reason}\r\n                    />{\" \"}\r\n                  </li>\r\n                </Item>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect,useState, useRef } from \"react\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\ntype NoticeModalProps = {};\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function NoticeModal({}: NoticeModalProps) {\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const closeNoticeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    var now = new Date();\r\n    var date = now.getDate();\t// 일\r\n    if(date-31 ==0)\r\n      setIsModalOpen(true)\r\n  },[])\r\n  return (\r\n    <>\r\n      {isModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closeNoticeModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <h1 > 3.31 업데이트 안내 🐇</h1>\r\n            <p style={{marginTop:\"-20px\", marginBottom:\"20px\",color:\"#7F7F7F\"}}> *하루동안 떠요</p>\r\n            <h2 style={{marginBottom:\"10px\"}}> 기능 추가 목록 </h2>\r\n            <ol type=\"1\">\r\n              <li style={{marginBottom:\"10px\"}}> 이미지 복사 후 (클립보드 복사 or PrintScreen) </li>\r\n              <li style={{marginBottom:\"10px\"}}> 바탕화면에서 Ctrl + v 누르면 자동으로 이미지 등록 </li>\r\n              <li style={{marginBottom:\"10px\"}}> 업로드 화면에서도 마찬가지 </li>\r\n            </ol>\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closeNoticeModal}\r\n            >\r\n              확인\r\n            </Button>\r\n          </Box>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport {useEffect, useState, useRef, useCallback} from 'react';\r\nimport {\r\n  GET_USER_LIKED_POST_REQUEST,\r\n  GET_USER_POST_REQUEST, POST_SORT_REQUEST, TOGGLE_SCROLL_REQUEST,\r\n} from \"@/reducers/post\";\r\ntype UserPageProps = {};\r\n\r\nexport default function UserPage({}: UserPageProps) {\r\n  const {postArray} = useSelector((state: any) => state.post);\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const loadUserPost = useCallback(() => {\r\n    dispatch({\r\n      type: GET_USER_POST_REQUEST,\r\n      data: null,\r\n    });\r\n    setIsLiked(false);\r\n  }, []);\r\n\r\n  const likedSorting = useCallback(() => {\r\n    var sortedArray = [...postArray];\r\n    sortedArray.sort(function(a:any,b:any){\r\n      return  b.Likers.length- a.Likers.length \r\n    })\r\n    dispatch({\r\n      type: POST_SORT_REQUEST,\r\n      data: sortedArray,\r\n    });\r\n  }, [postArray, user]);\r\n  \r\n  const dateSorting = useCallback(() => {\r\n    var sortedArray = [...postArray];\r\n    sortedArray.sort(function(a:any,b:any){\r\n      return a.createdAt - b.createdAt\r\n    })\r\n    dispatch({\r\n      type: POST_SORT_REQUEST,\r\n      data: sortedArray,\r\n    });\r\n  }, [postArray, user]);\r\n\r\n\r\n  \r\n  const loadUserLikedPost = useCallback(() => {\r\n    setIsLiked(true);\r\n\r\n    dispatch({\r\n      type:GET_USER_LIKED_POST_REQUEST\r\n    })\r\n\r\n  }, [postArray, user]);\r\n\r\n  useEffect(()=>{\r\n\r\n    console.log(postArray)\r\n  },[postArray])\r\n\r\n  return (\r\n    <>\r\n    <Stack spacing={2} direction=\"row\">\r\n        <Button disabled style={{marginTop:\"-20px\", fontWeight: 900}}>{user.data.name}님의 페이지</Button>\r\n    </Stack>\r\n      <Stack spacing={2} direction=\"row\">\r\n        <Button variant=\"text\" style={{fontWeight: 900}} onClick={loadUserPost}> 작성한 게시물</Button>\r\n        <Button variant=\"text\" style={{fontWeight: 900}} onClick={loadUserLikedPost}> 좋아요 누른 게시물</Button>\r\n        <Button variant=\"outlined\" size=\"small\" style={{position:\"absolute\", right:\"18%\",fontWeight: 900}} onClick={dateSorting}> 최신 순</Button>\r\n        <Button variant=\"outlined\" size=\"small\" style={{position:\"absolute\", right:\"12%\", fontWeight: 900}}onClick={likedSorting}> 좋아요 순 </Button>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n","import Head from \"next/head\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios, { AxiosHeaders } from \"axios\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport { useSelector } from \"react-redux\";\nimport {\n  initialState as postinitialState,\n  LOAD_POST_REQUEST,\n  RELOAD_POST_REQUEST,\n  POST_SORT_REQUEST,\n} from \"@/reducers/post\";\nimport React, { useCallback, useState, useEffect, useMemo } from \"react\";\nimport { loadPost } from \"@/reducers/post\";\nimport { loadUser } from \"@/reducers/user\";\nimport { useDispatch } from \"react-redux\";\nimport wrapper from \"@/store/configureStore\";\nimport { END } from \"redux-saga\";\nimport userpage from \"./userpage\";\nimport NoticeModal from \"@/Components/NoticeModal\";\nimport UserPage from \"@/Components/UserPage\";\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie: any = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch(loadPost());\n    context.store.dispatch(loadUser());\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default function Home() {\n  // const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  const { user } = useSelector((state: any) => state.user);\n  const { loadPostLoading } = useSelector((state: any) => state.post);\n  const { onInfiniteScroll } = useSelector((state: any) => state.post);\n  const { hasMorePost } = useSelector((state: any) => state.post);\n  const { postArray } = useSelector((state: any) => state.post);\n  const dispatch = useDispatch();\n  const [isUserpage, setIsUserpage] = useState(false);\n\n  useEffect(() => {\n    function onScroll() {\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 350\n      ) {\n        if (hasMorePost && !loadPostLoading && onInfiniteScroll) {\n          const lastId = postArray[postArray.length - 1].id;\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data: lastId,\n          });\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePost, loadPostLoading, dispatch, postArray, onInfiniteScroll]);\n\n  const loadPosts = useCallback(() => {\n    dispatch({\n      type: RELOAD_POST_REQUEST,\n    });\n    dispatch(loadPost());\n    setIsUserpage(false);\n  }, [dispatch]);\n\n  \n  const filterTodayPost = useCallback(() => {\n    \n    var sortedArray = [...postArray];\n    const d = new Date();\n    sortedArray = sortedArray.filter((post) => parseInt(post.createdAt.split(\"-\")[2].substring(0,2), 10) - d.getDate() == 0)\n    dispatch({\n      type: POST_SORT_REQUEST,\n      data: sortedArray,\n    });\n\n  }, [dispatch]);\n\n\n  const onReady = () => {\n    alert(\"준비중!\")\n  };\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n\n      <NoticeModal />\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPosts}>\n          <h1 id=\"title\" style={{ cursor: \"pointer\" }}>\n            CRUMP REFERENCE\n          </h1>\n        </a>\n        <div style={{ marginBottom: \"40px\" }}>\n          <Navbar setIsUserpage={setIsUserpage} />\n        </div>\n        <div style={{ marginBottom: \"10px\" }}>\n          {isUserpage && <UserPage />}\n        </div>\n        { !isUserpage &&\n        <Stack spacing={2} direction=\"row\" sx={{marginBottom:\"42px\", marginTop :\"-20px\"}}>\n          {/* <Button\n            variant=\"outlined\"\n            size=\"small\"\n            style={{ position: \"absolute\", left: \"11%\", fontWeight: 900 }}\n            onClick={loadPost}\n          >\n            {\" \"}\n            최신 순\n          </Button> */}\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            style={{ position: \"absolute\", left: \"11%\", fontWeight: 900 }}\n            onClick={filterTodayPost}\n          >\n            {\" \"}\n            오늘의 게시물\n          </Button>\n          {/* <Button\n            variant=\"outlined\"\n            size=\"small\"\n            style={{ position: \"absolute\", left: \"17%\", fontWeight: 900 }}\n            onClick={onReady}\n          >\n            {\" \"}\n            좋아요 순{\" \"}\n          </Button> */}\n        </Stack>\n        }\n        \n        <ResponsiveGrid setIsUserpage={setIsUserpage} />\n        {/* <div>\n          <Stack spacing={2} sx={{alignItems:\"center\", marginTop:\"30px\", marginBottom:\"50px\"}}>\n            <Pagination page={page} count={count} color=\"primary\" onChange={handleChange}/>\n          </Stack>\n        </div> */}\n        {loadPostLoading && (\n          <div id=\"bottomloading\">\n            <span style={{ fontSize: \"240%\" }}> 로딩중...</span>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  "],"names":["hooks_useInput","initValue","_useState","useState","value","setter","useCallback","e","target","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Signup","_ref","setIsModalOpen","dispatch","useDispatch","isInitialOpen","setIsInitialOpen","_useInput","useInput","_useInput2","slicedToArray","Z","email","onChangeEmail","signUpLoading","_useSelector","useSelector","state","user","signUpDone","_useSelector2","signUpError","_useSelector3","_useState2","emailError","setEmailError","_useInput3","_useInput4","name","onChangeName","_useInput5","_useInput6","password","onChangePassword","_useInput7","_useInput8","passwordCheck","setPasswordCheck","_useState3","passwordError","setPasswordError","_useState4","nameError","setNameError","onSubmit","preventDefault","test","replace","signupRequestAction","useEffect","console","log","type","TOGGLE_SIGNUP_DONE","jsx_runtime","jsx","Modal","open","onClose","children","jsxs","Box","component","noValidate","autoComplete","sx","Typography","variant","textAlign","TextField","label","marginTop","fullWidth","required","onChange","color","LoadingButton","mt","mb","size","loading","modalstyle","Upload","props","postArray","post","hashtags","isEdit","_useSelector4","editPostWithImagesDone","_useSelector5","addPostError","_useSelector6","editPostError","fileInput","useRef","isImage","setIsImage","highlight","setHighlight","userName","setUserName","reason","onChangeReason","setReason","brand","onChangeBrand","setBrand","link","onChangeLink","setLink","_React$useState","React","_React$useState2","showHashModalOpen","setShowHashModalOpen","addPostLoading","_useSelector8","addPostDone","_useSelector9","editPostDone","_useSelector10","_useState5","title","desc","photos","setPost","_useState6","imageFile","setImageFile","closeModal","setuploadModalOpen","setUploadModalClicked","TOGGLE_ISEDIT_REQUEST","data","closehashtagsModal","_React$useState3","_React$useState4","category","setCategory","_React$useState5","_React$useState6","season","setSeason","text","onChangeText","setText","_useState7","setCardPost","_useState8","setPrevBrandName","handlefilechange","handfiles","files","photosArr","fileArr","undefined","i","length","_loop","file","push","reader","FileReader","readAsDataURL","addEventListener","fileobj","src","result","_objectSpread","concat","addIconClick","current","click","handeldelete","parentElement","index","Array","from","indexOf","toConsumableArray","slice","uploadModalClicked","clipboardFile","uploadModalOpen","handlePaste","event","clipboardData","window","removeEventListener","handlehighlight","stopPropagation","handleunhighlight","handledrop","dt","dataTransfer","_React$useState7","_React$useState8","getHashtags","GET_HASHTAGS_REQUEST","alert","_props$postId","formData","FormData","shift","forEach","call","f","append","postId","toString","replaceAll","EDIT_POST_REQUEST","id","addPost","TOGGLE_ADD_POST_DONE_REQUEST","TOGGLE_EDIT_POST_DONE_REQUEST","setImageIndex","targetPost","find","postHashtags","Hashtags","_targetPost$Hashtags$","hashname","toUpperCase","Images","addDrop","Fragment","className","height","overflow","map","hashtag","listStyle","Button","onClick","Close","cursor","right","FormControl","marginRight","InputLabel","Select","labelId","defaultValue","MenuItem","whiteSpace","fontWeight","display","onDragEnter","onDragOver","onDragLeave","onDrop","placeholder","multiple","htmlFor","item","alt","Add","marginLeft","visibility","ref","LoginForm","setloginModalOpen","loginModalOpen","logInDone","logInLoading","logInError","onSubmitForm","loginRequestAction","TOGGLE_LOGIN_DONE","Searchbar","setIsUserpage","onChangeValue","setValue","searchBar","focus","TagSearch","loadPost","split","upperCaseValue","HASHTAG_SEARCH_REQUEST","flex","IconButton","xs","md","Search","fill","inputRef","Navbar","logOutLoading","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","_React$useState9","_React$useState10","isModalOpen","_React$useState11","_React$useState12","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","Logout","logoutRequestAction","uploadClick","profileClick","GET_USER_POST_REQUEST","TOGGLE_SCROLL_REQUEST","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","flexGrow","marginBottom","AppBar","backgroundColor","Toolbar","noWrap","sm","edge","AccountCircle","currentTarget","MoreVert","StyledCardAction","styled","CardActions","_templateObject","taggedTemplateLiteral","Cardpost","_props$likers","like","setLike","likers","likeClick","setLikeClick","setIsLoginFormOpen","isUploadFormOpen","setIsUploadFormOpen","imageIndex","modalOpen","setModalOpen","ImagePath","setImagePath","onToggleLike","prev","UNLIKE_POST_REQUEST","LIKE_POST_REQUEST","delClick","duplicateClick","DUPLICATE_POST_REQUEST","DELETE_POST_REQUEST","onClickRightArrow","onClickLeftArrow","TagClick","scrollTo","behavior","v","Card","maxWidth","CardActionArea","href","CardMedia","image","ArrowRight","zIndex","Brightness1Rounded","ArrowLeft","CardContent","FileCopy","opacity","Edit","Delete","fontSize","verticalAlign","Favorite","FavoriteBorderTwoTone","margin","PostHashtag","HashtagId","Item","Paper","theme","ResponsiveGrid_objectSpread","palette","mode","typography","body2","padding","spacing","secondary","ResponsiveGrid","_ref2","Grid","ZP","container","columns","lg","Likers","NoticeModal","objectDestructuringEmpty","closeNoticeModal","now","Date","getDate","UserPage","setIsLiked","loadUserPost","likedSorting","sortedArray","sort","a","b","POST_SORT_REQUEST","dateSorting","createdAt","loadUserLikedPost","GET_USER_LIKED_POST_REQUEST","Stack","direction","disabled","Home","loadPostLoading","onInfiniteScroll","hasMorePost","isUserpage","onScroll","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","LOAD_POST_REQUEST","loadPosts","RELOAD_POST_REQUEST","filterTodayPost","d","filter","parseInt","substring","head_default","content","__NEXT_P","__webpack_require__"],"sourceRoot":""}