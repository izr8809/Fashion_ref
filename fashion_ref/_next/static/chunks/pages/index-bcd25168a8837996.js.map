{"version":3,"file":"static/chunks/pages/index-bcd25168a8837996.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./hooks/useInput.ts","webpack://_N_E/./Components/signup.tsx","webpack://_N_E/./Components/upload.tsx","webpack://_N_E/./Components/LoginForm.tsx","webpack://_N_E/./Components/Navbar.tsx","webpack://_N_E/./Components/AlignItemsList.tsx","webpack://_N_E/./Components/ResponsiveGrid.tsx","webpack://_N_E/./pages/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { color } from \"@mui/system\";\r\n\r\ntype SignupProps = {\r\n  setModalOpen: any;\r\n  setIsLoggedIn: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({\r\n  setIsLoggedIn,\r\n  setModalOpen,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: SignupProps): ReactElement {\r\n  const API = `${process.env.NEXT_PUBLIC_API}/signups`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password, setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email: any) => {\r\n    let res = false;\r\n\r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n\r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (password !== passwordCheck) {\r\n        setPasswordError(true);\r\n      } else if (!checkEmail(email)) {\r\n        setEmailError(true);\r\n      } else {\r\n        axios\r\n          .post(\r\n            API,\r\n            // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n            // 회원가입창에서 클라이언트가 입력하는 데이터\r\n            {\r\n              email: email,\r\n              name: nickname,\r\n              password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          // 그러면 서버에서 클라이언트로 response(응답)으로\r\n          // {ok: true} 아니면 {ok: false}가 온다.\r\n          // .then((response) => {\r\n          //   console.log(response); // response.data로 해야?\r\n          // })\r\n          .then((result) => {\r\n            setIsLoggedIn(true);\r\n            setUserId(result.data.userId);\r\n            setUserName(result.data.userName);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.data.message == \"already exist\") {\r\n              alert(\"이미 존재하는 이메일입니다.\");\r\n            } else {\r\n              alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n            }\r\n          });\r\n      }\r\n      // if (!term) {\r\n      //   return setTermError(true);\r\n      // }\r\n    },\r\n    [email, password, passwordCheck, setIsLoggedIn, nickname]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\" sx={{ textAlign: \"center\" }}>\r\n          회원가입\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          // error={checkEmail(email)}\r\n          onChange={onChangeEmail}\r\n        />\r\n        {emailError && (\r\n          <span style={{ color: \"red\" }}>Email 형식이 잘못되었습니다</span>\r\n        )}\r\n        <TextField\r\n          label=\"이름\"\r\n          name=\"user-nick\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          onChange={onChangeNickname}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          fullWidth\r\n          name=\"user-password\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={password}\r\n          required\r\n          onChange={onChangePassword}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호체크\"\r\n          fullWidth\r\n          name=\"user-password-check\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={passwordCheck}\r\n          required\r\n          onChange={setPasswordCheck}\r\n        />\r\n        {passwordError && (\r\n          <span style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다</span>\r\n        )}\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    // {/* <div className={\"container\"} ref={modalRef}>\r\n    //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n    //       <br />\r\n    //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n    //     </TextField>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-nick\">닉네임</label>\r\n    //       <br />\r\n    //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password\">비밀번호</label>\r\n    //       <br />\r\n    //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n    //       <br />\r\n    //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n    //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n    //     </div>\r\n    //     {/* <div>\r\n    //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n    //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n    //     </div> */}\r\n    //     <div style={{ marginTop: 10 }}>\r\n    //       <button>가입하기</button>\r\n    //     </div>\r\n    //     <button className={\"close\"} onClick={closeModal}>\r\n    //         X\r\n    //     </button>\r\n    //   </div> */}\r\n    // }\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nimport Router from \"next/router\";\r\n\r\n\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\ntype UploadProps = {\r\n  setuploadModalOpen: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload(props: UploadProps) {\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  const button = useRef();\r\n  // const handleChange = (file: any) => {\r\n  //   setFile(file);\r\n  //   console.log(file);\r\n  // };\r\n  const API = `${process.env.NEXT_PUBLIC_API}/uploads`;\r\n  const [imageFile, setImageFile] = useState<File>();\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [reason, onChangeReason] = useInput(\"\");\r\n  const [brand, onChangeBrand] = useInput(\"\");\r\n  const [link, onChangeLink] = useInput(\"\");\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const closeModal = () => {\r\n    props.setuploadModalOpen(false);\r\n  };\r\n  const { title, desc, photos } = post;\r\n  // const handlechange = e =>{\r\n  //   setPost({\r\n  //     ...post,\r\n  //     [e.target.name]: e.target.value;\r\n  //   })\r\n  // }\r\n\r\n  const inputRef = useRef(null);\r\n  const [category, setCategory] = React.useState(\"상의\");\r\n  const [season, setSeason] = React.useState(\"23SS\");\r\n\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = (files: FileList | null) => {\r\n    let photosArr: any[] = [];\r\n    if (files != undefined) {\r\n      if (files.length > 1) {\r\n        alert(\"이미지는 1개만 넣어주세요\");\r\n      } else {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          setImageFile(files[i]);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              photos: [...photos, ...photosArr],\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handeldelete = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    let target = (e.target as HTMLSpanElement).parentElement;\r\n    let targetindex = 1;\r\n    setPost({\r\n      ...post,\r\n      photos: [\r\n        ...photos.slice(0, targetindex),\r\n        ...photos.slice(targetindex + 1),\r\n      ],\r\n    });\r\n    setIsImage(false);\r\n  };\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(false);\r\n  }, []);\r\n  const handledrop = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let dt = e.dataTransfer;\r\n    let files = dt?.files;\r\n    setHighlight(false);\r\n    handfiles(files);\r\n  };\r\n\r\n  const uploadClick = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const USERINFOAPI = `${process.env.NEXT_PUBLIC_API}/USERINFO`;\r\n  const [userInfo, setUserInfo] = useState({ name: \"\" });\r\n\r\n  useEffect(() => {\r\n    console.log(props.userId)\r\n    console.log(props.userName)\r\n    axios\r\n      .get(USERINFOAPI, {})\r\n      .then((result) => {\r\n        setUserInfo(result.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [props.userId]);\r\n\r\n  const onSubmit = \r\n    (e: any) => {\r\n      console.log(\"!\");\r\n      if (brand == \"\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"브랜드입력 필수\");\r\n      } else if (imageFile == undefined) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"이미지 필수\");\r\n      } else {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        console.log(\"submit\");\r\n        console.log(props.userId);\r\n        console.log(props.userName);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"image\", imageFile as File);\r\n        formData.append(\"userId\", props.userId);\r\n        formData.append(\"userName\", props.userName);\r\n        formData.append(\"brand\", brand);\r\n        formData.append(\"link\", link);\r\n        formData.append(\"category\", category);\r\n        formData.append(\"season\", season);\r\n        formData.append(\"hashtag\", text);\r\n        formData.append(\"reason\", reason);\r\n        // alert(formData)\r\n\r\n        axios\r\n          .post(API, formData)\r\n          .then((result) => {\r\n            console.log(result)\r\n            location.reload();\r\n            // const ele = document.getElementById('submit_bt');\r\n            // ele?.click();\r\n            \r\n          })\r\n          .catch((err) => {\r\n            console.log(err)\r\n            location.reload();\r\n          });\r\n      }\r\n      //   axios\r\n      //     .post(\r\n      //       API,\r\n      //       // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n      //       // 회원가입창에서 클라이언트가 입력하는 데이터\r\n      //       {\r\n      //         nickname: nickname,\r\n      //         brand: brand,\r\n      //         link: link, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n      //         image : (imageFile as File).name\r\n      //       },\r\n      //       {\r\n      //         headers: {\r\n      //           \"Content-Type\": \"application/json\",\r\n      //           // 'Accept': 'application/json',\r\n      //         },\r\n      //       }\r\n      //     )\r\n      //     // 그러면 서버에서 클라이언트로 response(응답)으로\r\n      //     // {ok: true} 아니면 {ok: false}가 온다.\r\n      //     // .then((response) => {\r\n      //     //   console.log(response); // response.data로 해야?\r\n      //     // })\r\n      //     .then((result) => {\r\n      //       console.log(result);\r\n      //       // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n      //       // history.replace('/login');\r\n      //     })\r\n      //     .catch((error) => {\r\n      //       alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n      //       console.log(error);\r\n      //     });\r\n    };\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography sx={{ textAlign: \"center\" }} component=\"h1\" variant=\"h5\">\r\n          업로드\r\n        </Typography>\r\n        {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n        <TextField\r\n          required\r\n          label=\"브랜드\"\r\n          fullWidth\r\n          sx={{ marginTop: \"5px\" }}\r\n          name=\"user-brand\"\r\n          type=\"text\"\r\n          value={brand}\r\n          variant=\"standard\"\r\n          onChange={onChangeBrand}\r\n        />\r\n        <TextField\r\n          label=\"Link\"\r\n          fullWidth\r\n          sx={{ marginTop: \"5px\" }}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={link}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeLink}\r\n        />\r\n\r\n        <TextField\r\n          label=\"선정이유\"\r\n          fullWidth\r\n          sx={{ marginTop: \"5px\" }}\r\n          name=\"user-link\"\r\n          type=\"text\"\r\n          value={reason}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeReason}\r\n        />\r\n\r\n        <FormControl\r\n          sx={{ width: \"40%\", marginRight: \"10%\", marginTop: \"25px\" }}\r\n        >\r\n          <InputLabel id=\"demo-simple-select-label\">상의</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            defaultValue={\"상의\"}\r\n            value={category}\r\n            label=\"카테고리\"\r\n            required\r\n            onChange={handleCategoryChange}\r\n          >\r\n            <MenuItem value={\"상의\"}>상의</MenuItem>\r\n            <MenuItem value={\"하의\"}>하의</MenuItem>\r\n            <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n            <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n            <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n            <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl sx={{ width: \"40%\", marginTop: \"25px\" }}>\r\n          <InputLabel id=\"demo-simple-select-label\">23SS</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            defaultValue={\"23SS\"}\r\n            value={season}\r\n            label=\"시즌\"\r\n            required\r\n            onChange={handleSeasonChange}\r\n          >\r\n            <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n            <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          sx={{ marginTop: \"30px\" }}\r\n          value={text}\r\n          onChange={onChangeText}\r\n          fullWidth\r\n          label=\"해시태그입력 #검정 #반팔 \"\r\n          variant=\"outlined\"\r\n        />\r\n\r\n        {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n        <div className=\"file-upload\" style={{ marginTop: \"6px\" }}>\r\n          <div className=\"custom-form-group\">\r\n            {!isImage && (\r\n              <div\r\n                className={\r\n                  highlight\r\n                    ? \"custom-file-drop-area highlight\"\r\n                    : \"custom-file-drop-area\"\r\n                }\r\n                onDragEnter={handlehighlight}\r\n                onDragOver={handlehighlight}\r\n                onDragLeave={handleunhighlight}\r\n                onDrop={handledrop}\r\n              >\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"photos\"\r\n                  placeholder=\"Enter photos\"\r\n                  multiple={false}\r\n                  id=\"filephotos\"\r\n                  onChange={handlefilechange}\r\n                />\r\n                <label htmlFor=\"filephotos\">Drag & Drop</label>\r\n              </div>\r\n            )}\r\n            <div className=\"custom-file-preview\">\r\n              {photos.length > 0 &&\r\n                photos.map((item: any, index) =>\r\n                  index != 0 ? (\r\n                    <div className=\"prev-img\" key={index}>\r\n                      <span onClick={handeldelete}>&times;</span>\r\n                      {item && <Image src={item.src} alt={item.name} />}\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button id=\"submit_bt\" style={{display: \"none\"}} type=\"submit\">\r\n\r\n        </button>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  setIsLoggedIn: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function LoginForm({\r\n  setIsLoggedIn,\r\n  setloginModalOpen,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: LoginFormProps): ReactElement {\r\n  const API = `${process.env.NEXT_PUBLIC_API}/login`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [User, setUser] = useState({\r\n    id: 0,\r\n    name: null,\r\n  });\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback(\r\n    (event: any) => {\r\n      event.preventDefault();\r\n      if(email == \"\"){\r\n        alert(\"이메일을 입력해주세요\")\r\n      }\r\n      else if(password == \"\"){\r\n        alert(\"비밀번호를 입력해주세요\")\r\n      }\r\n      else{\r\n        axios\r\n        .post(\r\n          API,\r\n          // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n          // 회원가입창에서 클라이언트가 입력하는 데이터\r\n          {\r\n            email: email,\r\n            password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // 'Accept': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        .then((result) => {\r\n          setUser(result.data.data);\r\n          setIsLoggedIn(true);\r\n          setUserId(result.data.data.id);\r\n          setUserName(result.data.data.name);\r\n          console.log(result.data.data)\r\n          // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n          // history.replace('/login');\r\n        })\r\n        .catch((error) => {\r\n          alert(\"로그인 정보가 일치하지 않습니다.\");\r\n          console.log(error);\r\n        });\r\n      }\r\n      \r\n    },\r\n    [email, password, setIsLoggedIn]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          로그인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement, useRef } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\n// import { useNavigate  } from 'react-router-dom'; // 설치한 패키지\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/signup\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Upload from \"@/Components/upload\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\nconst inter = Inter({ subsets: [\"latin\"] });\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(\"#F8F8F8\", 0.73),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(\"#F8F8F8\", 0.33),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n    height: \"40%\",\r\n  },\r\n}));\r\n\r\ntype NavbarProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\n\r\nexport default function Navbar({\r\n  isLoggedIn,\r\n  setIsLoggedIn,\r\n  setPost,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName\r\n}: NavbarProps): ReactElement {\r\n  // const navigate = useNavigate();\r\n  const HASHAPI = `${process.env.NEXT_PUBLIC_API}/hashtagsearch`;\r\n  const GETHASHAPI = `${process.env.NEXT_PUBLIC_API}/getHash`;\r\n  const API = `${process.env.NEXT_PUBLIC_API}/loadpost`;\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [season, setSeason] = React.useState(\"\");\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  \r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchBar.current) {\r\n      searchBar.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  const showModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const showUploadModal = () => {\r\n    setuploadModalOpen(true);\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    const LOGOUTAPI = `${process.env.NEXT_PUBLIC_API}/logout`;\r\n    axios\r\n      .get(LOGOUTAPI)\r\n      .then((result) => {\r\n        if (result.data.message == \"ok\") setIsLoggedIn(false);\r\n        setloginModalOpen(false);\r\n      })\r\n      .catch((err) => {alert(\"서버와 연결 끊겼네요. 새로고침.!\")});\r\n  }, [setIsLoggedIn]);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (isLoggedIn) {\r\n      setuploadModalOpen(true);\r\n    } else {\r\n      setloginModalOpen(true);\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onReady = useCallback(()=>{alert(\"준비중입니다.\")},[])\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      // e.preventDeafult();\r\n      // e.stopPropagation();\r\n      if (value == \"\") {\r\n        axios\r\n          .get(API)\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n          });\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        let upperCaseValue = value.toUpperCase();\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        axios\r\n          .post(\r\n            HASHAPI,\r\n            {\r\n              hashtags: upperCaseValue,\r\n              category: category,\r\n              season: season,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          .then((result) => {\r\n            setPost(result.data);\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n            console.log(error);\r\n          });\r\n      }\r\n    },\r\n    [value, setPost, category, season]\r\n  );\r\n\r\n  const getHashtags = useCallback(()=>{\r\n    axios\r\n    .get(GETHASHAPI)\r\n    .then((result) => {\r\n      console.log(result)\r\n      // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n      // history.replace('/login');\r\n    })\r\n    .catch((error) => {\r\n      alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n    });\r\n  },[])\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <p>만드는 중입니다</p>\r\n      </MenuItem>\r\n      {/* <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>프로필</p>\r\n      </MenuItem> */}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {!isLoggedIn && modalOpen && (\r\n        <Signup setIsLoggedIn={setIsLoggedIn} setModalOpen={setModalOpen} \r\n        userId = {userId}\r\n        setUserId = {setUserId}\r\n        userName= {userName}\r\n        setUserName = {setUserName}/>\r\n      )}\r\n      {isLoggedIn && uploadModalOpen && (\r\n        <Upload setuploadModalOpen={setuploadModalOpen} \r\n        userId = {userId}\r\n        setUserId = {setUserId}\r\n        userName= {userName}\r\n        setUserName = {setUserName}/>\r\n      )}\r\n      {!isLoggedIn && loginModalOpen && (\r\n        <LoginForm\r\n          setIsLoggedIn={setIsLoggedIn}\r\n          setloginModalOpen={setloginModalOpen}\r\n          userId = {userId}\r\n          setUserId = {setUserId}\r\n          userName= {userName}\r\n          setUserName = {setUserName}\r\n        />\r\n      )}\r\n      \r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          {/* <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            태그모음\r\n          </Button> */}\r\n          {/* <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n            onClick={reloadPost}\r\n          >\r\n            <HomeIcon color=\"disabled\" />\r\n          </IconButton> */}\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            {/* <p>검색할 태그</p> */}\r\n          </Typography>\r\n          {/* <Search>\r\n            <StyledInputBase\r\n              onChange={(event) => {\r\n                setValue(event.target.value);\r\n              }}\r\n              placeholder=\"태그 입력\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyPress={(event) => {\r\n                if (event.which == 32) alert(value);\r\n              }}\r\n            />\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n          </Search> */}\r\n          {/* <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">\r\n              카테고리\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              required\r\n              value={category}\r\n              label=\"category\"\r\n              onChange={onChangeCategory}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"standard\"\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n              marginBottom: \"1%\",\r\n              marginRight: \"25px\",\r\n              marginTop: \"-5px\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-standard-label\">시즌</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"demo-simple-select-standard\"\r\n              sx={{ display: \"inline-block\" }}\r\n              value={season}\r\n              label=\"season\"\r\n              required\r\n              onChange={onChangeSeason}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl> */}\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n          <form\r\n            onSubmit={TagSearch}\r\n            style={{ width: \"70%\", flex: \"auto\", marginLeft: \"15%\" }}\r\n          >\r\n            <IconButton\r\n              type=\"submit\"\r\n              aria-label=\"search\"\r\n              sx={{ display: { xs: \"none\", md: \"inline-block\" } }}\r\n            >\r\n              <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n            </IconButton>\r\n            <TextField\r\n              id=\"search-bar\"\r\n              className=\"text\"\r\n              sx={{ display: \"inline-block\", width: \"80%\" }}\r\n              value={value}\r\n              onChange={onChangeValue}\r\n              label=\"#상의 #검정\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Search...\"\r\n              size=\"small\"\r\n              inputRef={searchBar}\r\n            />\r\n          </form>\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={0} color=\"error\"></Badge>\r\n            </IconButton> */}\r\n            <>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                sx={{ marginRight: \"10px\" }}\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"false\"\r\n                color=\"primary\"\r\n                onClick={uploadClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </>\r\n            {!isLoggedIn ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"100%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                    whiteSpace: \"nowrap\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={Logout}\r\n                >\r\n                  로그아웃\r\n                </Button>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                  onClick={onReady}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" }, float: \"right\" }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\ntype AlignItemsListProps = {\r\n  category: string;\r\n  brand: string;\r\n  link: string;\r\n  src: string;\r\n  season: string;\r\n  reason: string;\r\n  hashtags: any[];\r\n  id: number;\r\n  setPost: any;\r\n  posts: any[];\r\n  index: number;\r\n  name: string;\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nconst category = {\r\n  상의: 1,\r\n  하의: 2,\r\n  아우터: 3,\r\n  디테일: 4,\r\n  이미지: 5,\r\n  악세사리: 6,\r\n};\r\n\r\nconst season = {\r\n  \"23SS\": 7,\r\n  \"23FW\": 8,\r\n};\r\nexport default function AlignItemsList(props: AlignItemsListProps) {\r\n  const [category, setCategory] = useState(\"\");\r\n  const [season, setSeason] = useState(\"\");\r\n\r\n  const HASHAPI = `${process.env.NEXT_PUBLIC_API}/hashtagsearch`;\r\n  const DELAPI = `${process.env.NEXT_PUBLIC_API}/deletpost/${props.id}`;\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  \r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n  const delClick = useCallback(() => {\r\n    setModalOpen(true)\r\n    // if (props.isLoggedIn) {\r\n    //   axios\r\n    //     .post(DELAPI, {})\r\n    //     .then((result) => {\r\n    //       const Posts = props.posts.filter((post) => post.id !== props.id);\r\n    //       props.setPost(Posts);\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.log(err);\r\n    //     });\r\n    // } else {\r\n    //   //로그인 모달 띄우기\r\n    //   alert(\"로그인 해주세요\");\r\n    // }\r\n  }, [DELAPI, props]);\r\n\r\n\r\n  const onSubmit = useCallback((e:any)=>{\r\n    // e.preventDefault();\r\n    if (props.isLoggedIn) {\r\n      axios\r\n        .post(DELAPI, {})\r\n        .then((result) => {\r\n          const Posts = props.posts.filter((post) => post.id !== props.id);\r\n          props.setPost(Posts);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      //로그인 모달 띄우기\r\n      alert(\"로그인 해주세요\");\r\n    }\r\n  },[props.isLoggedIn, props.posts])\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const editClick = useCallback(() => {\r\n    alert(\"만드는 중입니다..\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCategory(props.category);\r\n    setSeason(\"23SS\");\r\n  }, [props.category]);\r\n\r\n  const TagClick = React.useCallback((e: any, hashname: string) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    axios\r\n      .post(\r\n        HASHAPI,\r\n        {\r\n          hashtags: \"#\" + hashname,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            // 'Accept': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then((result) => {\r\n        props.setPost(result.data);\r\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        // history.replace('/login');\r\n      })\r\n      .catch((error) => {\r\n        alert(\"해시태그 포함된 포스팅이 없습니다.\");\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    { modalOpen && \r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h2\" variant=\"h5\" sx={{ textAlign: \"center\" }}>\r\n          정말 삭제하시겠습니까?\r\n        </Typography>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2, width:\"40%\", marginLeft:\"5%\", marginRight:\"10%\" }}\r\n          size=\"large\"\r\n        >\r\n          삭제\r\n        </Button>\r\n        \r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2, width:\"40%\" }}\r\n          size=\"large\"\r\n          onClick={closeModal}\r\n        >\r\n          취소\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    }\r\n    <Card\r\n      sx={{\r\n        maxWidth: \"15\",\r\n        marginTop: \"20px\",\r\n        // borderRadius: \"24px\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <CardActionArea href={`${props.link}`} target=\"_blank\">\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"400\"\r\n          image={`../${props.src}` || \"\"}\r\n          alt=\"green iguana\"\r\n        />\r\n        <CardContent>\r\n          <Typography>\r\n            <span\r\n              style={{ fontWeight: 900, fontSize: \"130%\", marginBottom: \"4%\" }}\r\n            >\r\n              {props.name[0]}_{`${props.brand}`}\r\n            </span>\r\n          </Typography>\r\n\r\n          {/* <span style={{fontWeight :900, fontSize: \"100%\", marginBottom: 5}}>\r\n            참고할 부분\r\n          </span> */}\r\n          <Typography\r\n            sx={{ fontWeight: 900, marginBottom: \"1%\" }}\r\n            variant=\"subtitle2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            참고할 부분\r\n          </Typography>\r\n\r\n          <Typography\r\n            sx={{ marginBottom: \"1%\" }}\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <div style={{ width: \"100%\", marginBottom: \"3%\" }}>\r\n          <EditIcon id=\"editicon\" onClick={editClick} />\r\n          <DeleteIcon id=\"delicon\" onClick={delClick} />\r\n        </div>\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n        {/* <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${parseInt(props.season) % 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`TagCategory Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div> */}\r\n        {props.hashtags.map((hashtag, index) => (\r\n          <div style={{ margin: \"2px\" }} key={index}>\r\n            <div\r\n              className={`Tag${\r\n                parseInt(hashtag.PostHashtag.HashtagId) % 8\r\n              } Tag`}\r\n              style={{ display: \"inline-block\", margin: \"2px\" }}\r\n              onClick={(e) => {\r\n                TagClick(e, hashtag.name);\r\n              }}\r\n            >\r\n              <a href=\"\">#{hashtag.name}</a>\r\n            </div>{\" \"}\r\n            &nbsp;\r\n          </div>\r\n        ))}\r\n      </CardActions>\r\n    </Card>\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { useCallback, useEffect,useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport AlignItemsList from \"./AlignItemsList\";\r\nimport Grid from '@mui/material/Grid';\r\nimport { useInput } from '@mui/base';\r\nimport axios from 'axios';\r\nimport Image from \"next/image\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\ntype ResponsiveGridProps = {\r\n  setIsLoggedIn: any;\r\n  isLoggedIn: boolean;\r\n  setPost: any;\r\n  posts : any[];\r\n};\r\n\r\nexport default function ResponsiveGrid({ setIsLoggedIn, isLoggedIn, setPost, posts }: ResponsiveGridProps) {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n        {posts.map((post, index) => (\r\n          <Grid item xs={6} sm={4} md={3} lg ={4} key={index}>\r\n            <Item>\r\n            <li\r\n              style={{\r\n                maxWidth: \"320px\",\r\n                display: \"inline-block\",\r\n                // marginRight: \"4%\",\r\n                // marginLeft: \"1%\",\r\n                // marginTop: \"1%\",-\r\n              }}\r\n            >\r\n            <AlignItemsList isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} name={post.name} index={index} setPost={setPost} posts={posts} id={post.id} category={post.category} brand={post.brand} src={post.Images[0].src}link={post.link} season={post.season} hashtags ={post.Hashtags} reason ={post.reason}/> </li>\r\n            </Item>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios from \"axios\";\nimport React, { useCallback, useState, useEffect,useMemo  } from \"react\";\nimport Link from \"next/link\";\n// const inter = Inter({ subsets: [\"latin\"] });\n\nexport default function Home() {\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [posts, setPost] = useState<any[]>([]);\n  const [userId, setUserId] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n\n  const LOADAPI = `${process.env.NEXT_PUBLIC_API}/loadpost`;\n\n  const loadPost = useCallback(() => {\n    axios\n      .get(LOADAPI)\n      .then((result) => {\n        setPost(result.data);\n        // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\n        // history.replace('/login');\n      })\n      .catch((error) => {\n        alert(\"로딩이 정상적으로 되지 않았습니다.\");\n        setPost([]);\n        console.log(error);\n      });\n  }, [setPost]);\n\n  useEffect(() => {\n    loadPost();\n  }, [loadPost]);\n\n  const LOGINCHECKAPI = `${process.env.NEXT_PUBLIC_API}/logincheck`;\n  useEffect(() => {\n    axios\n      .get(LOGINCHECKAPI)\n      .then((result) => {\n        if (result.data.login) {\n          setIsLoggedIn(true);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPost}>\n          <h1 id=\"title\">CRUMP REFERENCE</h1>\n        </a>\n        <div style={{ marginBottom: \"40px\" }}>\n          <Navbar\n            isLoggedIn={isLoggedIn}\n            setIsLoggedIn={setIsLoggedIn}\n            setPost={setPost}\n            userId = {userId}\n            setUserId = {setUserId}\n            userName= {userName}\n            setUserName = {setUserName}\n\n          />\n          {/* <LoginForm /> */}\n          {/* <SignupForm /> */}\n        </div>\n        <ResponsiveGrid\n          isLoggedIn={isLoggedIn}\n          setIsLoggedIn={setIsLoggedIn}\n          setPost={setPost}\n          posts={posts}\n        />\n      </div>\n    </>\n  );\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","useInput","value","setter","useState","initValue","handler","useCallback","e","target","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Signup","param","setIsLoggedIn","setModalOpen","userId","setUserId","userName","setUserName","API","concat","process","email","onChangeEmail","emailError","setEmailError","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","checkEmail","res","check","test","closeModal","onSubmit","preventDefault","stopPropagation","axios","name","headers","then","result","data","catch","error","response","message","alert","jsx_runtime","jsx","Modal","open","onClose","aria-labelledby","aria-describedby","jsxs","Box","component","noValidate","autoComplete","sx","Typography","variant","textAlign","TextField","label","marginTop","fullWidth","type","required","onChange","span","color","Button","mt","mb","size","Upload","props","file","setFile","useRef","imageFile","setImageFile","setValue","React","isImage","setIsImage","highlight","setHighlight","reason","onChangeReason","brand","onChangeBrand","link","onChangeLink","post","setPost","title","desc","photos","setuploadModalOpen","category","setCategory","season","setSeason","text","onChangeText","setText","handleCategoryChange","event","handleSeasonChange","handlefilechange","handfiles","files","photosArr","undefined","length","i","reader","FileReader","readAsDataURL","addEventListener","fileobj","src","handeldelete","parentElement","slice","targetindex","handlehighlight","handleunhighlight","handledrop","dt","dataTransfer","USERINFOAPI","userInfo","setUserInfo","useEffect","console","log","err","formData","FormData","append","location","reload","FormControl","marginRight","InputLabel","id","Select","labelId","defaultValue","MenuItem","div","className","onDragEnter","onDragOver","onDragLeave","onDrop","input","placeholder","multiple","htmlFor","map","item","index","onClick","Image","alt","Fragment","button","display","LoginForm","setloginModalOpen","User","setUser","onSubmitForm","Navbar","isLoggedIn","HASHAPI","GETHASHAPI","uploadModalOpen","loginModalOpen","onChangeValue","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","searchBar","modalOpen","current","focus","showModal","showLoginModal","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","Logout","uploadClick","handleMobileMenuOpen","currentTarget","onReady","TagSearch","split","upperCaseValue","toUpperCase","hashtags","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","flexGrow","AppBar","backgroundColor","Toolbar","noWrap","xs","sm","md","form","flex","marginLeft","IconButton","aria-label","SearchIcon","fill","inputRef","edge","aria-haspopup","AddIcon","fontWeight","whiteSpace","aria-controls","AccountCircle","float","MoreIcon","styled","theme","borderRadius","shape","alpha","spacing","breakpoints","up","padding","height","pointerEvents","alignItems","justifyContent","InputBase","paddingLeft","transition","transitions","create","AlignItemsList","DELAPI","delClick","Posts","posts","filter","editClick","TagClick","hashname","Card","maxWidth","CardActionArea","href","CardMedia","image","CardContent","fontSize","marginBottom","CardActions","EditIcon","DeleteIcon","hashtag","margin","parseInt","PostHashtag","HashtagId","a","Item","Paper","palette","mode","typography","body2","secondary","ResponsiveGrid","Grid","container","columns","lg","li","Images","Hashtags","Home","LOADAPI","loadPost","LOGINCHECKAPI","login","Head","meta","content","h1"],"sourceRoot":""}