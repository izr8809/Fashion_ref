{"version":3,"file":"static/chunks/pages/index-f88c65f6cd8412c5.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./hooks/useInput.ts","webpack://_N_E/./Components/Signup.tsx","webpack://_N_E/./Components/Upload.tsx","webpack://_N_E/./Components/LoginForm.tsx","webpack://_N_E/./Components/Searchbar.tsx","webpack://_N_E/./Components/Navbar.tsx","webpack://_N_E/./Components/Cardpost.tsx","webpack://_N_E/./Components/ResponsiveGrid.tsx","webpack://_N_E/./Components/NoticeModal.tsx","webpack://_N_E/./pages/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { TOGGLE_SIGNUP_DONE, loginRequestAction, signupRequestAction } from \"@/reducers/user\";\r\n\r\ntype SignupProps = {\r\n  setIsModalOpen: any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({\r\n  setIsModalOpen,\r\n}: SignupProps): ReactElement {\r\n  const dispatch = useDispatch();\r\n  const [isInitialOpen, setIsInitialOpen]= useState(true);\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const { signUpLoading } = useSelector((state: any) => state.user);\r\n  const { signUpDone } = useSelector((state: any) => state.user);\r\n  const { signUpError } = useSelector((state: any) => state.user);\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [name, onChangeName] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [nameError, setNameError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password, setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email: any) => {\r\n    let res = false;\r\n\r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      // e.stopPropagation();\r\n      if (password !== passwordCheck) {\r\n        setPasswordError(true);\r\n      } else if (!checkEmail(email) || email.replace(\" \",\"\") ==\"\") {\r\n        setEmailError(true);\r\n      } else if(name.replace(\" \",\"\") ==\"\"){\r\n        setNameError(true);\r\n      }\r\n      else {\r\n        dispatch(\r\n          signupRequestAction({\r\n            email,\r\n            name,\r\n            password,\r\n          })\r\n        );\r\n      }\r\n    },[email, password, passwordCheck, name]);\r\n\r\n    useEffect(()=>{\r\n      console.log(\"signupDone\",signUpDone)\r\n      if(signUpDone && !isInitialOpen){\r\n        console.log(\"modal\")\r\n        setIsModalOpen(false);\r\n        dispatch({\r\n          type: TOGGLE_SIGNUP_DONE,\r\n        })\r\n      }\r\n      setIsInitialOpen(false);\r\n    },[signUpDone])\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\" sx={{ textAlign: \"center\" }}>\r\n          회원가입\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          // error={checkEmail(email)}\r\n          onChange={onChangeEmail}\r\n        />\r\n        {emailError && (\r\n          <span style={{ color: \"red\" }}>Email 형식이 잘못되었습니다</span>\r\n        )}\r\n        <TextField\r\n          label=\"이름\"\r\n          name=\"user-nick\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          value={name}\r\n          required\r\n          onChange={onChangeName}\r\n        />\r\n        {nameError && (\r\n          <span style={{ color: \"red\" }}>이름을 입력해주세요</span>\r\n        )}\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          fullWidth\r\n          name=\"user-password\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={password}\r\n          required\r\n          onChange={onChangePassword}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호체크\"\r\n          fullWidth\r\n          name=\"user-password-check\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={passwordCheck}\r\n          required\r\n          onChange={setPasswordCheck}\r\n        />\r\n        {passwordError && (\r\n          <span style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다</span>\r\n        )}\r\n        {signUpError && (\r\n          <span style={{ color: \"red\" }}>회원가입 실패했습니다</span>\r\n        )}\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n          loading={signUpLoading}\r\n        >\r\n          확인\r\n        </LoadingButton>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    // {/* <div className={\"container\"} ref={modalRef}>\r\n    //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n    //       <br />\r\n    //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n    //     </TextField>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-nick\">닉네임</label>\r\n    //       <br />\r\n    //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password\">비밀번호</label>\r\n    //       <br />\r\n    //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n    //       <br />\r\n    //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n    //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n    //     </div>\r\n    //     {/* <div>\r\n    //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n    //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n    //     </div> */}\r\n    //     <div style={{ marginTop: 10 }}>\r\n    //       <button>가입하기</button>\r\n    //     </div>\r\n    //     <button className={\"close\"} onClick={closeModal}>\r\n    //         X\r\n    //     </button>\r\n    //   </div> */}\r\n    // }\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Router from \"next/router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  addPost,\r\n  ADD_POST_REQUEST,\r\n  EDIT_POST_REQUEST,\r\n  GET_HASHTAGS_REQUEST,\r\n  loadPost,\r\n  TOGGLE_ADD_POST_DONE_REQUEST,\r\n  TOGGLE_EDIT_POST_DONE_REQUEST,\r\n  TOGGLE_ISEDIT_REQUEST,\r\n} from \"@/reducers/post\";\r\nimport { and } from \"sequelize\";\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype UploadProps = {\r\n  setImageIndex: any;\r\n  setuploadModalOpen: any;\r\n  uploadModalOpen: boolean;\r\n  postId: number | null;\r\n  clipboardFile: any;\r\n  uploadModalClicked: boolean;\r\n  setUploadModalClicked: any;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload(props: UploadProps) {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n  const { hashtags } = useSelector((state: any) => state.post);\r\n  const { isEdit } = useSelector((state: any) => state.post);\r\n  const { editPostWithImagesDone } = useSelector((state: any) => state.post);\r\n  const { addPostError } = useSelector((state: any) => state.post);\r\n  const { editPostError } = useSelector((state: any) => state.post);\r\n  const fileInput = useRef<HTMLInputElement>(null);\r\n\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  const postInfoArray = [];\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [reason, onChangeReason, setReason] = useInput(\"\");\r\n  const [brand, onChangeBrand, setBrand] = useInput(\"\");\r\n  const [link, onChangeLink, setLink] = useInput(\"\");\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n  const { addPostLoading } = useSelector((state: any) => state.post);\r\n  const { addPostDone } = useSelector((state: any) => state.post);\r\n  const { editPostDone } = useSelector((state: any) => state.post);\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const [imageFile, setImageFile] = useState<any>(post.photos || []);\r\n  const closeModal = useCallback(() => {\r\n    props.setuploadModalOpen(false);\r\n    props.setUploadModalClicked(false);\r\n    setPost({\r\n      title: \"\",\r\n      desc: \"\",\r\n      photos: [null],\r\n    });\r\n    dispatch({\r\n      type: TOGGLE_ISEDIT_REQUEST,\r\n      data: false,\r\n    });\r\n    //저장하시겠습니까?\r\n  }, [props]);\r\n\r\n  const { title, desc, photos } = post;\r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n  const inputRef = useRef(null);\r\n  const [category, setCategory] = React.useState(\"상의\");\r\n  const [season, setSeason] = React.useState(\"23SS\");\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n  const [cardPost, setCardPost] = useState([]);\r\n  const [prevBrandName, setPrevBrandName] = useState(\"\");\r\n\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = useCallback(\r\n    (files: FileList | null) => {\r\n      let photosArr: any[] = [];\r\n      let fileArr: any[] = [];\r\n      if (files != undefined) {\r\n        setIsImage(true);\r\n        for (let i = 0; i < files.length; i++) {\r\n          let file = files[i];\r\n          fileArr.push(file);\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.addEventListener(\"load\", () => {\r\n            let fileobj = {\r\n              name: file.name,\r\n              type: file.type,\r\n              size: file.size,\r\n              src: reader.result,\r\n            };\r\n            photosArr.push(fileobj);\r\n            setPost({\r\n              ...post,\r\n              // photos: [...photos, ...photosArr],\r\n              photos: photos.concat(photosArr),\r\n            });\r\n          });\r\n        }\r\n\r\n        setImageFile(imageFile.concat(fileArr));\r\n      }\r\n    },\r\n    [post, photos, imageFile]\r\n  );\r\n\r\n  const addIconClick = useCallback(() => {\r\n    if (fileInput.current) {\r\n      (fileInput.current as any).click();\r\n    }\r\n  }, [fileInput]);\r\n\r\n  const handeldelete = useCallback(\r\n    (e: React.MouseEvent<HTMLSpanElement>) => {\r\n      let target = (e.target as HTMLSpanElement).parentElement;\r\n      var index = Array.from(\r\n        ((target as HTMLDivElement).parentElement as HTMLDivElement).children\r\n      ).indexOf(target as HTMLDivElement);\r\n      let targetindex = index;\r\n      setPost({\r\n        ...post,\r\n        photos: [...photos.slice(0, index + 1), ...photos.slice(index + 2)],\r\n      });\r\n      setImageFile([...photos.slice(0, index + 1), ...photos.slice(index + 2)]);\r\n\r\n      // setImageFile( (prev) => prev.filter())\r\n\r\n      //이미지 다 없어지면 다시 업로드 창 뜨도록\r\n      if (post.photos.length == 2) {\r\n        //랜더링 되기 전이라 2\r\n        setIsImage(false);\r\n      }\r\n    },\r\n    [post, photos]\r\n  );\r\n\r\n  //clipboard\r\n  useEffect(() => {\r\n    if (!props.uploadModalClicked) {\r\n      if (props.clipboardFile) {\r\n        handfiles(props.clipboardFile);\r\n      }\r\n    }\r\n  }, [props.clipboardFile, props.uploadModalClicked, props.uploadModalOpen]);\r\n\r\n  useEffect(() => {\r\n    const handlePaste = (event: any) => {\r\n      if (event.clipboardData.files.length > 0) {\r\n        handfiles(event.clipboardData.files);\r\n      }\r\n    };\r\n    window.addEventListener(\"paste\", handlePaste);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"paste\", handlePaste);\r\n    };\r\n  }, [post]);\r\n\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(false);\r\n  }, []);\r\n\r\n  const handledrop = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      let dt = e.dataTransfer;\r\n      let files = dt?.files;\r\n      setHighlight(false);\r\n      handfiles(files);\r\n    },\r\n    [post]\r\n  );\r\n\r\n  const [hashTags, setHashTags] = React.useState({\r\n    data: [{ name: \"\" }],\r\n  });\r\n\r\n  const getHashtags = useCallback(() => {\r\n    dispatch({\r\n      type: GET_HASHTAGS_REQUEST,\r\n    });\r\n    setShowHashModalOpen(true);\r\n  }, [dispatch]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if (brand == \"\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"브랜드입력 필수\");\r\n      } else {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        //수정일 때\r\n        if (isEdit) {\r\n          //이미지 새로 올렸을 때\r\n          if (post.photos.length == 1) {\r\n            alert(\"이미지 필수\");\r\n            return;\r\n          }\r\n          const formData = new FormData();\r\n          //if first element is null\r\n          if (!imageFile[0]) imageFile.shift();\r\n\r\n          [].forEach.call(imageFile, (f) => {\r\n            //file check\r\n            const isFile = (f as any).name || null;\r\n            if (isFile) {\r\n              formData.append(\"image\", f);\r\n            } else {\r\n              formData.append(\"imagePath\", (f as any).src);\r\n            }\r\n          });\r\n\r\n          formData.append(\"postId\", props.postId?.toString() as string);\r\n          formData.append(\"brand\", brand.replaceAll(\" \", \"\"));\r\n          formData.append(\"link\", link);\r\n          formData.append(\"category\", category);\r\n          formData.append(\"season\", season);\r\n          formData.append(\"hashtag\", text);\r\n          formData.append(\"reason\", reason);\r\n          dispatch({\r\n            type: EDIT_POST_REQUEST,\r\n            data: formData,\r\n          });\r\n        }\r\n        //수정 아닐 떄\r\n        else {\r\n          if (!imageFile) {\r\n            alert(\"이미지 필수\");\r\n            return;\r\n          }\r\n          const formData = new FormData();\r\n          [].forEach.call(imageFile, (f) => {\r\n            formData.append(\"image\", f);\r\n          });\r\n          formData.append(\"userId\", user.id);\r\n          formData.append(\"userName\", user.userName);\r\n          formData.append(\"brand\", brand.replaceAll(\" \", \"\"));\r\n          formData.append(\"link\", link);\r\n          formData.append(\"category\", category);\r\n          formData.append(\"season\", season);\r\n          formData.append(\"hashtag\", text);\r\n          formData.append(\"reason\", reason);\r\n          dispatch(addPost(formData));\r\n        }\r\n      }\r\n    },\r\n    [\r\n      brand,\r\n      category,\r\n      season,\r\n      text,\r\n      reason,\r\n      link,\r\n      user,\r\n      dispatch,\r\n      imageFile,\r\n      post.photos,\r\n      isEdit,\r\n      props.postId,\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      dispatch({\r\n        type: TOGGLE_ADD_POST_DONE_REQUEST,\r\n      });\r\n      closeModal();\r\n    }\r\n    if (editPostDone) {\r\n      dispatch({\r\n        type: TOGGLE_EDIT_POST_DONE_REQUEST,\r\n      });\r\n      closeModal();\r\n      // props.setIsEdit(false);\r\n      dispatch({\r\n        type: TOGGLE_ISEDIT_REQUEST,\r\n        data: false,\r\n      });\r\n      if (props.setImageIndex) props.setImageIndex(0);\r\n    }\r\n    if (editPostWithImagesDone && isEdit) {\r\n      dispatch({\r\n        type: TOGGLE_EDIT_POST_DONE_REQUEST,\r\n      });\r\n      // closeModal();\r\n      // props.setIsEdit(false);\r\n\r\n      dispatch({\r\n        type: TOGGLE_ISEDIT_REQUEST,\r\n        data: false,\r\n      });\r\n\r\n      if (props.setImageIndex) props.setImageIndex(0);\r\n    }\r\n  }, [\r\n    addPostDone,\r\n    dispatch,\r\n    closeModal,\r\n    editPostDone,\r\n    isEdit,\r\n    props,\r\n    editPostWithImagesDone,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const targetPost = postArray.find(\r\n        (post: any) => post.id === props.postId\r\n      );\r\n\r\n      //카테고리, 시즌, 이름, 브랜드명 제외\r\n      let postHashtags = \"\";\r\n      if (targetPost.Hashtags.length > 4) {\r\n        for (let i = 0; i < targetPost.Hashtags.length; i++) {\r\n          const hashname = targetPost.Hashtags[i]?.name;\r\n          if(hashname != targetPost.category.toUpperCase() && \r\n             hashname != targetPost.season.toUpperCase() &&\r\n             hashname != targetPost.brand.toUpperCase() && \r\n             hashname != targetPost.name.toUpperCase())\r\n             {\r\n             postHashtags = postHashtags.concat(\r\n              `#${hashname} `\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      setCardPost(targetPost.Images);\r\n      setImageFile(targetPost.Images);\r\n      setCategory(targetPost.category);\r\n      setSeason(targetPost.season);\r\n      setText(postHashtags);\r\n      setBrand(targetPost.brand);\r\n      setPrevBrandName(targetPost.brand);\r\n      setReason(targetPost.reason);\r\n      setLink(targetPost.link);\r\n      setIsImage(true);\r\n      setPost({\r\n        ...post,\r\n        photos: photos.concat(targetPost.Images),\r\n      });\r\n\r\n    }\r\n  }, [isEdit, postArray]);\r\n\r\n  const addDrop = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      let dt = e.dataTransfer;\r\n      let files = dt?.files;\r\n      handfiles(files);\r\n    },\r\n    [post]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {showHashModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closehashtagsModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <div\r\n              className=\"hashlistdiv\"\r\n              style={{ height: \"300px\", overflow: \"overlay\" }}\r\n            >\r\n              {hashtags &&\r\n                hashtags.map((hashtag: any, index: number) => (\r\n                  <li id=\"hashlist\" key={index} style={{ listStyle: \"none\" }}>\r\n                    {\" \"}\r\n                    #{hashtag.name}\r\n                  </li>\r\n                ))}\r\n            </div>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closehashtagsModal}\r\n            >\r\n              확인\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Modal\r\n        open={true}\r\n        // onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box\r\n          component=\"form\"\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          onSubmit={onSubmit}\r\n          sx={style}\r\n        >\r\n          {/* <form onSubmit={onSubmit}> */}\r\n          <CloseIcon\r\n            style={{\r\n              position: \"absolute\",\r\n              cursor: \"pointer\",\r\n              top: \"15px\",\r\n              right: \"15px\",\r\n            }}\r\n            onClick={closeModal}\r\n          ></CloseIcon>\r\n          <Typography sx={{ textAlign: \"center\" }} component=\"h1\" variant=\"h5\">\r\n            업로드\r\n          </Typography>\r\n          {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n          <TextField\r\n            required\r\n            label=\"브랜드\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-brand\"\r\n            type=\"text\"\r\n            value={brand}\r\n            variant=\"standard\"\r\n            onChange={onChangeBrand}\r\n          />\r\n          <TextField\r\n            label=\"Link\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={link}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeLink}\r\n          />\r\n\r\n          <TextField\r\n            label=\"선정이유\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={reason}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeReason}\r\n          />\r\n\r\n          <FormControl\r\n            sx={{ width: \"40%\", marginRight: \"10%\", marginTop: \"25px\" }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-label\">상의</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"상의\"}\r\n              value={category}\r\n              label=\"카테고리\"\r\n              required\r\n              onChange={handleCategoryChange}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl sx={{ width: \"40%\", marginTop: \"25px\" }}>\r\n            <InputLabel id=\"demo-simple-select-label\">23SS</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"23SS\"}\r\n              value={season}\r\n              label=\"시즌\"\r\n              required\r\n              onChange={handleSeasonChange}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            sx={{ marginTop: \"30px\" }}\r\n            value={text}\r\n            onChange={onChangeText}\r\n            fullWidth\r\n            label=\"해시태그입력 #검정 #반팔 \"\r\n            variant=\"outlined\"\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n          <div className=\"file-upload\" style={{ marginTop: \"10px\" }}>\r\n            <div className=\"custom-form-group\">\r\n              {!isImage && (\r\n                <div\r\n                  className={\r\n                    highlight\r\n                      ? \"custom-file-drop-area highlight\"\r\n                      : \"custom-file-drop-area\"\r\n                  }\r\n                  onDragEnter={handlehighlight}\r\n                  onDragOver={handlehighlight}\r\n                  onDragLeave={handleunhighlight}\r\n                  onDrop={handledrop}\r\n                >\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"photos\"\r\n                    placeholder=\"Enter photos\"\r\n                    multiple={false}\r\n                    id=\"filephotos\"\r\n                    onChange={handlefilechange}\r\n                  />\r\n                  <label htmlFor=\"filephotos\">\r\n                    이미지를 드래그해서 넣어주세요\r\n                  </label>\r\n                </div>\r\n              )}\r\n              <div\r\n                className=\"custom-file-preview\"\r\n                onDragEnter={handlehighlight}\r\n                onDragOver={handlehighlight}\r\n                onDragLeave={handleunhighlight}\r\n                onDrop={addDrop}\r\n              >\r\n                {photos.length > 0 &&\r\n                  photos.map((item: any, index) =>\r\n                    index != 0 ? (\r\n                      <div className=\"prev-img\" key={index}>\r\n                        <span onClick={handeldelete}>&times;</span>\r\n                        {item && <img src={item.src} alt={item.name} />}\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )\r\n                  )}\r\n                {isImage ? (\r\n                  <>\r\n                    <AddIcon\r\n                      onClick={addIconClick}\r\n                      sx={{ marginLeft: \"54px\", marginTop: \"39px\" }}\r\n                    />\r\n                    <input\r\n                      type=\"file\"\r\n                      style={{ visibility: \"hidden\" }}\r\n                      name=\"photos\"\r\n                      placeholder=\"Enter photos\"\r\n                      multiple={false}\r\n                      id=\"filephotos\"\r\n                      onChange={handlefilechange}\r\n                      ref={fileInput}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {addPostError && (\r\n            <span style={{ color: \"red\" }}>업로드 실패했습니다</span>\r\n          )}\r\n          {editPostDone && (\r\n            <span style={{ color: \"red\" }}>업로드 실패했습니다</span>\r\n          )}\r\n          <button\r\n            id=\"submit_bt\"\r\n            style={{ display: \"none\" }}\r\n            type=\"submit\"\r\n          ></button>\r\n          <LoadingButton\r\n            type=\"submit\"\r\n            loading={addPostLoading}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            size=\"large\"\r\n            // loading={true}\r\n          >\r\n            확인\r\n          </LoadingButton>\r\n          {/* </form> */}\r\n        </Box>\r\n        {/* <Button onClick={closeModal}>닫기</Button> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TOGGLE_LOGIN_DONE, loginRequestAction } from \"@/reducers/user\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  loginModalOpen : boolean;\r\n};\r\nexport default function LoginForm({\r\n  setloginModalOpen,\r\n  loginModalOpen,\r\n}: LoginFormProps): ReactElement {\r\n  \r\n  const dispatch = useDispatch();\r\n  const [isInitialOpen, setIsInitialOpen]= useState(true);\r\n  const {logInDone} = useSelector((state : any) => state.user)\r\n  const {logInLoading} = useSelector((state : any) => state.user)\r\n  const {logInError} = useSelector((state : any) => state.user)\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback(\r\n    (event: any) => {\r\n      event.preventDefault();\r\n      if (email == \"\") {\r\n        alert(\"이메일을 입력해주세요\");\r\n      } else if (password == \"\") {\r\n        alert(\"비밀번호를 입력해주세요\");\r\n      } else {\r\n        dispatch(loginRequestAction({email,password}))\r\n      }\r\n    },\r\n    [email, password, dispatch]\r\n  );\r\n\r\n  useEffect(()=>{\r\n    if(logInDone && !isInitialOpen){\r\n      setloginModalOpen(false);\r\n      dispatch({\r\n        type: TOGGLE_LOGIN_DONE,\r\n      })\r\n    }\r\n    setIsInitialOpen(false);\r\n\r\n  },[logInDone])\r\n\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        {logInError && <span style={{marginTop:\"10px\", color:\"#F73334\"}}> 로그인 정보가 일치하지 않습니다.</span>}\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n          loading={logInLoading}\r\n        >\r\n          로그인\r\n        </LoadingButton>\r\n        {/* </form> */}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { HASHTAG_SEARCH_REQUEST, loadPost } from \"@/reducers/post\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {useEffect, useRef} from 'react';\r\n\r\ntype SearchbarProps = {};\r\n\r\nexport default function Searchbar({}: SearchbarProps) {\r\n  const [value, onChangeValue, setValue] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (searchBar.current) {\r\n      searchBar.current.focus();\r\n    }\r\n  }, []);\r\n\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      // e.preventDeafult();\r\n      // e.stopPropagation();\r\n      if (value == \"\") {\r\n        dispatch(loadPost())\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        let upperCaseValue = value.toUpperCase();\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        dispatch({\r\n          type: HASHTAG_SEARCH_REQUEST,\r\n          data: {\r\n            hashtags: \"#\" + upperCaseValue,\r\n          }\r\n        })\r\n        setValue(\"\")\r\n      }\r\n    },\r\n    [dispatch, value]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={TagSearch}\r\n        style={{ width: \"70%\", flex: \"auto\", marginLeft: \"15%\" }}\r\n      >\r\n        <IconButton\r\n          type=\"submit\"\r\n          aria-label=\"search\"\r\n          sx={{ display: { xs: \"none\", md: \"inline-block\" } }}\r\n        >\r\n          <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n        </IconButton>\r\n        <TextField\r\n          id=\"search-bar\"\r\n          className=\"text\"\r\n          sx={{ display: \"inline-block\", width: \"80%\" }}\r\n          value={value}\r\n          onChange={onChangeValue}\r\n          label=\"#상의 #검정\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Search...\"\r\n          size=\"small\"\r\n          inputRef={searchBar}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement, useRef } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/Signup\";\r\nimport Upload from \"@/Components/Upload\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginRequestAction, logoutRequestAction } from \"@/reducers/user\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { GET_HASHTAGS_REQUEST } from \"@/reducers/post\";\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\n\r\ntype NavbarProps = {\r\n  setIsUserpage :any;\r\n};\r\n\r\nexport default function Navbar({\r\n  setIsUserpage\r\n}: NavbarProps): ReactElement {\r\n\r\n  //redux\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { logOutLoading } = useSelector((state: any) => state.user);\r\n  const { hashtags } = useSelector((state: any) => state.post);\r\n  const { isEdit } = useSelector((state: any) => state.post);\r\n  const [clipboardFile, setClipboardFile] = useState(null);\r\n  const [uploadModalClicked, setUploadModalClicked] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n\r\n\r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    dispatch(logoutRequestAction());\r\n    //왜인지 모르겠는데 로그아웃 후 모달 켜짐\r\n    setloginModalOpen(false);\r\n  }, []);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (user) {\r\n      setuploadModalOpen(true);\r\n      setUploadModalClicked(true)\r\n    } else {\r\n      setloginModalOpen(true);\r\n      // setIsEdit(true);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onReady = useCallback(() => {\r\n    alert(\"준비중입니다.\");\r\n  }, []);\r\n\r\n  const getHashtags = useCallback(() => {\r\n    //dispatch\r\n    dispatch({\r\n      type: GET_HASHTAGS_REQUEST,\r\n    });\r\n    setShowHashModalOpen(true);\r\n  }, [dispatch]);\r\n\r\n  const profileClick = useCallback(()=>{\r\n    if(user){\r\n      setIsUserpage(true);\r\n    }else{\r\n      alert(\"준비중입니다.\");\r\n    }\r\n  },[user])\r\n\r\n\r\n  //Render Menu\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <p>만드는 중입니다</p>\r\n      </MenuItem>\r\n      {/* <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>프로필</p>\r\n      </MenuItem> */}\r\n    </Menu>\r\n  );\r\n\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {isModalOpen && (\r\n        <Signup\r\n          setIsModalOpen={setIsModalOpen}\r\n        />\r\n      )}\r\n      {user && uploadModalOpen && !isEdit && (\r\n        <Upload\r\n          uploadModalClicked={uploadModalClicked}\r\n          setUploadModalClicked={setUploadModalClicked}\r\n          setImageIndex={null}\r\n          uploadModalOpen={uploadModalOpen}\r\n          setuploadModalOpen={setuploadModalOpen}\r\n          postId={null}\r\n          clipboardFile={clipboardFile}\r\n        />\r\n      )}\r\n      {!user && loginModalOpen && (\r\n        <LoginForm\r\n          loginModalOpen={loginModalOpen}\r\n          setloginModalOpen={setloginModalOpen}\r\n        />\r\n      )}\r\n      {showHashModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closehashtagsModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <div\r\n              className=\"hashlistdiv\"\r\n              style={{ height: \"300px\", overflow: \"overlay\" }}\r\n            >\r\n              {hashtags &&\r\n                hashtags.map((hashtag: any, index: any) => (\r\n                  <li\r\n                    id=\"hashlist\"\r\n                    key={hashtag.id}\r\n                    style={{ listStyle: \"none\", marginBottom: \"5px\" }}\r\n                  >\r\n                    {\" \"}\r\n                    #{hashtag.name}\r\n                  </li>\r\n                ))}\r\n            </div>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closehashtagsModal}\r\n            >\r\n              확인\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          ></Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Searchbar />\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            <>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                sx={{ marginRight: \"10px\" }}\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"false\"\r\n                color=\"primary\"\r\n                onClick={uploadClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </>\r\n            {!user ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <LoadingButton\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"100%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                    whiteSpace: \"nowrap\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={Logout}\r\n                  loading={logOutLoading}\r\n                >\r\n                  로그아웃\r\n                </LoadingButton>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                  onClick={profileClick}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" }, float: \"right\" }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft';\r\nimport Brightness1RoundedIcon from '@mui/icons-material/Brightness1Rounded';\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  DELETE_POST_REQUEST,\r\n  DUPLICATE_POST_REQUEST,\r\n  HASHTAG_SEARCH_REQUEST,\r\n  LIKE_POST_REQUEST,\r\n  loadPost,\r\n  TOGGLE_ISEDIT_REQUEST,\r\n  UNLIKE_POST_REQUEST,\r\n} from \"@/reducers/post\";\r\nimport FavoriteBorderTwoToneIcon from \"@mui/icons-material/FavoriteBorderTwoTone\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport Upload from \"./Upload\";\r\n\r\ntype CardpostProps = {\r\n  index: number;\r\n  // posts: any[];\r\n  category: string;\r\n  id: number;\r\n  brand: string;\r\n  link: string;\r\n  Images: {\r\n    src: string;\r\n  }[];\r\n  season: string;\r\n  reason: string;\r\n  name: string;\r\n  hashtags: {\r\n    PostHashtag: {\r\n      HashtagId: number;\r\n    };\r\n    name: string;\r\n  }[];\r\n  likers: any[];\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst StyledCardAction = styled(CardActions)`\r\n  display: flex;\r\n  -webkit-box-align: center;\r\n  align-items: center;\r\n  padding: 8px;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport default function Cardpost(props: CardpostProps) {\r\n  const { logInDone } = useSelector((state: any) => state.user);\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n  const dispatch = useDispatch();\r\n  // const isLoggedIn = false;\r\n  const [uploadModalClicked, setUploadModalClicked] = useState(false);\r\n  const [like, setLike] = useState(false);\r\n  const {isEdit} = useSelector((state: any) => state.post);\r\n  const [likeClick, setLikeClick] = useState(props.likers?.length || 0);\r\n  const [loginModalOpen, setIsLoginFormOpen] = useState(false);\r\n  const [isUploadFormOpen, setIsUploadFormOpen] = useState(false);\r\n  const [imageIndex, setImageIndex] = useState(0);\r\n\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [ImagePath, setImagePath] = React.useState(\"\");\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    if (user) {\r\n      setLike((prev) => !prev);\r\n\r\n      if (!like) {\r\n        dispatch({\r\n          type: LIKE_POST_REQUEST,\r\n          data: props.id,\r\n        });\r\n        setLikeClick((prev) => prev + 1);\r\n      } else {\r\n        dispatch({\r\n          type: UNLIKE_POST_REQUEST,\r\n          data: props.id,\r\n        });\r\n        setLikeClick((prev) => prev - 1);\r\n      }\r\n    } else {\r\n      alert(\"로그인 해주세요\");\r\n      setIsLoginFormOpen(true);\r\n      //로그인 모달 띄우기 넣어야\r\n    }\r\n  }, [user, like, props.id]);\r\n\r\n  const delClick = useCallback(() => {\r\n    if (user) {\r\n      setModalOpen(true);\r\n    } else {\r\n      alert(\"로그인 해주세요\");\r\n      setIsLoginFormOpen(true);\r\n      //로그인 모달 띄우기 넣어야\r\n    }\r\n  }, [user]);\r\n\r\n  const duplicateClick = useCallback(() => {\r\n    if (!user) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n\r\n    return dispatch({\r\n      type: DUPLICATE_POST_REQUEST,\r\n      data: props.id,\r\n    });\r\n  }, [dispatch, props.id, user]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      if (!user) {\r\n        return alert(\"로그인이 필요합니다.\");\r\n      }\r\n\r\n      return dispatch({\r\n        type: DELETE_POST_REQUEST,\r\n        data: props.id,\r\n      });\r\n    },\r\n    [dispatch, props.id, user]\r\n  );\r\n\r\n  const editClick = () => {\r\n    if (!user) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n    setIsUploadFormOpen(true);\r\n    if(!isEdit){\r\n      dispatch({\r\n        type: TOGGLE_ISEDIT_REQUEST,\r\n        data : true,\r\n      })\r\n    }\r\n\r\n    // alert(\"준비중입니다.\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.Images[imageIndex] == undefined) {\r\n    } else {\r\n      // console.log(\"props\")\r\n      // console.log(props)\r\n      setImagePath(`../${props.Images[imageIndex].src}`);\r\n    }\r\n  }, [props.Images,imageIndex]);\r\n\r\n  const onClickRightArrow = useCallback(()=>{\r\n    if(imageIndex < props.Images.length){\r\n      setImageIndex((prev)=> prev+1)\r\n    }\r\n  },[props.Images, imageIndex])\r\n  \r\n  const onClickLeftArrow = useCallback(()=>{\r\n    if(imageIndex > 0){\r\n      setImageIndex((prev)=> prev-1)\r\n    }\r\n  },[imageIndex])\r\n\r\n\r\n  const TagClick = React.useCallback(\r\n    (e: any, hashname: string) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      dispatch({\r\n        type: HASHTAG_SEARCH_REQUEST,\r\n        data: {\r\n          hashtags: \"#\" + hashname,\r\n        },\r\n      });\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    },\r\n    [dispatch, props]\r\n  );\r\n\r\n  useEffect(() => {\r\n    //like 눌렀는지\r\n    if (user?.data && props.likers) {\r\n      const isUserLiked = props.likers.find((v) => v.id === user?.data.id);\r\n      if (isUserLiked) setLike(true);\r\n      else setLike(false);\r\n    }\r\n  }, [props.likers, user, props.id, logInDone]);\r\n\r\n  return (\r\n    <>\r\n      {isUploadFormOpen && isEdit && (\r\n        <Upload\r\n          setUploadModalClicked ={setUploadModalClicked}\r\n          uploadModalClicked={uploadModalClicked}\r\n          setImageIndex ={setImageIndex}\r\n          setuploadModalOpen={setIsUploadFormOpen}\r\n          uploadModalOpen={isUploadFormOpen}\r\n          postId={props.id}\r\n          clipboardFile={null}\r\n        />\r\n      )}\r\n      {loginModalOpen && (\r\n        <LoginForm\r\n          loginModalOpen={loginModalOpen}\r\n          setloginModalOpen={setIsLoginFormOpen}\r\n        />\r\n      )}\r\n      {modalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closeModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={onSubmit}\r\n            sx={style}\r\n          >\r\n            {/* <form onSubmit={onSubmit}> */}\r\n            <Typography\r\n              component=\"h2\"\r\n              variant=\"h5\"\r\n              sx={{ textAlign: \"center\", marginBottom: \"15px\" }}\r\n            >\r\n              정말 삭제하시겠습니까?\r\n            </Typography>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              sx={{\r\n                mt: 3,\r\n                mb: 2,\r\n                width: \"40%\",\r\n                marginLeft: \"5%\",\r\n                marginRight: \"10%\",\r\n              }}\r\n              size=\"large\"\r\n            >\r\n              삭제\r\n            </Button>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2, width: \"40%\" }}\r\n              size=\"large\"\r\n              onClick={closeModal}\r\n            >\r\n              취소\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Card\r\n        sx={{\r\n          maxWidth: \"15\",\r\n          marginTop: \"20px\",\r\n          // borderRadius: \"24px\",\r\n          boxShadow: \"none\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <CardActionArea href={`${props.link}`} target=\"_blank\">\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"400\"\r\n            image={ImagePath}\r\n            // alt=\"이미지 오류, 삭제 후 다시 등록해주세요\"\r\n          />\r\n        </CardActionArea>\r\n        {props.Images && props.Images.length > 1 && (\r\n          <>\r\n            <ArrowRightIcon\r\n              onClick={onClickRightArrow}\r\n              style={{ position: \"absolute\", top: \"30%\", right: \"0%\", zIndex: 100, color:\"#3D3D3D\", cursor:\"pointer\"}}\r\n            />\r\n            <Brightness1RoundedIcon \r\n              style={{ position: \"absolute\", top: \"30%\", right: \"0%\", color:\"#B5B5B7\" }}\r\n            />\r\n            <ArrowLeftIcon\r\n              onClick={onClickLeftArrow}\r\n              style={{ position: \"absolute\", top: \"30%\", left: \"0%\", zIndex: 100, color:\"#3D3D3D\",cursor:\"pointer\" }}\r\n            />\r\n            <Brightness1RoundedIcon \r\n              style={{ position: \"absolute\", top: \"30%\", left: \"0%\", color:\"#B5B5B7\" }}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        <CardContent>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              marginBottom: \"3%\",\r\n              display: \"inline-block\",\r\n            }}\r\n          >\r\n            <FileCopyIcon\r\n              id=\"copyicon\"\r\n              onClick={duplicateClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                marginRight: \"17px\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n            <EditIcon\r\n              id=\"editicon\"\r\n              onClick={editClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n            <DeleteIcon\r\n              id=\"delicon\"\r\n              onClick={delClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                marginLeft: \"17px\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n          </div>\r\n          <Typography>\r\n            <span\r\n              style={{\r\n                fontWeight: 900,\r\n                fontSize: \"130%\",\r\n                marginBottom: \"4%\",\r\n              }}\r\n            >\r\n              {`${props.brand}`}\r\n            </span>\r\n          </Typography>\r\n\r\n          {/* <span style={{fontWeight :900, fontSize: \"100%\", marginBottom: 5}}>\r\n            참고할 부분\r\n          </span> */}\r\n          <Typography\r\n            sx={{ fontWeight: 900, marginBottom: \"2%\" }}\r\n            variant=\"subtitle2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            참고할 부분\r\n          </Typography>\r\n\r\n          <Typography\r\n            sx={{ marginBottom: \"1%\" }}\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n        <StyledCardAction>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"inline-block\",\r\n              marginBottom: \"5px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: \"20%\",\r\n                marginBottom: \"3%\",\r\n                verticalAlign: \"center\",\r\n                display: \"inline-block\",\r\n                float: \"left\",\r\n              }}\r\n            >\r\n              {like ? (\r\n                <FavoriteIcon\r\n                  onClick={onToggleLike}\r\n                  sx={{ cursor: \"pointer\", opacity: \"80%\", color: \"#FF3040\" }}\r\n                />\r\n              ) : (\r\n                <FavoriteBorderTwoToneIcon\r\n                  onClick={onToggleLike}\r\n                  sx={{ cursor: \"pointer\", opacity: \"40%\" }}\r\n                />\r\n              )}\r\n              <span\r\n                style={{\r\n                  position: \"relative\",\r\n                  top: \"-7px\",\r\n                  marginLeft: \"5px\",\r\n                  color: \"#A6A6A6\",\r\n                }}\r\n              >\r\n                {likeClick ? likeClick : 0}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n          {/* <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${parseInt(props.season) % 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`TagCategory Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div> */}\r\n          {props.hashtags.map((hashtag, index) => (\r\n            <div style={{ margin: \"2px\" }} key={index}>\r\n              <div\r\n                className={`Tag${hashtag.PostHashtag.HashtagId % 8} Tag`}\r\n                style={{ display: \"inline-block\", margin: \"2px\" }}\r\n                onClick={(e) => {\r\n                  TagClick(e, hashtag.name);\r\n                }}\r\n              >\r\n                <a href=\"\">#{hashtag.name}</a>\r\n              </div>{\" \"}\r\n              &nbsp;\r\n            </div>\r\n          ))}\r\n\r\n          <div style={{ width: \"100%\" }}>\r\n            <span\r\n              style={{\r\n                float: \"left\",\r\n                color: \"#A6A6A6\",\r\n                fontSize: \"80%\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              작성자 : {props.name}\r\n            </span>\r\n          </div>\r\n        </StyledCardAction>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Cardpost from \"./Cardpost\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { useInput } from \"@mui/base\";\r\nimport axios from \"axios\";\r\nimport Image from \"next/image\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\ntype ResponsiveGridProps = {\r\n};\r\n\r\nexport default function ResponsiveGrid({}: ResponsiveGridProps) {\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n\r\n  useEffect(() => {\r\n  }, [postArray]);\r\n\r\n\r\n\r\n  //check if I like\r\n  return (\r\n    <>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Grid\r\n          container\r\n          spacing={{ xs: 2, md: 3 }}\r\n          columns={{ xs: 4, sm: 8, md: 12 }}\r\n        >\r\n          {postArray &&\r\n            (postArray as Array<any>).map((post, index) => (\r\n              <Grid item xs={6} sm={4} md={3} lg={4} key={post.id}>\r\n                <Item>\r\n                  <li\r\n                    style={{\r\n                      maxWidth: \"320px\",\r\n                      display: \"inline-block\",\r\n                      // marginRight: \"4%\",\r\n                      // marginLeft: \"1%\",\r\n                      // marginTop: \"1%\",-\r\n                    }}\r\n                  >\r\n                    <Cardpost\r\n                      index={index}\r\n                      name={post.name}\r\n                      // posts={postArray}\r\n                      id={post.id}\r\n                      likers={post.Likers}\r\n                      category={post.category}\r\n                      brand={post.brand}\r\n                      Images={post.Images}\r\n                      link={post.link}\r\n                      season={post.season}\r\n                      hashtags={post.Hashtags}\r\n                      reason={post.reason}\r\n                    />{\" \"}\r\n                  </li>\r\n                </Item>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect,useState, useRef } from \"react\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\ntype NoticeModalProps = {};\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function NoticeModal({}: NoticeModalProps) {\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const closeNoticeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    var now = new Date();\r\n    var date = now.getDate();\t// 일\r\n    if(date-31 ==0)\r\n      setIsModalOpen(true)\r\n  },[])\r\n  return (\r\n    <>\r\n      {isModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closeNoticeModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <h1 > 3.31 업데이트 안내 🐇</h1>\r\n            <p style={{marginTop:\"-20px\", marginBottom:\"20px\",color:\"#7F7F7F\"}}> *하루동안 떠요</p>\r\n            <h2 style={{marginBottom:\"10px\"}}> 기능 추가 목록 </h2>\r\n            <ol type=\"1\">\r\n              <li style={{marginBottom:\"10px\"}}> 이미지 복사 후 (클립보드 복사 or PrintScreen) </li>\r\n              <li style={{marginBottom:\"10px\"}}> 바탕화면에서 Ctrl + v 누르면 자동으로 이미지 등록 </li>\r\n              <li style={{marginBottom:\"10px\"}}> 업로드 화면에서도 마찬가지 </li>\r\n            </ol>\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closeNoticeModal}\r\n            >\r\n              확인\r\n            </Button>\r\n          </Box>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios, { AxiosHeaders } from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport {\n  initialState as postinitialState,\n  LOAD_POST_REQUEST,\n  RELOAD_POST_REQUEST,\n  GET_USER_POST_REQUEST,\n} from \"@/reducers/post\";\nimport { initialState as userinitialState } from \"@/reducers/user\";\nimport React, { useCallback, useState, useEffect, useMemo } from \"react\";\nimport { loadPost } from \"@/reducers/post\";\nimport { loadUser } from \"@/reducers/user\";\nimport { useDispatch } from \"react-redux\";\nimport wrapper from \"@/store/configureStore\";\nimport { END } from \"redux-saga\";\nimport userpage from \"./userpage\";\nimport NoticeModal from \"@/Components/NoticeModal\";\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie: any = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch(loadPost());\n    context.store.dispatch(loadUser());\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default function Home() {\n  // const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  const { user } = useSelector((state: any) => state.user);\n  const { loadPostLoading } = useSelector((state: any) => state.post);\n  const { onInfiniteScroll } = useSelector((state: any) => state.post);\n  const { hasMorePost } = useSelector((state: any) => state.post);\n  const { postArray } = useSelector((state: any) => state.post);\n  const dispatch = useDispatch();\n  const [isUserpage, setIsUserpage] = useState(false);\n\n  useEffect(() => {\n    function onScroll() {\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 350\n      ) {\n        if (hasMorePost && !loadPostLoading && onInfiniteScroll) {\n          const lastId = postArray[postArray.length - 1].id;\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data: lastId,\n          });\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePost, loadPostLoading, dispatch, postArray, onInfiniteScroll]);\n\n  const loadPosts = useCallback(() => {\n    dispatch({\n      type: RELOAD_POST_REQUEST,\n    });\n    dispatch(loadPost());\n  }, [dispatch]);\n\n  const loadUserPost = useCallback(() => {\n    dispatch({\n      type: GET_USER_POST_REQUEST,\n      data: null,\n    });\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n\n      <NoticeModal />\n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPosts}>\n          <h1 id=\"title\" style={{ cursor: \"pointer\" }}>\n            CRUMP REFERENCE\n          </h1>\n        </a>\n        <div style={{ marginBottom: \"40px\" }}>\n          <Navbar setIsUserpage={setIsUserpage} />\n        </div>\n        <div style={{marginBottom :\"10px\"}}>\n          {isUserpage && (\n            <button onClick={loadUserPost}> 내가 작성한 순 </button>\n          )}\n        </div>\n        <ResponsiveGrid />\n        {/* <div>\n          <Stack spacing={2} sx={{alignItems:\"center\", marginTop:\"30px\", marginBottom:\"50px\"}}>\n            <Pagination page={page} count={count} color=\"primary\" onChange={handleChange}/>\n          </Stack>\n        </div> */}\n        {loadPostLoading && (\n          <div id=\"bottomloading\">\n            <span style={{ fontSize: \"240%\" }}> 로딩중...</span>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","useInput","value","setter","useState","initValue","handler","useCallback","e","target","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Signup","param","setIsModalOpen","dispatch","useDispatch","isInitialOpen","setIsInitialOpen","email","onChangeEmail","signUpLoading","useSelector","state","user","signUpDone","signUpError","emailError","setEmailError","name","onChangeName","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","nameError","setNameError","checkEmail","res","check","test","closeModal","onSubmit","preventDefault","replace","signupRequestAction","useEffect","console","log","type","TOGGLE_SIGNUP_DONE","jsx_runtime","jsx","Modal","open","onClose","aria-labelledby","aria-describedby","jsxs","Box","component","noValidate","autoComplete","sx","Typography","variant","textAlign","TextField","label","marginTop","fullWidth","required","onChange","span","color","LoadingButton","mt","mb","size","loading","modalstyle","Upload","props","postArray","post","hashtags","isEdit","editPostWithImagesDone","addPostError","editPostError","fileInput","useRef","file","setFile","isImage","setIsImage","highlight","setHighlight","reason","onChangeReason","setReason","brand","onChangeBrand","setBrand","link","onChangeLink","setLink","showHashModalOpen","setShowHashModalOpen","React","addPostLoading","addPostDone","editPostDone","setPost","title","desc","photos","imageFile","setImageFile","setuploadModalOpen","setUploadModalClicked","TOGGLE_ISEDIT_REQUEST","data","closehashtagsModal","category","setCategory","season","setSeason","text","onChangeText","setText","cardPost","setCardPost","prevBrandName","setPrevBrandName","handleCategoryChange","event","handleSeasonChange","handlefilechange","handfiles","files","photosArr","fileArr","undefined","i","length","reader","FileReader","readAsDataURL","addEventListener","fileobj","src","result","concat","addIconClick","current","click","handeldelete","parentElement","index","Array","from","children","indexOf","slice","uploadModalClicked","clipboardFile","uploadModalOpen","handlePaste","clipboardData","removeEventListener","handlehighlight","stopPropagation","handleunhighlight","handledrop","dt","dataTransfer","hashTags","setHashTags","getHashtags","GET_HASHTAGS_REQUEST","alert","formData","FormData","shift","forEach","call","isFile","f","append","postId","toString","replaceAll","EDIT_POST_REQUEST","id","userName","addPost","TOGGLE_ADD_POST_DONE_REQUEST","TOGGLE_EDIT_POST_DONE_REQUEST","setImageIndex","targetPost","find","postHashtags","Hashtags","hashname","toUpperCase","Images","addDrop","Fragment","div","className","height","overflow","map","hashtag","li","listStyle","Button","onClick","CloseIcon","cursor","right","FormControl","marginRight","InputLabel","Select","labelId","defaultValue","MenuItem","whiteSpace","fontWeight","display","onDragEnter","onDragOver","onDragLeave","onDrop","input","placeholder","multiple","htmlFor","item","img","alt","AddIcon","marginLeft","visibility","ref","button","LoginForm","setloginModalOpen","loginModalOpen","logInDone","logInLoading","logInError","onSubmitForm","loginRequestAction","TOGGLE_LOGIN_DONE","Searchbar","onChangeValue","setValue","searchBar","focus","TagSearch","loadPost","split","upperCaseValue","HASHTAG_SEARCH_REQUEST","form","flex","IconButton","aria-label","xs","md","SearchIcon","fill","inputRef","Navbar","setIsUserpage","logOutLoading","setClipboardFile","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isModalOpen","showModal","showLoginModal","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","Logout","logoutRequestAction","uploadClick","handleMobileMenuOpen","currentTarget","profileClick","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","flexGrow","marginBottom","AppBar","backgroundColor","Toolbar","noWrap","sm","edge","aria-haspopup","aria-controls","AccountCircle","float","MoreIcon","StyledCardAction","styled","CardActions","Cardpost","like","setLike","likeClick","setLikeClick","likers","setIsLoginFormOpen","isUploadFormOpen","setIsUploadFormOpen","imageIndex","modalOpen","setModalOpen","ImagePath","setImagePath","onToggleLike","prev","UNLIKE_POST_REQUEST","LIKE_POST_REQUEST","delClick","duplicateClick","DUPLICATE_POST_REQUEST","DELETE_POST_REQUEST","editClick","onClickRightArrow","onClickLeftArrow","TagClick","scrollTo","behavior","isUserLiked","v","Card","maxWidth","CardActionArea","href","CardMedia","image","ArrowRightIcon","zIndex","Brightness1RoundedIcon","ArrowLeftIcon","CardContent","FileCopyIcon","opacity","EditIcon","DeleteIcon","fontSize","verticalAlign","FavoriteIcon","FavoriteBorderTwoToneIcon","margin","PostHashtag","HashtagId","a","Item","Paper","theme","palette","mode","typography","body2","padding","spacing","secondary","ResponsiveGrid","Grid","container","columns","lg","Likers","NoticeModal","closeNoticeModal","now","Date","getDate","h1","h2","ol","br","Home","loadPostLoading","onInfiniteScroll","hasMorePost","isUserpage","onScroll","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","LOAD_POST_REQUEST","loadPosts","RELOAD_POST_REQUEST","loadUserPost","GET_USER_POST_REQUEST","Head","meta","content"],"sourceRoot":""}