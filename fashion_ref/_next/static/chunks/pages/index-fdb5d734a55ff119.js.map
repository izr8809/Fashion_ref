{"version":3,"file":"static/chunks/pages/index-fdb5d734a55ff119.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./hooks/useInput.ts","webpack://_N_E/./Components/Signup.tsx","webpack://_N_E/./Components/Upload.tsx","webpack://_N_E/./Components/LoginForm.tsx","webpack://_N_E/./Components/Searchbar.tsx","webpack://_N_E/./Components/Navbar.tsx","webpack://_N_E/./Components/Cardpost.tsx","webpack://_N_E/./Components/ResponsiveGrid.tsx","webpack://_N_E/./Components/NoticeModal.tsx","webpack://_N_E/./pages/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { useState, useCallback } from 'react';\r\n\r\n\r\nconst useInput = (initValue : any) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e : any) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n\r\nexport default useInput;","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginRequestAction } from \"@/reducers/user\";\r\n\r\ntype SignupProps = {\r\n  isModalOpen: boolean;\r\n  setIsModalOpen: any;\r\n  userId : string;\r\n  setUserId : any;\r\n  userName : string;\r\n  setUserName : any;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nexport default function Signup({\r\n  setIsModalOpen,\r\n  isModalOpen,\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: SignupProps): ReactElement {\r\n  const dispatch = useDispatch();\r\n  const API = `${process.env.NEXT_PUBLIC_API}/signups`;\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useInput(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: any) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password, setPasswordCheck]\r\n  );\r\n\r\n  const checkEmail = (email: any) => {\r\n    let res = false;\r\n\r\n    if (!email) {\r\n      res = false;\r\n    } else {\r\n      const check =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n          email\r\n        );\r\n      check ? (res = true) : (res = false);\r\n    }\r\n\r\n    return res;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (password !== passwordCheck) {\r\n        setPasswordError(true);\r\n      } else if (!checkEmail(email)) {\r\n        setEmailError(true);\r\n      } else {\r\n        axios\r\n          .post(\r\n            API,\r\n            // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n            // 회원가입창에서 클라이언트가 입력하는 데이터\r\n            {\r\n              email: email,\r\n              name: nickname,\r\n              password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Accept': 'application/json',\r\n              },\r\n            }\r\n          )\r\n          // 그러면 서버에서 클라이언트로 response(응답)으로\r\n          // {ok: true} 아니면 {ok: false}가 온다.\r\n          // .then((response) => {\r\n          //   console.log(response); // response.data로 해야?\r\n          // })\r\n          .then((result) => {\r\n            dispatch(loginRequestAction())\r\n            setUserId(result.data.userId);\r\n            setUserName(result.data.userName);\r\n            closeModal();\r\n            // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n            // history.replace('/login');\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.data.message == \"already exist\") {\r\n              alert(\"이미 존재하는 이메일입니다.\");\r\n            } else {\r\n              alert(\"회원가입이 정상적으로 되지 않았습니다.\");\r\n            }\r\n          });\r\n      }\r\n      // if (!term) {\r\n      //   return setTermError(true);\r\n      // }\r\n    },\r\n    [API, dispatch, setUserId, setUserName, email, password, passwordCheck, nickname]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\" sx={{ textAlign: \"center\" }}>\r\n          회원가입\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          // error={checkEmail(email)}\r\n          onChange={onChangeEmail}\r\n        />\r\n        {emailError && (\r\n          <span style={{ color: \"red\" }}>Email 형식이 잘못되었습니다</span>\r\n        )}\r\n        <TextField\r\n          label=\"이름\"\r\n          name=\"user-nick\"\r\n          sx={{ marginTop: 3 }}\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          onChange={onChangeNickname}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          fullWidth\r\n          name=\"user-password\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={password}\r\n          required\r\n          onChange={onChangePassword}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호체크\"\r\n          fullWidth\r\n          name=\"user-password-check\"\r\n          sx={{ marginTop: 3 }}\r\n          type=\"password\"\r\n          value={passwordCheck}\r\n          required\r\n          onChange={setPasswordCheck}\r\n        />\r\n        {passwordError && (\r\n          <span style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다</span>\r\n        )}\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n        >\r\n          확인\r\n        </Button>\r\n        {/* </form> */}\r\n      </Box>\r\n      {/* <Button onClick={closeModal}>닫기</Button> */}\r\n    </Modal>\r\n    // {/* <div className={\"container\"} ref={modalRef}>\r\n    //       {/* <label htmlFor=\"user-email\">이메일</label>\r\n    //       <br />\r\n    //       <input name=\"user-email\" type=\"email\" value={email} required onChange={ (e) => {onChangeEmail(e.target.value)}} /> */}\r\n    //     </TextField>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-nick\">닉네임</label>\r\n    //       <br />\r\n    //       <input name=\"user-nick\" value={nickname} required onChange={(e) => {onChangeNickname(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password\">비밀번호</label>\r\n    //       <br />\r\n    //       <input name=\"user-password\" type=\"password\" value={password} required onChange={(e) => {onChangePassword(e.target.value)}} />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n    //       <br />\r\n    //       <input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={(e) => {setPasswordCheck(e.target.value)}} />\r\n\r\n    //       {/* {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>} */}\r\n    //     </div>\r\n    //     {/* <div>\r\n    //       <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n    //       {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n    //     </div> */}\r\n    //     <div style={{ marginTop: 10 }}>\r\n    //       <button>가입하기</button>\r\n    //     </div>\r\n    //     <button className={\"close\"} onClick={closeModal}>\r\n    //         X\r\n    //     </button>\r\n    //   </div> */}\r\n    // }\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  ChangeEvent,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ReactElement,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport Image from \"next/image\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Router from \"next/router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  addPost,\r\n  ADD_POST_REQUEST,\r\n  EDIT_POST_REQUEST,\r\n  EDIT_POST_WITH_IMAGES_REQUEST,\r\n  GET_HASHTAGS_REQUEST,\r\n  loadPost,\r\n  TOGGLE_ADD_POST_DONE_REQUEST,\r\n  TOGGLE_EDIT_POST_DONE_REQUEST,\r\n  TOGGLE_EDIT_POST_WITH_IMAGES_DONE_REQUEST,\r\n} from \"@/reducers/post\";\r\nimport { and } from \"sequelize\";\r\nconst fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"JPEG\"];\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype UploadProps = {\r\n  setImageIndex : any;\r\n  setuploadModalOpen: any;\r\n  uploadModalOpen: boolean;\r\n  isEdit: boolean;\r\n  setIsEdit: any;\r\n  postId: number | null;\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ninterface postType {\r\n  title: string;\r\n  desc: string;\r\n  photos: [];\r\n}\r\n\r\ninterface IFileTypes {\r\n  id: number;\r\n  object: File;\r\n}\r\nexport default function Upload(props: UploadProps) {\r\n  const dispatch = useDispatch();\r\n  const [isInitialOpen, setIsInitialOpen] = useState(true);\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n  const { hashtags } = useSelector((state: any) => state.post);\r\n\r\n  const [file, setFile] = useState({ name: \"\" });\r\n  const [imageFile, setImageFile] = useState<any>();\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [reason, onChangeReason, setReason] = useInput(\"\");\r\n  const [brand, onChangeBrand, setBrand] = useInput(\"\");\r\n  const [link, onChangeLink, setLink] = useInput(\"\");\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n  const { addPostLoading } = useSelector((state: any) => state.post);\r\n  const { addPostDone } = useSelector((state: any) => state.post);\r\n  const { editPostDone } = useSelector((state: any) => state.post);\r\n  const { editPostWithImagesDone } = useSelector((state: any) => state.post);\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    photos: [null],\r\n  });\r\n  const closeModal = useCallback(() => {\r\n    props.setuploadModalOpen(false);\r\n  }, []);\r\n\r\n  const { title, desc, photos } = post;\r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n  const inputRef = useRef(null);\r\n  const [category, setCategory] = React.useState(\"상의\");\r\n  const [season, setSeason] = React.useState(\"23SS\");\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n  const [cardPost, setCardPost] = useState([]);\r\n\r\n  const handleCategoryChange = (event: SelectChangeEvent) => {\r\n    setCategory(event.target.value as string);\r\n  };\r\n  const handleSeasonChange = (event: SelectChangeEvent) => {\r\n    setSeason(event.target.value as string);\r\n  };\r\n  const handlefilechange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let files = e.target.files;\r\n    handfiles(files);\r\n  };\r\n  const handfiles = (files: FileList | null) => {\r\n    let photosArr: any[] = [];\r\n    let fileArr: any[] = [];\r\n    if (files != undefined) {\r\n      setIsImage(true);\r\n      for (let i = 0; i < files.length; i++) {\r\n        let file = files[i];\r\n        fileArr.push(file);\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.addEventListener(\"load\", () => {\r\n          let fileobj = {\r\n            name: file.name,\r\n            type: file.type,\r\n            size: file.size,\r\n            src: reader.result,\r\n          };\r\n          photosArr.push(fileobj);\r\n          setPost({\r\n            ...post,\r\n            photos: [...photos, ...photosArr],\r\n          });\r\n        });\r\n      }\r\n      setImageFile(fileArr);\r\n    }\r\n  };\r\n\r\n  const handeldelete = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    let target = (e.target as HTMLSpanElement).parentElement;\r\n    let targetindex = 1;\r\n    setPost({\r\n      ...post,\r\n      photos: [\r\n        ...photos.slice(0, targetindex),\r\n        ...photos.slice(targetindex + 1),\r\n      ],\r\n    });\r\n\r\n    // setImageFile( (prev) => prev.filter())\r\n\r\n    //이미지 다 없어지면 다시 업로드 창 뜨도록\r\n    if (post.photos.length == 2) {\r\n      //랜더링 되기 전이라 2\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  const handlehighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  }, []);\r\n\r\n  const handleunhighlight = useCallback((e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(false);\r\n  }, []);\r\n  const handledrop = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let dt = e.dataTransfer;\r\n    let files = dt?.files;\r\n    setHighlight(false);\r\n    handfiles(files);\r\n  };\r\n\r\n  const [hashTags, setHashTags] = React.useState({\r\n    data: [{ name: \"\" }],\r\n  });\r\n\r\n  const getHashtags = useCallback(() => {\r\n    dispatch({\r\n      type: GET_HASHTAGS_REQUEST,\r\n    });\r\n    setShowHashModalOpen(true);\r\n  }, [dispatch]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      if (brand == \"\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        alert(\"브랜드입력 필수\");\r\n      } else {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        //수정일 때\r\n        if (props.isEdit) {\r\n          //이미지 새로 올렸을 때\r\n          if (imageFile) {\r\n            const formData = new FormData();\r\n            [].forEach.call(imageFile, (f) => {\r\n              formData.append(\"image\", f);\r\n            });\r\n            // formData.append(\"image\", imageFile as File);\r\n            formData.append(\"postId\", props.postId?.toString() as string);\r\n            formData.append(\"brand\", brand.replace(\" \", \"\"));\r\n            formData.append(\"link\", link);\r\n            formData.append(\"category\", category);\r\n            formData.append(\"season\", season);\r\n            formData.append(\"hashtag\", text);\r\n            formData.append(\"reason\", reason);\r\n            dispatch({\r\n              type: EDIT_POST_WITH_IMAGES_REQUEST,\r\n              data: formData,\r\n            });\r\n\r\n          } else {\r\n            if (post.photos.length == 1) {\r\n              alert(\"이미지 필수\");\r\n              return;\r\n            }\r\n\r\n            const formData = new FormData();\r\n            [].forEach.call(post.photos, (f: any, index) => {\r\n              if (index != 0) formData.append(\"imagePath\", f.src);\r\n            });\r\n            // formData.append(\"image\", imageFile as File);\r\n\r\n            formData.append(\"postId\", props.postId?.toString() as string);\r\n            formData.append(\"brand\", brand.replace(\" \", \"\"));\r\n            formData.append(\"link\", link);\r\n            formData.append(\"category\", category);\r\n            formData.append(\"season\", season);\r\n            formData.append(\"hashtag\", text);\r\n            formData.append(\"reason\", reason);\r\n            dispatch({\r\n              type: EDIT_POST_REQUEST,\r\n              data: formData,\r\n            });\r\n          }\r\n        }\r\n        //수정 아닐 떄\r\n        else {\r\n          if (!imageFile) {\r\n            alert(\"이미지 필수\");\r\n            return;\r\n          }\r\n          const formData = new FormData();\r\n          [].forEach.call(imageFile, (f) => {\r\n            formData.append(\"image\", f);\r\n          });\r\n          // formData.append(\"image\", imageFile as File);\r\n          formData.append(\"userId\", user.id);\r\n          formData.append(\"userName\", user.userName);\r\n          formData.append(\"brand\", brand.replace(\" \", \"\"));\r\n          formData.append(\"link\", link);\r\n          formData.append(\"category\", category);\r\n          formData.append(\"season\", season);\r\n          formData.append(\"hashtag\", text);\r\n          formData.append(\"reason\", reason);\r\n          dispatch(addPost(formData));\r\n        }\r\n\r\n        // dispatch({\r\n        //   type: ADD_POST_REQUEST,\r\n        //   data : formData\r\n        // });\r\n\r\n        // axios\r\n        //   .post(API, formData)\r\n        //   .then((result) => {\r\n        //     dispatch(addPost(result));\r\n        //     console.log(result);\r\n        //     location.reload();\r\n        //   })\r\n        //   .catch((err) => {\r\n        //     console.log(err);\r\n        //     location.reload();\r\n        //   });\r\n      }\r\n    },\r\n    [\r\n      brand,\r\n      category,\r\n      season,\r\n      text,\r\n      reason,\r\n      link,\r\n      user,\r\n      dispatch,\r\n      imageFile,\r\n      post.photos,\r\n      props.isEdit,\r\n      props.postId,\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n\r\n    if (addPostDone) {\r\n      dispatch({\r\n        type:TOGGLE_ADD_POST_DONE_REQUEST,\r\n      });\r\n      closeModal();\r\n    }\r\n    if (editPostDone) {\r\n      dispatch({\r\n        type:TOGGLE_EDIT_POST_DONE_REQUEST,\r\n      });\r\n      closeModal();\r\n      props.setIsEdit(false);\r\n      if(props.setImageIndex)\r\n         props.setImageIndex(0);\r\n    }\r\n    if (editPostWithImagesDone) {\r\n      dispatch({\r\n        type:TOGGLE_EDIT_POST_WITH_IMAGES_DONE_REQUEST,\r\n      });\r\n      closeModal();\r\n      props.setIsEdit(false);\r\n      if(props.setImageIndex)\r\n         props.setImageIndex(0);\r\n    }\r\n\r\n\r\n  }, [addPostDone, dispatch, closeModal, editPostDone,props.setIsEdit, editPostWithImagesDone]);\r\n\r\n  useEffect(() => {\r\n    console.log(props.isEdit)\r\n    if (props.isEdit) {\r\n      const targetPost = postArray.find(\r\n        (post: any) => post.id === props.postId\r\n      );\r\n      setCardPost(targetPost.Images);\r\n      let postHashtags = \"\";\r\n      if (targetPost.Hashtags) {\r\n        targetPost.Hashtags.map(\r\n          (hashtag: any) =>\r\n            (postHashtags = postHashtags.concat(`#${hashtag?.name} `))\r\n        );\r\n      }\r\n      for (let i = 0; i < targetPost.Hashtags.length; i++) {\r\n        postHashtags.concat(`#${targetPost.Hashtags[i].name} `);\r\n      }\r\n      setCategory(targetPost.category);\r\n      setSeason(targetPost.season);\r\n      setText(postHashtags);\r\n      setBrand(targetPost.brand);\r\n      setReason(targetPost.reason);\r\n      setLink(targetPost.link);\r\n      setIsImage(true);\r\n      setPost({\r\n        ...post,\r\n        photos: photos.concat(targetPost.Images),\r\n      });\r\n    }\r\n  }, [props.isEdit, postArray]);\r\n\r\n\r\n  return (\r\n    <>\r\n      {showHashModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closehashtagsModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <div\r\n              className=\"hashlistdiv\"\r\n              style={{ height: \"300px\", overflow: \"overlay\" }}\r\n            >\r\n              {hashtags &&\r\n                hashtags.map((hashtag: any, index: number) => (\r\n                  <li id=\"hashlist\" key={index} style={{ listStyle: \"none\" }}>\r\n                    {\" \"}\r\n                    #{hashtag.name}\r\n                  </li>\r\n                ))}\r\n            </div>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closehashtagsModal}\r\n            >\r\n              확인\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Modal\r\n        open={true}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box\r\n          component=\"form\"\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          onSubmit={onSubmit}\r\n          sx={style}\r\n        >\r\n          {/* <form onSubmit={onSubmit}> */}\r\n          <Typography sx={{ textAlign: \"center\" }} component=\"h1\" variant=\"h5\">\r\n            업로드\r\n          </Typography>\r\n          {/* <TextField\r\n          label=\"이름\"\r\n          sx={{marginTop : \"5px\"}}\r\n          name=\"user-nick\"\r\n          fullWidth\r\n          value={nickname}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeNickname}\r\n        /> */}\r\n          <TextField\r\n            required\r\n            label=\"브랜드\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-brand\"\r\n            type=\"text\"\r\n            value={brand}\r\n            variant=\"standard\"\r\n            onChange={onChangeBrand}\r\n          />\r\n          <TextField\r\n            label=\"Link\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={link}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeLink}\r\n          />\r\n\r\n          <TextField\r\n            label=\"선정이유\"\r\n            fullWidth\r\n            sx={{ marginTop: \"5px\" }}\r\n            name=\"user-link\"\r\n            type=\"text\"\r\n            value={reason}\r\n            required\r\n            variant=\"standard\"\r\n            onChange={onChangeReason}\r\n          />\r\n\r\n          <FormControl\r\n            sx={{ width: \"40%\", marginRight: \"10%\", marginTop: \"25px\" }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-label\">상의</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"상의\"}\r\n              value={category}\r\n              label=\"카테고리\"\r\n              required\r\n              onChange={handleCategoryChange}\r\n            >\r\n              <MenuItem value={\"상의\"}>상의</MenuItem>\r\n              <MenuItem value={\"하의\"}>하의</MenuItem>\r\n              <MenuItem value={\"아우터\"}>아우터</MenuItem>\r\n              <MenuItem value={\"디테일\"}>디테일</MenuItem>\r\n              <MenuItem value={\"이미지\"}>이미지</MenuItem>\r\n              <MenuItem value={\"악세사리\"}>악세사리</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl sx={{ width: \"40%\", marginTop: \"25px\" }}>\r\n            <InputLabel id=\"demo-simple-select-label\">23SS</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              defaultValue={\"23SS\"}\r\n              value={season}\r\n              label=\"시즌\"\r\n              required\r\n              onChange={handleSeasonChange}\r\n            >\r\n              <MenuItem value={\"23SS\"}>23SS</MenuItem>\r\n              <MenuItem value={\"23FW\"}>23FW</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            sx={{ marginTop: \"30px\" }}\r\n            value={text}\r\n            onChange={onChangeText}\r\n            fullWidth\r\n            label=\"해시태그입력 #검정 #반팔 \"\r\n            variant=\"outlined\"\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          {/* <FileUploader\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n         ><div><p>this is inside drop area</p></div></FileUploader> */}\r\n          <div className=\"file-upload\" style={{ marginTop: \"10px\" }}>\r\n            <div className=\"custom-form-group\">\r\n              {!isImage && (\r\n                <div\r\n                  className={\r\n                    highlight\r\n                      ? \"custom-file-drop-area highlight\"\r\n                      : \"custom-file-drop-area\"\r\n                  }\r\n                  onDragEnter={handlehighlight}\r\n                  onDragOver={handlehighlight}\r\n                  onDragLeave={handleunhighlight}\r\n                  onDrop={handledrop}\r\n                >\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"photos\"\r\n                    placeholder=\"Enter photos\"\r\n                    multiple={false}\r\n                    id=\"filephotos\"\r\n                    onChange={handlefilechange}\r\n                  />\r\n                  <label htmlFor=\"filephotos\">\r\n                    이미지를 드래그해서 넣어주세요\r\n                  </label>\r\n                </div>\r\n              )}\r\n              <div className=\"custom-file-preview\">\r\n                {photos.length > 0 &&\r\n                  photos.map((item: any, index) =>\r\n                    index != 0 ? (\r\n                      <div className=\"prev-img\" key={index}>\r\n                        <span onClick={handeldelete}>&times;</span>\r\n                        {item && <img src={item.src} alt={item.name} />}\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )\r\n                  )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            id=\"submit_bt\"\r\n            style={{ display: \"none\" }}\r\n            type=\"submit\"\r\n          ></button>\r\n          <LoadingButton\r\n            type=\"submit\"\r\n            loading={addPostLoading}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            size=\"large\"\r\n            // loading={true}\r\n          >\r\n            확인\r\n          </LoadingButton>\r\n          {/* </form> */}\r\n        </Box>\r\n        {/* <Button onClick={closeModal}>닫기</Button> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { HtmlHTMLAttributes, ReactElement } from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginRequestAction } from \"@/reducers/user\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\ntype LoginFormProps = {\r\n  setloginModalOpen: any;\r\n  loginModalOpen : boolean;\r\n};\r\nexport default function LoginForm({\r\n  setloginModalOpen,\r\n  loginModalOpen,\r\n}: LoginFormProps): ReactElement {\r\n  \r\n  const dispatch = useDispatch();\r\n  const [isInitialOpen, setIsInitialOpen]= useState(true);\r\n  const {logInLoading} = useSelector((state : any) => state.user)\r\n  const {logInError} = useSelector((state : any) => state.user)\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n\r\n  const closeModal = () => {\r\n    setloginModalOpen(false);\r\n  };\r\n  const onSubmitForm = useCallback(\r\n    (event: any) => {\r\n      event.preventDefault();\r\n      if (email == \"\") {\r\n        alert(\"이메일을 입력해주세요\");\r\n      } else if (password == \"\") {\r\n        alert(\"비밀번호를 입력해주세요\");\r\n      } else {\r\n        dispatch(loginRequestAction({email,password}))\r\n        // setloginModalOpen(false);\r\n        // axios\r\n        //   .post(\r\n        //     LOGINAPI,\r\n        //     // 클라이언트에서 서버로 request(요청)하며 보내주는 데이터\r\n        //     // 회원가입창에서 클라이언트가 입력하는 데이터\r\n        //     {\r\n        //       email: email,\r\n        //       password: password, // 숫자, 영어 대문자, 소문자, 특수기호, 8-20자  1234567#Aaa\r\n        //     },\r\n        //     {\r\n        //       headers: {\r\n        //         \"Content-Type\": \"application/json\",\r\n        //         // 'Accept': 'application/json',\r\n        //       },\r\n        //     }\r\n        //   )\r\n        //   .then((result) => {\r\n        //     setUser(result.data.data);\r\n        //     console.log(\"dispatch\");\r\n        //     dispatch(loginRequestAction(\"usersample\"));\r\n        //     // setIsLoggedIn(true);\r\n        //     setUserId(result.data.data.id);\r\n        //     setUserName(result.data.data.name);\r\n        //     setloginModalOpen(false);\r\n        //     console.log(result.data.data);\r\n        //     // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n        //     // history.replace('/login');\r\n        //   })\r\n        //   .catch((error) => {\r\n        //     alert(\"로그인 정보가 일치하지 않습니다.\");\r\n        //     setloginModalOpen(false);\r\n        //     console.log(error);\r\n        //   });\r\n      }\r\n    },\r\n    [email, password, dispatch]\r\n  );\r\n\r\n  useEffect(()=>{\r\n    if(!logInLoading && !isInitialOpen){\r\n      setloginModalOpen(false);\r\n    }\r\n    setIsInitialOpen(false);\r\n\r\n  },[logInLoading])\r\n\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmitForm}\r\n        sx={style}\r\n      >\r\n        {/* <form onSubmit={onSubmit}> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <TextField\r\n          label=\"이메일\"\r\n          name=\"user-email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          value={email}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangeEmail}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          name=\"user-nick\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={password}\r\n          required\r\n          variant=\"standard\"\r\n          onChange={onChangePassword}\r\n        />\r\n        {logInError && <span style={{marginTop:\"10px\", color:\"#F73334\"}}> 로그인 정보가 일치하지 않습니다.</span>}\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          size=\"large\"\r\n          loading={logInLoading}\r\n        >\r\n          로그인\r\n        </LoadingButton>\r\n        {/* </form> */}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { HASHTAG_SEARCH_REQUEST, loadPost } from \"@/reducers/post\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {useEffect, useRef} from 'react';\r\n\r\ntype SearchbarProps = {};\r\n\r\nexport default function Searchbar({}: SearchbarProps) {\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (searchBar.current) {\r\n      searchBar.current.focus();\r\n    }\r\n  }, []);\r\n\r\n\r\n  const TagSearch = React.useCallback(\r\n    (e: any) => {\r\n      // e.preventDeafult();\r\n      // e.stopPropagation();\r\n      if (value == \"\") {\r\n        dispatch(loadPost())\r\n      } else if (value.split(\"#\").length < 2) {\r\n        alert(\"태그 앞에 #를 붙여주세요\");\r\n      } else {\r\n        let upperCaseValue = value.toUpperCase();\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        dispatch({\r\n          type: HASHTAG_SEARCH_REQUEST,\r\n          data: {\r\n            hashtags: \"#\" + upperCaseValue,\r\n          }\r\n        })\r\n      }\r\n    },\r\n    [dispatch, value]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={TagSearch}\r\n        style={{ width: \"70%\", flex: \"auto\", marginLeft: \"15%\" }}\r\n      >\r\n        <IconButton\r\n          type=\"submit\"\r\n          aria-label=\"search\"\r\n          sx={{ display: { xs: \"none\", md: \"inline-block\" } }}\r\n        >\r\n          <SearchIcon style={{ fill: \"#9A9A9A\" }} />\r\n        </IconButton>\r\n        <TextField\r\n          id=\"search-bar\"\r\n          className=\"text\"\r\n          sx={{ display: \"inline-block\", width: \"80%\" }}\r\n          value={value}\r\n          onChange={onChangeValue}\r\n          label=\"#상의 #검정\"\r\n          variant=\"outlined\"\r\n          placeholder=\"Search...\"\r\n          size=\"small\"\r\n          inputRef={searchBar}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { Inter } from \"@next/font/google\";\r\nimport * as React from \"react\";\r\nimport { HtmlHTMLAttributes, ReactElement, useRef } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport Signup from \"@/Components/Signup\";\r\nimport Upload from \"@/Components/Upload\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"@/Components/LoginForm\";\r\nimport LoginForm from \"@/Components/LoginForm\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginRequestAction, logoutRequestAction } from \"@/reducers/user\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { GET_HASHTAGS_REQUEST } from \"@/reducers/post\";\r\n\r\nconst style: React.CSSProperties = {\r\n  background: \"#0092ff\",\r\n  padding: \"8px 0\",\r\n  margin: \"16px auto\",\r\n  height: \"54px\",\r\n};\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\ntype NavbarProps = {\r\n  userId: string;\r\n  setUserId: any;\r\n  userName: string;\r\n  setUserName: any;\r\n};\r\n\r\nexport default function Navbar({\r\n  userId,\r\n  setUserId,\r\n  userName,\r\n  setUserName,\r\n}: NavbarProps): ReactElement {\r\n\r\n  //redux\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { logOutLoading } = useSelector((state: any) => state.user);\r\n  const { hashtags } = useSelector((state: any) => state.post);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const GETHASHAPI = `${process.env.NEXT_PUBLIC_API}/getHash`;\r\n  const [uploadModalOpen, setuploadModalOpen] = React.useState(false);\r\n  const [loginModalOpen, setloginModalOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [showHashModalOpen, setShowHashModalOpen] = React.useState(false);\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const closehashtagsModal = () => {\r\n    setShowHashModalOpen(false);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const showLoginModal = () => {\r\n    setloginModalOpen(true);\r\n  };\r\n\r\n  const showUploadModal = () => {\r\n    setuploadModalOpen(true);\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const Logout = useCallback(() => {\r\n    dispatch(logoutRequestAction());\r\n\r\n    //왜인지 모르겠는데 로그아웃 후 모달 켜짐\r\n    setloginModalOpen(false);\r\n\r\n    // const LOGOUTAPI = `${process.env.NEXT_PUBLIC_API}/logout`;\r\n    // axios\r\n    //   .get(LOGOUTAPI)\r\n    //   .then((result) => {\r\n    //     if (result.data.message == \"ok\")\r\n    //       //dispatch\r\n    //     // setloginModalOpen(false);\r\n    //   })\r\n    //   .catch((err) => {alert(\"서버와 연결 끊겼네요. 새로고침.!\")});\r\n  }, [dispatch]);\r\n\r\n  const uploadClick = useCallback(() => {\r\n    if (user) {\r\n      setuploadModalOpen(true);\r\n    } else {\r\n      setloginModalOpen(true);\r\n      // setIsEdit(true);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onReady = useCallback(() => {\r\n    alert(\"준비중입니다.\");\r\n  }, []);\r\n\r\n  const getHashtags = useCallback(() => {\r\n    //dispatch\r\n    dispatch({\r\n      type: GET_HASHTAGS_REQUEST,\r\n    });\r\n    setShowHashModalOpen(true);\r\n\r\n    // axios\r\n    // .get(GETHASHAPI)\r\n    // .then((result) => {\r\n    //   setShowHashModalOpen(true);\r\n    //   setHashTags(result)\r\n    //   // window.alert('회원가입이 되었습니다! 로그인 해주세요.');\r\n    //   // history.replace('/login');\r\n    // })\r\n    // .catch((error) => {\r\n    //   alert(\"포스팅 불러오기 정상적으로 되지 않았습니다.\");\r\n    // });\r\n  }, [dispatch]);\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <p>만드는 중입니다</p>\r\n      </MenuItem>\r\n      {/* <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>프로필</p>\r\n      </MenuItem> */}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {!user && isModalOpen && (\r\n        <Signup\r\n          isModalOpen={isModalOpen}\r\n          setIsModalOpen={setIsModalOpen}\r\n          userId={userId}\r\n          setUserId={setUserId}\r\n          userName={userName}\r\n          setUserName={setUserName}\r\n        />\r\n      )}\r\n      {user && uploadModalOpen && (\r\n        <Upload\r\n          setImageIndex={null}\r\n          uploadModalOpen={uploadModalOpen}\r\n          setuploadModalOpen={setuploadModalOpen}\r\n          isEdit={isEdit}\r\n          setIsEdit={setIsEdit}\r\n          postId={null}\r\n        />\r\n      )}\r\n      {!user && loginModalOpen && (\r\n        <LoginForm\r\n          loginModalOpen={loginModalOpen}\r\n          setloginModalOpen={setloginModalOpen}\r\n        />\r\n      )}\r\n      {showHashModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closehashtagsModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <div\r\n              className=\"hashlistdiv\"\r\n              style={{ height: \"300px\", overflow: \"overlay\" }}\r\n            >\r\n              {hashtags &&\r\n                hashtags.map((hashtag: any, index: any) => (\r\n                  <li\r\n                    id=\"hashlist\"\r\n                    key={hashtag.id}\r\n                    style={{ listStyle: \"none\", marginBottom: \"5px\" }}\r\n                  >\r\n                    {\" \"}\r\n                    #{hashtag.name}\r\n                  </li>\r\n                ))}\r\n            </div>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closehashtagsModal}\r\n            >\r\n              확인\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"#FFF\", color: \"#000\" }}\r\n      >\r\n        <Toolbar>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              // height: \"60%\",\r\n              whiteSpace: \"nowrap\",\r\n              marginRight: \"5px\",\r\n              fontWeight: \"bold\",\r\n              display: \"inline-block\",\r\n            }}\r\n            size=\"small\"\r\n            onClick={getHashtags}\r\n          >\r\n            #목록\r\n          </Button>\r\n          <Typography\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          ></Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Searchbar />\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }} />\r\n\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            <>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                sx={{ marginRight: \"10px\" }}\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"false\"\r\n                color=\"primary\"\r\n                onClick={uploadClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </>\r\n            {!user ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={showLoginModal}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"40%\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                  onClick={showModal}\r\n                  size=\"small\"\r\n                >\r\n                  가입\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <LoadingButton\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    // height: \"60%\",\r\n                    width: \"100%\",\r\n                    marginRight: \"5px\",\r\n                    fontWeight: \"bold\",\r\n                    display: \"inline-block\",\r\n                    whiteSpace: \"nowrap\",\r\n                  }}\r\n                  size=\"small\"\r\n                  onClick={Logout}\r\n                  loading={logOutLoading}\r\n                >\r\n                  로그아웃\r\n                </LoadingButton>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"primary\"\r\n                  onClick={onReady}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" }, float: \"right\" }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"primary\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft';\r\nimport Brightness1RoundedIcon from '@mui/icons-material/Brightness1Rounded';\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  DELETE_POST_REQUEST,\r\n  DUPLICATE_POST_REQUEST,\r\n  HASHTAG_SEARCH_REQUEST,\r\n  LIKE_POST_REQUEST,\r\n  loadPost,\r\n  UNLIKE_POST_REQUEST,\r\n} from \"@/reducers/post\";\r\nimport FavoriteBorderTwoToneIcon from \"@mui/icons-material/FavoriteBorderTwoTone\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport Upload from \"./Upload\";\r\n\r\ntype CardpostProps = {\r\n  index: number;\r\n  // posts: any[];\r\n  category: string;\r\n  id: number;\r\n  brand: string;\r\n  link: string;\r\n  Images: {\r\n    src: string;\r\n  }[];\r\n  season: string;\r\n  reason: string;\r\n  name: string;\r\n  hashtags: {\r\n    PostHashtag: {\r\n      HashtagId: number;\r\n    };\r\n    name: string;\r\n  }[];\r\n  likers: any[];\r\n};\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst StyledCardAction = styled(CardActions)`\r\n  display: flex;\r\n  -webkit-box-align: center;\r\n  align-items: center;\r\n  padding: 8px;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport default function Cardpost(props: CardpostProps) {\r\n  const { logInDone } = useSelector((state: any) => state.user);\r\n  const { user } = useSelector((state: any) => state.user);\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n  const dispatch = useDispatch();\r\n  // const isLoggedIn = false;\r\n  const [like, setLike] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [likeClick, setLikeClick] = useState(props.likers?.length || 0);\r\n  const [loginModalOpen, setIsLoginFormOpen] = useState(false);\r\n  const [isUploadFormOpen, setIsUploadFormOpen] = useState(false);\r\n  const [imageIndex, setImageIndex] = useState(0);\r\n\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [ImagePath, setImagePath] = React.useState(\"\");\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    if (user) {\r\n      setLike((prev) => !prev);\r\n\r\n      if (!like) {\r\n        dispatch({\r\n          type: LIKE_POST_REQUEST,\r\n          data: props.id,\r\n        });\r\n        setLikeClick((prev) => prev + 1);\r\n      } else {\r\n        dispatch({\r\n          type: UNLIKE_POST_REQUEST,\r\n          data: props.id,\r\n        });\r\n        setLikeClick((prev) => prev - 1);\r\n      }\r\n    } else {\r\n      alert(\"로그인 해주세요\");\r\n      setIsLoginFormOpen(true);\r\n      //로그인 모달 띄우기 넣어야\r\n    }\r\n  }, [user, like, props.id]);\r\n\r\n  const delClick = useCallback(() => {\r\n    if (user) {\r\n      setModalOpen(true);\r\n    } else {\r\n      alert(\"로그인 해주세요\");\r\n      setIsLoginFormOpen(true);\r\n      //로그인 모달 띄우기 넣어야\r\n    }\r\n  }, [user]);\r\n\r\n  const duplicateClick = useCallback(() => {\r\n    if (!user) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n\r\n    return dispatch({\r\n      type: DUPLICATE_POST_REQUEST,\r\n      data: props.id,\r\n    });\r\n  }, [dispatch, props.id, user]);\r\n\r\n  const onSubmit = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      if (!user) {\r\n        return alert(\"로그인이 필요합니다.\");\r\n      }\r\n\r\n      return dispatch({\r\n        type: DELETE_POST_REQUEST,\r\n        data: props.id,\r\n      });\r\n    },\r\n    [dispatch, props.id, user]\r\n  );\r\n\r\n  const editClick = useCallback(() => {\r\n    if (!user) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n    setIsUploadFormOpen(true);\r\n    setIsEdit(true);\r\n\r\n    // alert(\"준비중입니다.\");\r\n  }, [props.id, user, setIsUploadFormOpen]);\r\n\r\n  useEffect(() => {\r\n    if (props.Images[imageIndex] == undefined) {\r\n    } else {\r\n      // console.log(\"props\")\r\n      // console.log(props)\r\n      setImagePath(`../${props.Images[imageIndex].src}`);\r\n    }\r\n  }, [props.Images,imageIndex]);\r\n\r\n  const onClickRightArrow = useCallback(()=>{\r\n    if(imageIndex < props.Images.length){\r\n      setImageIndex((prev)=> prev+1)\r\n    }\r\n  },[props.Images, imageIndex])\r\n  \r\n  const onClickLeftArrow = useCallback(()=>{\r\n    if(imageIndex > 0){\r\n      setImageIndex((prev)=> prev-1)\r\n    }\r\n  },[imageIndex])\r\n\r\n\r\n  const TagClick = React.useCallback(\r\n    (e: any, hashname: string) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      dispatch({\r\n        type: HASHTAG_SEARCH_REQUEST,\r\n        data: {\r\n          hashtags: \"#\" + hashname,\r\n        },\r\n      });\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    },\r\n    [dispatch, props]\r\n  );\r\n\r\n  useEffect(() => {\r\n    //like 눌렀는지\r\n    if (user?.data && props.likers) {\r\n      const isUserLiked = props.likers.find((v) => v.id === user?.data.id);\r\n      if (isUserLiked) setLike(true);\r\n      else setLike(false);\r\n    }\r\n  }, [props.likers, user, props.id, logInDone]);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {isUploadFormOpen && (\r\n        <Upload\r\n          setImageIndex ={setImageIndex}\r\n          setuploadModalOpen={setIsUploadFormOpen}\r\n          uploadModalOpen={isUploadFormOpen}\r\n          isEdit={isEdit}\r\n          setIsEdit ={setIsEdit}\r\n          postId={props.id}\r\n        />\r\n      )}\r\n      {loginModalOpen && (\r\n        <LoginForm\r\n          loginModalOpen={loginModalOpen}\r\n          setloginModalOpen={setIsLoginFormOpen}\r\n        />\r\n      )}\r\n      {modalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closeModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={onSubmit}\r\n            sx={style}\r\n          >\r\n            {/* <form onSubmit={onSubmit}> */}\r\n            <Typography\r\n              component=\"h2\"\r\n              variant=\"h5\"\r\n              sx={{ textAlign: \"center\", marginBottom: \"15px\" }}\r\n            >\r\n              정말 삭제하시겠습니까?\r\n            </Typography>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              sx={{\r\n                mt: 3,\r\n                mb: 2,\r\n                width: \"40%\",\r\n                marginLeft: \"5%\",\r\n                marginRight: \"10%\",\r\n              }}\r\n              size=\"large\"\r\n            >\r\n              삭제\r\n            </Button>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2, width: \"40%\" }}\r\n              size=\"large\"\r\n              onClick={closeModal}\r\n            >\r\n              취소\r\n            </Button>\r\n            {/* </form> */}\r\n          </Box>\r\n          {/* <Button onClick={closeModal}>닫기</Button> */}\r\n        </Modal>\r\n      )}\r\n      <Card\r\n        sx={{\r\n          maxWidth: \"15\",\r\n          marginTop: \"20px\",\r\n          // borderRadius: \"24px\",\r\n          boxShadow: \"none\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        {/* <Typography>\r\n          <span style={{ float: \"left\", color: \"#A6A6A6\", fontSize: \"80%\" }}>\r\n            {props.name}문병욱\r\n          </span>\r\n        </Typography> */}\r\n        <CardActionArea href={`${props.link}`} target=\"_blank\">\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"400\"\r\n            image={ImagePath}\r\n            // alt=\"이미지 오류, 삭제 후 다시 등록해주세요\"\r\n          />\r\n        </CardActionArea>\r\n        {props.Images && props.Images.length > 1 && (\r\n          <>\r\n            <ArrowRightIcon\r\n              onClick={onClickRightArrow}\r\n              style={{ position: \"absolute\", top: \"30%\", right: \"0%\", zIndex: 100, color:\"#3D3D3D\", cursor:\"pointer\"}}\r\n            />\r\n            <Brightness1RoundedIcon \r\n              style={{ position: \"absolute\", top: \"30%\", right: \"0%\", color:\"#B5B5B7\" }}\r\n            />\r\n            <ArrowLeftIcon\r\n              onClick={onClickLeftArrow}\r\n              style={{ position: \"absolute\", top: \"30%\", left: \"0%\", zIndex: 100, color:\"#3D3D3D\",cursor:\"pointer\" }}\r\n            />\r\n            <Brightness1RoundedIcon \r\n              style={{ position: \"absolute\", top: \"30%\", left: \"0%\", color:\"#B5B5B7\" }}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        <CardContent>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              marginBottom: \"3%\",\r\n              display: \"inline-block\",\r\n            }}\r\n          >\r\n            <FileCopyIcon\r\n              id=\"copyicon\"\r\n              onClick={duplicateClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                marginRight: \"17px\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n            <EditIcon\r\n              id=\"editicon\"\r\n              onClick={editClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n            <DeleteIcon\r\n              id=\"delicon\"\r\n              onClick={delClick}\r\n              sx={{\r\n                \":hover\": { opacity: \"50%\" },\r\n                cursor: \"pointer\",\r\n                marginLeft: \"17px\",\r\n                opacity: \"25%\",\r\n                width: \"0.9em\",\r\n              }}\r\n            />\r\n          </div>\r\n          <Typography>\r\n            <span\r\n              style={{\r\n                fontWeight: 900,\r\n                fontSize: \"130%\",\r\n                marginBottom: \"4%\",\r\n              }}\r\n            >\r\n              {`${props.brand}`}\r\n            </span>\r\n          </Typography>\r\n\r\n          {/* <span style={{fontWeight :900, fontSize: \"100%\", marginBottom: 5}}>\r\n            참고할 부분\r\n          </span> */}\r\n          <Typography\r\n            sx={{ fontWeight: 900, marginBottom: \"2%\" }}\r\n            variant=\"subtitle2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            참고할 부분\r\n          </Typography>\r\n\r\n          <Typography\r\n            sx={{ marginBottom: \"1%\" }}\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n          >\r\n            {props.reason}\r\n          </Typography>\r\n        </CardContent>\r\n        <StyledCardAction>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"inline-block\",\r\n              marginBottom: \"5px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: \"20%\",\r\n                marginBottom: \"3%\",\r\n                verticalAlign: \"center\",\r\n                display: \"inline-block\",\r\n                float: \"left\",\r\n              }}\r\n            >\r\n              {like ? (\r\n                <FavoriteIcon\r\n                  onClick={onToggleLike}\r\n                  sx={{ cursor: \"pointer\", opacity: \"80%\", color: \"#FF3040\" }}\r\n                />\r\n              ) : (\r\n                <FavoriteBorderTwoToneIcon\r\n                  onClick={onToggleLike}\r\n                  sx={{ cursor: \"pointer\", opacity: \"40%\" }}\r\n                />\r\n              )}\r\n              <span\r\n                style={{\r\n                  position: \"relative\",\r\n                  top: \"-7px\",\r\n                  marginLeft: \"5px\",\r\n                  color: \"#A6A6A6\",\r\n                }}\r\n              >\r\n                {likeClick ? likeClick : 0}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n          {/* <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`Tag${parseInt(props.season) % 10} Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{season}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div>\r\n        <div style={{ margin: \"2px\" }}>\r\n          <div\r\n            className={`TagCategory Tag`}\r\n            style={{ display: \"inline-block\", margin: \"2px\" }}\r\n          >\r\n            <a href=\"\">#{category}</a>\r\n          </div>{\" \"}\r\n          &nbsp;\r\n        </div> */}\r\n          {props.hashtags.map((hashtag, index) => (\r\n            <div style={{ margin: \"2px\" }} key={index}>\r\n              <div\r\n                className={`Tag${hashtag.PostHashtag.HashtagId % 8} Tag`}\r\n                style={{ display: \"inline-block\", margin: \"2px\" }}\r\n                onClick={(e) => {\r\n                  TagClick(e, hashtag.name);\r\n                }}\r\n              >\r\n                <a href=\"\">#{hashtag.name}</a>\r\n              </div>{\" \"}\r\n              &nbsp;\r\n            </div>\r\n          ))}\r\n\r\n          <div style={{ width: \"100%\" }}>\r\n            <span\r\n              style={{\r\n                float: \"left\",\r\n                color: \"#A6A6A6\",\r\n                fontSize: \"80%\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              작성자 : {props.name}\r\n            </span>\r\n          </div>\r\n        </StyledCardAction>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Cardpost from \"./Cardpost\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { useInput } from \"@mui/base\";\r\nimport axios from \"axios\";\r\nimport Image from \"next/image\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\ntype ResponsiveGridProps = {\r\n};\r\n\r\nexport default function ResponsiveGrid({}: ResponsiveGridProps) {\r\n  const { postArray } = useSelector((state: any) => state.post);\r\n\r\n  useEffect(() => {\r\n  }, [postArray]);\r\n\r\n\r\n\r\n  //check if I like\r\n  return (\r\n    <>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Grid\r\n          container\r\n          spacing={{ xs: 2, md: 3 }}\r\n          columns={{ xs: 4, sm: 8, md: 12 }}\r\n        >\r\n          {postArray &&\r\n            (postArray as Array<any>).map((post, index) => (\r\n              <Grid item xs={6} sm={4} md={3} lg={4} key={post.id}>\r\n                <Item>\r\n                  <li\r\n                    style={{\r\n                      maxWidth: \"320px\",\r\n                      display: \"inline-block\",\r\n                      // marginRight: \"4%\",\r\n                      // marginLeft: \"1%\",\r\n                      // marginTop: \"1%\",-\r\n                    }}\r\n                  >\r\n                    <Cardpost\r\n                      index={index}\r\n                      name={post.name}\r\n                      // posts={postArray}\r\n                      id={post.id}\r\n                      likers={post.Likers}\r\n                      category={post.category}\r\n                      brand={post.brand}\r\n                      Images={post.Images}\r\n                      link={post.link}\r\n                      season={post.season}\r\n                      hashtags={post.Hashtags}\r\n                      reason={post.reason}\r\n                    />{\" \"}\r\n                  </li>\r\n                </Item>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect,useState, useRef } from \"react\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\ntype NoticeModalProps = {};\r\n\r\nconst modalstyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function NoticeModal({}: NoticeModalProps) {\r\n  const [value, onChangeValue] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n  const searchBar = useRef<HTMLInputElement>(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const closeNoticeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    var now = new Date();\r\n    var date = now.getDate();\t// 일\r\n    if(date-30 ==0)\r\n      setIsModalOpen(true)\r\n  },[])\r\n  return (\r\n    <>\r\n      {isModalOpen && (\r\n        <Modal\r\n          open={true}\r\n          onClose={closeNoticeModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={modalstyle}>\r\n            <h1 > 3.30 업데이트 안내 🐇</h1>\r\n            <p style={{marginTop:\"-20px\", marginBottom:\"20px\",color:\"#7F7F7F\"}}> *하루동안 떠요</p>\r\n            <h2 style={{marginBottom:\"10px\"}}> 기능 추가 목록 (5가지) </h2>\r\n            <ol type=\"1\">\r\n              <li style={{marginBottom:\"10px\"}}> 게시글 복제 </li>\r\n              <li style={{marginBottom:\"10px\"}}>  게시글 수정 📌 </li>\r\n              <li style={{marginBottom:\"10px\"}}>  좋아요  </li>\r\n              <li style={{marginBottom:\"10px\"}}>  사진 업로드 여러장 가능 📌 </li>\r\n              <li style={{marginBottom:\"10px\"}}>  작성자 이름 & 브랜드 이름으로 게시물 검색 </li>\r\n            </ol>\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              size=\"large\"\r\n              onClick={closeNoticeModal}\r\n            >\r\n              확인\r\n            </Button>\r\n          </Box>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Inter } from \"@next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport Navbar from \"../Components/Navbar\";\nimport ResponsiveGrid from \"../Components/ResponsiveGrid\";\nimport axios, { AxiosHeaders } from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport {\n  initialState as postinitialState,\n  LOAD_POST_REQUEST,\n  RELOAD_POST_REQUEST,\n} from \"@/reducers/post\";\nimport { initialState as userinitialState } from \"@/reducers/user\";\nimport React, { useCallback, useState, useEffect, useMemo } from \"react\";\nimport { loadPost } from \"@/reducers/post\";\nimport { loadUser } from \"@/reducers/user\";\nimport { useDispatch } from \"react-redux\";\nimport wrapper from \"@/store/configureStore\";\nimport { END } from \"redux-saga\";\nimport NoticeModal from \"@/Components/NoticeModal\";\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie: any = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch(loadPost());\n    context.store.dispatch(loadUser());\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default function Home() {\n  // const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  const { user } = useSelector((state: any) => state.user);\n  const { loadPostLoading } = useSelector((state: any) => state.post);\n  const { onInfiniteScroll } = useSelector((state: any) => state.post);\n  const { hasMorePost } = useSelector((state: any) => state.post);\n  const { postArray } = useSelector((state: any) => state.post);\n  const dispatch = useDispatch();\n\n  const [userId, setUserId] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [resultStore, setResultStore] = useState([]);\n\n  useEffect(() => {\n    function onScroll() {\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 350\n      ) {\n        if (hasMorePost && !loadPostLoading && onInfiniteScroll) {\n          const lastId = postArray[postArray.length - 1].id;\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data: lastId,\n          });\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePost, loadPostLoading, dispatch, postArray, onInfiniteScroll]);\n\n\n\n  const loadPosts = useCallback(() => {\n    dispatch({\n      type: RELOAD_POST_REQUEST,\n    })\n    dispatch(loadPost());\n  }, [dispatch]);\n\n\n  return (\n    <>\n      <Head>\n        <title>Crump REF</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n\n      <NoticeModal />\n      \n      <div style={{ margin: \"auto\", width: \"80%\" }}>\n        <a onClick={loadPosts}>\n          <h1 id=\"title\" style={{ cursor: \"pointer\" }}>\n            CRUMP REFERENCE\n          </h1>\n        </a>\n        <div style={{ marginBottom: \"40px\" }}>\n          <Navbar\n            userId={userId}\n            setUserId={setUserId}\n            userName={userName}\n            setUserName={setUserName}\n          />\n        </div>\n        <ResponsiveGrid />\n        {/* <div>\n          <Stack spacing={2} sx={{alignItems:\"center\", marginTop:\"30px\", marginBottom:\"50px\"}}>\n            <Pagination page={page} count={count} color=\"primary\" onChange={handleChange}/>\n          </Stack>\n        </div> */}\n        {loadPostLoading && <div id=\"bottomloading\" ><span style={{fontSize : \"240%\"}}> 로딩중...</span></div>}\n      </div>\n    </>\n  );\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","useInput","value","setter","useState","initValue","handler","useCallback","e","target","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Signup","param","setIsModalOpen","isModalOpen","userId","setUserId","userName","setUserName","dispatch","useDispatch","API","concat","process","env","NEXT_PUBLIC_API","email","onChangeEmail","emailError","setEmailError","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","checkEmail","res","check","test","closeModal","onSubmit","preventDefault","stopPropagation","axios","name","headers","then","loginRequestAction","result","data","catch","error","response","message","alert","jsx_runtime","jsx","Modal","open","onClose","aria-labelledby","aria-describedby","jsxs","Box","component","noValidate","autoComplete","sx","Typography","variant","textAlign","TextField","label","marginTop","fullWidth","type","required","onChange","span","color","Button","mt","mb","size","modalstyle","Upload","props","isInitialOpen","setIsInitialOpen","user","useSelector","state","postArray","post","hashtags","file","setFile","imageFile","setImageFile","isImage","setIsImage","highlight","setHighlight","reason","onChangeReason","setReason","brand","onChangeBrand","setBrand","link","onChangeLink","setLink","showHashModalOpen","setShowHashModalOpen","React","addPostLoading","addPostDone","editPostDone","editPostWithImagesDone","setPost","title","desc","photos","setuploadModalOpen","closehashtagsModal","useRef","category","setCategory","season","setSeason","text","onChangeText","setText","cardPost","setCardPost","handleCategoryChange","event","handleSeasonChange","handlefilechange","handfiles","files","photosArr","fileArr","undefined","i","length","reader","FileReader","readAsDataURL","addEventListener","fileobj","src","handeldelete","parentElement","slice","targetindex","handlehighlight","handleunhighlight","handledrop","dt","dataTransfer","hashTags","setHashTags","getHashtags","GET_HASHTAGS_REQUEST","isEdit","formData","FormData","forEach","call","append","f","postId","toString","replace","EDIT_POST_WITH_IMAGES_REQUEST","index","EDIT_POST_REQUEST","id","addPost","useEffect","TOGGLE_ADD_POST_DONE_REQUEST","TOGGLE_EDIT_POST_DONE_REQUEST","setIsEdit","setImageIndex","TOGGLE_EDIT_POST_WITH_IMAGES_DONE_REQUEST","console","log","targetPost","find","Images","postHashtags","Hashtags","map","hashtag","Fragment","div","className","height","overflow","li","listStyle","onClick","FormControl","marginRight","InputLabel","Select","labelId","defaultValue","MenuItem","whiteSpace","fontWeight","display","onDragEnter","onDragOver","onDragLeave","onDrop","input","placeholder","multiple","htmlFor","item","img","alt","button","LoadingButton","loading","LoginForm","setloginModalOpen","loginModalOpen","logInLoading","logInError","onSubmitForm","Searchbar","onChangeValue","searchBar","current","focus","TagSearch","loadPost","split","upperCaseValue","toUpperCase","HASHTAG_SEARCH_REQUEST","form","flex","marginLeft","IconButton","aria-label","xs","md","SearchIcon","fill","inputRef","Navbar","logOutLoading","uploadModalOpen","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","showModal","showLoginModal","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","Logout","logoutRequestAction","uploadClick","handleMobileMenuOpen","currentTarget","onReady","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","flexGrow","marginBottom","AppBar","backgroundColor","Toolbar","noWrap","sm","edge","aria-haspopup","AddIcon","aria-controls","AccountCircle","float","MoreIcon","StyledCardAction","styled","CardActions","Cardpost","logInDone","like","setLike","likeClick","setLikeClick","likers","setIsLoginFormOpen","isUploadFormOpen","setIsUploadFormOpen","imageIndex","modalOpen","setModalOpen","ImagePath","setImagePath","onToggleLike","prev","UNLIKE_POST_REQUEST","LIKE_POST_REQUEST","delClick","duplicateClick","DUPLICATE_POST_REQUEST","DELETE_POST_REQUEST","editClick","onClickRightArrow","onClickLeftArrow","TagClick","hashname","scrollTo","behavior","isUserLiked","v","Card","maxWidth","CardActionArea","href","CardMedia","image","ArrowRightIcon","right","zIndex","cursor","Brightness1RoundedIcon","ArrowLeftIcon","CardContent","FileCopyIcon","opacity","EditIcon","DeleteIcon","fontSize","verticalAlign","FavoriteIcon","FavoriteBorderTwoToneIcon","margin","PostHashtag","HashtagId","a","Item","Paper","theme","palette","mode","typography","body2","padding","spacing","secondary","ResponsiveGrid","Grid","container","columns","lg","Likers","NoticeModal","closeNoticeModal","now","Date","getDate","h1","h2","ol","br","Home","loadPostLoading","onInfiniteScroll","hasMorePost","resultStore","setResultStore","onScroll","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","LOAD_POST_REQUEST","removeEventListener","loadPosts","RELOAD_POST_REQUEST","Head","meta","content"],"sourceRoot":""}