{"version":3,"file":"107.js","mappings":"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","sources":["webpack://fashion_ref/./reducers/index.js","webpack://fashion_ref/./reducers/post.js","webpack://fashion_ref/./reducers/user.js","webpack://fashion_ref/./sagas/index.js","webpack://fashion_ref/./sagas/post.js","webpack://fashion_ref/./sagas/user.js","webpack://fashion_ref/./store/configureStore.js"],"sourcesContent":["import {HYDRATE} from 'next-redux-wrapper';\r\nimport { combineReducers } from 'redux';\r\nimport user from './user';\r\nimport post from './post';\r\n\r\n\r\nconst rootReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case HYDRATE:\r\n      // console.log('HYDRATE', action);\r\n      return action.payload;\r\n    default: {\r\n      const combinedReducer = combineReducers({\r\n        user,\r\n        post,\r\n      });\r\n      return combinedReducer(state, action);\r\n    }\r\n  }\r\n};\r\nexport default rootReducer;","import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  postArray: [],\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  deletePostLoading: false,\r\n  deletePostDone: false,\r\n  deletePostError: null,\r\n  getHashTagsLoading: false,\r\n  getHashTagsDone: false,\r\n  getHashTagsError: null,\r\n  hashtagSearchLoading: false,\r\n  hashtagSearchDone: false,\r\n  hashtagSearchError: null,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  duplicatePostLoading: false,\r\n  duplicatePostDone: false,\r\n  duplicatePostError: null,\r\n  editPostLoading: false,\r\n  editPostDone: false,\r\n  editPostError: null,\r\n  getUserPostLoading: false,\r\n  getUserPostDone: false,\r\n  getUserPostError: null,\r\n  getUserLikedPostLoading: false,\r\n  getUserLikedPostDone: false,\r\n  getUserLikedPostError: null,\r\n  onInfiniteScroll: true,\r\n  isEdit: false,\r\n  hashtags: [],\r\n  hasMorePost: true,\r\n};\r\n\r\nexport const RELOAD_POST_REQUEST = \"RELOAD_POST_REQUEST\";\r\n\r\nexport const TOGGLE_SCROLL_REQUEST = \"TOGGLE_SCROLL_REQUEST\";\r\nexport const TOGGLE_ISEDIT_REQUEST = \"TOGGLE_ISEDIT_REQUEST\";\r\n\r\nexport const TOGGLE_ADD_POST_DONE_REQUEST = \"TOGGLE_ADD_POST_DONE_REQUEST\";\r\nexport const TOGGLE_EDIT_POST_DONE_REQUEST = \"TOGGLE_EDIT_POST_DONE_REQUEST\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\r\nexport const LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\r\nexport const LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\r\n\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\nexport const DELETE_POST_REQUEST = \"DELETE_POST_REQUEST\";\r\nexport const DELETE_POST_SUCCESS = \"DELETE_POST_SUCCESS\";\r\nexport const DELETE_POST_FAILURE = \"DELETE_POST_FAILURE\";\r\n\r\nexport const GET_HASHTAGS_REQUEST = \"GET_HASHTAGS_REQUEST\";\r\nexport const GET_HASHTAGS_SUCCESS = \"GET_HASHTAGS_SUCCESS\";\r\nexport const GET_HASHTAGS_FAILURE = \"GET_HASHTAGS_FAILURE\";\r\n\r\nexport const HASHTAG_SEARCH_REQUEST = \"HASHTAG_SEARCH_REQUEST\";\r\nexport const HASHTAG_SEARCH_SUCCESS = \"HASHTAG_SEARCH_SUCCESS\";\r\nexport const HASHTAG_SEARCH_FAILURE = \"HASHTAG_SEARCH_FAILURE\";\r\n\r\nexport const DUPLICATE_POST_REQUEST = \"DUPLICATE_POST_REQUEST\";\r\nexport const DUPLICATE_POST_SUCCESS = \"DUPLICATE_POST_SUCCESS\";\r\nexport const DUPLICATE_POST_FAILURE = \"DUPLICATE_POST_FAILURE\";\r\n\r\nexport const EDIT_POST_REQUEST = \"EDIT_POST_REQUEST\";\r\nexport const EDIT_POST_SUCCESS = \"EDIT_POST_SUCCESS\";\r\nexport const EDIT_POST_FAILURE = \"EDIT_POST_FAILURE\";\r\n\r\nexport const GET_USER_POST_REQUEST = \"GET_USER_POST_REQUEST\";\r\nexport const GET_USER_POST_SUCCESS = \"GET_USER_POST_SUCCESS\";\r\nexport const GET_USER_POST_FAILURE = \"GET_USER_POST_FAILURE\";\r\n\r\nexport const GET_USER_LIKED_POST_REQUEST = \"GET_USER_LIKED_POST_REQUEST\";\r\nexport const GET_USER_LIKED_POST_SUCCESS = \"GET_USER_LIKED_POST_SUCCESS\";\r\nexport const GET_USER_LIKED_POST_FAILURE = \"GET_USER_LIKED_POST_FAILURE\";\r\n\r\nexport const POST_SORT_REQUEST = \"POST_SORT_REQUEST\";\r\n\r\nexport const addPost = (data) => {\r\n  return {\r\n    type: ADD_POST_REQUEST,\r\n    data: data,\r\n  };\r\n};\r\n\r\nexport const loadPost = (data) => {\r\n  return {\r\n    type: LOAD_POST_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const gethashtagsRequestAction = (data) => {\r\n  return {\r\n    type: GET_HASHTAGS_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const gethashtagsSuccessAction = (data) => {\r\n  return {\r\n    type: GET_HASHTAGS_SUCCESS,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const gethashtagsFailureAction = (data) => {\r\n  return {\r\n    type: GET_HASHTAGS_FAILURE,\r\n    data,\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POST_REQUEST:\r\n        draft.loadPostLoading = true;\r\n        draft.loadPostDone = false;\r\n        draft.loadPostError = null;\r\n        break;\r\n\r\n      case LOAD_POST_SUCCESS:\r\n        draft.postArray = draft.postArray.concat(action.data);\r\n        draft.loadPostDone = true;\r\n        draft.loadPostLoading = false;\r\n        draft.hasMorePost = action.data.length === 24; //나중에 바꿔줘야함.\r\n        draft.onInfiniteScroll = true;\r\n        break;\r\n\r\n      case LOAD_POST_FAILURE:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostError = action.error;\r\n        break;\r\n\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n\r\n      case ADD_POST_SUCCESS:\r\n        draft.postArray.unshift(action.data);\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        break;\r\n\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n\r\n      case DELETE_POST_REQUEST:\r\n        draft.deletePostLoading = true;\r\n        draft.deletePostDone = false;\r\n        draft.deletePostError = null;\r\n        break;\r\n      case DELETE_POST_SUCCESS:\r\n        draft.postArray = draft.postArray.filter(\r\n          (v) => v.id !== action.data.PostId\r\n        );\r\n        draft.deletePostDone = true;\r\n        draft.deletePostLoading = false;\r\n        break;\r\n\r\n      case DELETE_POST_FAILURE:\r\n        draft.deletePostLoading = false;\r\n        draft.deletePostError = action.error;\r\n        break;\r\n\r\n      case GET_HASHTAGS_REQUEST:\r\n        draft.getHashTagsLoading = true;\r\n        draft.getHashTagsError = null;\r\n        draft.getHashTagsDone = false;\r\n        break;\r\n\r\n      case GET_HASHTAGS_SUCCESS:\r\n        draft.getHashTagsLoading = true;\r\n        draft.hashtags = action.data;\r\n        draft.getHashTagsDone = true;\r\n        break;\r\n\r\n      case GET_HASHTAGS_FAILURE:\r\n        draft.getHashTagsLoading = false;\r\n        draft.getHashTagsError = action.error;\r\n        break;\r\n\r\n      case HASHTAG_SEARCH_REQUEST:\r\n        draft.hashtagSearchLoading = true;\r\n        draft.hashtagSearchDone = false;\r\n        draft.hashtagSearchError = null;\r\n        break;\r\n\r\n      case HASHTAG_SEARCH_SUCCESS:\r\n        draft.postArray = action.data;\r\n        draft.hashtagSearchDone = true;\r\n        draft.hashtagSearchLoading = false;\r\n        draft.onInfiniteScroll = true;\r\n        break;\r\n\r\n      case HASHTAG_SEARCH_FAILURE:\r\n        draft.hashtagSearchLoading = false;\r\n        draft.hashtagSearchError = action.error;\r\n        break;\r\n\r\n      case LIKE_POST_REQUEST:\r\n        draft.likePostLoading = true;\r\n        draft.likePostDone = false;\r\n        draft.likePostError = null;\r\n        break;\r\n\r\n      case LIKE_POST_SUCCESS:\r\n        draft.likePostLoading = false;\r\n        draft.likePostDone = true;\r\n        break;\r\n\r\n      case LIKE_POST_FAILURE:\r\n        draft.likePostLoading = false;\r\n        draft.likePostError = action.error;\r\n        break;\r\n\r\n      case UNLIKE_POST_REQUEST:\r\n        draft.unlikePostLoading = true;\r\n        draft.unlikePostDone = false;\r\n        draft.unlikePostError = null;\r\n        break;\r\n\r\n      case UNLIKE_POST_SUCCESS:\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostDone = true;\r\n        break;\r\n\r\n      case UNLIKE_POST_FAILURE:\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostError = action.error;\r\n        break;\r\n\r\n      case DUPLICATE_POST_REQUEST:\r\n        draft.duplicatePostLoading = true;\r\n        draft.duplicatePostDone = false;\r\n        draft.duplicatePostError = null;\r\n        break;\r\n\r\n      case DUPLICATE_POST_SUCCESS:\r\n        draft.postArray.unshift(action.data);\r\n        draft.duplicatePostLoading = false;\r\n        draft.duplicatePostDone = true;\r\n        break;\r\n\r\n      case DUPLICATE_POST_FAILURE:\r\n        draft.duplicatePostLoading = false;\r\n        draft.duplicatePostError = action.error;\r\n        break;\r\n\r\n      case EDIT_POST_REQUEST:\r\n        draft.editPostLoading = true;\r\n        draft.editPostDone = false;\r\n        draft.editPostError = null;\r\n        break;\r\n\r\n      case EDIT_POST_SUCCESS:\r\n        //바뀐 포스팅 인덱스 찾아서 그것만 바꿔서 postArray 다시 업뎃\r\n        const editedPost = state.postArray.find(\r\n          (v) => v.id === action.data.postId\r\n        );\r\n        const editedPostindex = state.postArray.indexOf(editedPost);\r\n\r\n        draft.postArray[editedPostindex] = action.data.postInfo;\r\n        draft.editPostLoading = false;\r\n        draft.editPostDone = true;\r\n        break;\r\n\r\n      case EDIT_POST_FAILURE:\r\n        draft.editPostLoading = false;\r\n        draft.editPostError = action.error;\r\n        break;\r\n\r\n      case GET_USER_POST_REQUEST:\r\n        draft.getUserPostLoading = true;\r\n        draft.getUserPostDone = false;\r\n        draft.getUserPostError = null;\r\n        break;\r\n\r\n      case GET_USER_POST_SUCCESS:\r\n        draft.postArray = action.data;\r\n        draft.getUserPostLoading = false;\r\n        draft.getUserPostDone = true;\r\n        break;\r\n\r\n      case GET_USER_POST_FAILURE:\r\n        draft.getUserPostLoading = false;\r\n        draft.getUserPostError = action.error;\r\n        break;\r\n\r\n      case GET_USER_LIKED_POST_REQUEST:\r\n        draft.getUserLikedPostLoading = true;\r\n        draft.getUserLikedPostDone = false;\r\n        draft.getUserLikedPostError = null;\r\n        break;\r\n\r\n      case GET_USER_LIKED_POST_SUCCESS:\r\n        draft.postArray = action.data;\r\n        draft.getUserLikedPostLoading = false;\r\n        draft.getUserLikedPostDone = true;\r\n        break;\r\n\r\n      case GET_USER_LIKED_POST_FAILURE:\r\n        draft.getUserLikedPostLoading = false;\r\n        draft.getUserLikedPostError = action.error;\r\n        break;\r\n\r\n      case RELOAD_POST_REQUEST:\r\n        draft.postArray = [];\r\n        break;\r\n\r\n      case TOGGLE_SCROLL_REQUEST:\r\n        draft.onInfiniteScroll = false;\r\n        break;\r\n\r\n      case TOGGLE_ADD_POST_DONE_REQUEST:\r\n        draft.addPostDone = false;\r\n        break;\r\n\r\n      case TOGGLE_EDIT_POST_DONE_REQUEST:\r\n        draft.editPostDone = false;\r\n        break;\r\n\r\n      case TOGGLE_ISEDIT_REQUEST:\r\n        draft.isEdit = action.data;\r\n        break;\r\n\r\n      case POST_SORT_REQUEST:\r\n        draft.postArray = action.data;\r\n        break;\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n","import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  loadUserLoading: false, // 유저 정보 가져오기 시도중\r\n  loadUserDone: false,\r\n  loadUserError: null,\r\n  logInLoading: false,\r\n  logInDone: false,\r\n  logInError: null,\r\n  logOutLoading: false,\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  signUpLoading: false,\r\n  signUpDone: false,\r\n  signUpError: null,\r\n  user: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n  posts: [],\r\n};\r\n\r\nexport const LOAD_USER_REQUEST = \"LOAD_USER_REQUEST\";\r\nexport const LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\r\nexport const LOAD_USER_FAILURE = \"LOAD_USER_FAILURE\";\r\n\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const TOGGLE_SIGNUP_DONE = \"TOGGLE_SIGNUP_DONE\";\r\nexport const TOGGLE_LOGIN_DONE = \"TOGGLE_LOGIN_DONE\";\r\n\r\n\r\nexport const loadUser = (data) => {\r\n  return {\r\n    type: LOAD_USER_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const loginSuccessAction = (data) => {\r\n  return {\r\n    type: LOG_IN_SUCCESS,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const loginFailureAction = (data) => {\r\n  return {\r\n    type: LOG_IN_FAILURE,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutRequestAction = (data) => {\r\n  return {\r\n    type: LOG_OUT_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutSuccessAction = (data) => {\r\n  return {\r\n    type: LOG_OUT_SUCCESS,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutFailureAction = (data) => {\r\n  return {\r\n    type: LOG_OUT_FAILURE,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const signupRequestAction = (data) => {\r\n  return {\r\n    type: SIGN_UP_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const signupSuccessAction = (data) => {\r\n  return {\r\n    type: SIGN_UP_SUCCESS,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const signupFailureAction = (data) => {\r\n  return {\r\n    type: SIGN_UP_FAILURE,\r\n    data,\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_USER_REQUEST:\r\n        draft.loadUserLoading = true;\r\n        draft.loadUserError = null;\r\n        draft.loadUserDone = false;\r\n        break;\r\n\r\n      case LOAD_USER_SUCCESS:\r\n        draft.loadUserLoading = true;\r\n        draft.user = action.data;\r\n        draft.loadUserDone = true;\r\n        break;\r\n\r\n      case LOAD_USER_FAILURE:\r\n        draft.loadUserLoading = false;\r\n        draft.loadUserError = action.error;\r\n        break;\r\n\r\n      case LOG_IN_REQUEST:\r\n        draft.logInLoading = false;\r\n        draft.logInError = null;\r\n        draft.user = action.data;\r\n        break;\r\n\r\n      case LOG_IN_SUCCESS:\r\n        draft.logInDone = true;\r\n        draft.logInLoading = false;\r\n        draft.user = action.data;\r\n        break;\r\n\r\n      case LOG_IN_FAILURE:\r\n        draft.logInLoading = false;\r\n        draft.logInError = action.error;\r\n        draft.user = null;\r\n        break;\r\n\r\n      case LOG_OUT_REQUEST:\r\n        draft.logOutLoading = true;\r\n        break;\r\n\r\n      case LOG_OUT_SUCCESS:\r\n        draft.logOutDone = false;\r\n        draft.logOutLoading = false;\r\n        draft.logOutError = null;\r\n        draft.user = null;\r\n        break;\r\n\r\n      case LOG_OUT_FAILURE:\r\n        draft.logOutLoading = false;\r\n        draft.logOutError = action.error;\r\n        break;\r\n\r\n      case SIGN_UP_REQUEST:\r\n        draft.signUpLoading = true;\r\n        draft.signUpError = null;\r\n        draft.signUpDone = false;\r\n        break;\r\n\r\n      case SIGN_UP_SUCCESS:\r\n        draft.signUpLoading = false;\r\n        draft.user = action.data;\r\n        draft.signUpDone = true;\r\n        break;\r\n\r\n      case SIGN_UP_FAILURE:\r\n        draft.signUpLoading = false;\r\n        draft.signUpError = action.error;\r\n        break;\r\n\r\n      case TOGGLE_SIGNUP_DONE:\r\n        draft.signUpDone = false;\r\n        break;\r\n\r\n      case TOGGLE_LOGIN_DONE:\r\n        draft.logInDone = false;\r\n        break;\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n","import { all, fork } from \"redux-saga/effects\";\r\nimport postSaga from \"./post\";\r\nimport userSaga from \"./user\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = 'http://15.164.224.172:8080/';\r\n// axios.defaults.baseURL = 'http://localhost:8080/';\r\naxios.defaults.withCredentials = true;\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(postSaga), \r\n    fork(userSaga)\r\n  ]);\r\n}\r\n","import { all, fork, call, put, takeLatest, throttle } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  DELETE_POST_FAILURE,\r\n  DELETE_POST_REQUEST,\r\n  DELETE_POST_SUCCESS,\r\n  GET_HASHTAGS_FAILURE,\r\n  GET_HASHTAGS_REQUEST,\r\n  GET_HASHTAGS_SUCCESS,\r\n  HASHTAG_SEARCH_FAILURE,\r\n  HASHTAG_SEARCH_REQUEST,\r\n  HASHTAG_SEARCH_SUCCESS,\r\n  LIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  LIKE_POST_FAILURE,\r\n  UNLIKE_POST_REQUEST,\r\n  UNLIKE_POST_SUCCESS,\r\n  UNLIKE_POST_FAILURE,\r\n  LOAD_POST_FAILURE,\r\n  LOAD_POST_REQUEST,\r\n  LOAD_POST_SUCCESS,\r\n  DUPLICATE_POST_SUCCESS,\r\n  DUPLICATE_POST_FAILURE,\r\n  DUPLICATE_POST_REQUEST,\r\n  EDIT_POST_REQUEST,\r\n  EDIT_POST_SUCCESS,\r\n  EDIT_POST_FAILURE,\r\n  EDIT_POST_WITH_IMAGES_SUCCESS,\r\n  EDIT_POST_WITH_IMAGES_FAILURE,\r\n  EDIT_POST_WITH_IMAGES_REQUEST,\r\n  TOGGLE_SCROLL_REQUEST,\r\n  GET_USER_POST_SUCCESS,\r\n  GET_USER_POST_FAILURE,\r\n  GET_USER_POST_REQUEST,\r\n  GET_USER_LIKED_POST_SUCCESS,\r\n  GET_USER_LIKED_POST_FAILURE,\r\n  GET_USER_LIKED_POST_REQUEST,\r\n} from \"@/reducers/post\";\r\n\r\n//addpost\r\nfunction addPostAPI(data) {\r\n  console.log(data.image)\r\n  return axios.post(\"/post/addPost\", data);\r\n}\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n//addpost\r\nfunction deletePostAPI(data) {\r\n  return axios.post(`/post/deletpost/${data}`, data);\r\n}\r\nfunction* deletePost(action) {\r\n  try {\r\n    const result = yield call(deletePostAPI, action.data);\r\n    yield put({\r\n      type: DELETE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: DELETE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n//addpost\r\nfunction loadPostAPI(data) {\r\n  return axios.get(`/post/loadPost?lastId=${data}`);\r\n}\r\nfunction* loadPost(action) {\r\n  try {\r\n    console.log(action.data);\r\n    const result = yield call(loadPostAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n//getHashtags\r\nfunction getHashtagsAPI(data) {\r\n  return axios.get(`/post/getHashtags`);\r\n}\r\nfunction* getHashtags(action) {\r\n  try {\r\n    const result = yield call(getHashtagsAPI, action.data);\r\n    yield put({\r\n      type: GET_HASHTAGS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: GET_HASHTAGS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n//hashtag Search\r\nfunction hashtagSearchAPI(data) {\r\n  return axios.post(`/post/hashtagSearch`, data);\r\n}\r\nfunction* hashtagSearch(action) {\r\n  try {\r\n    const result = yield call(hashtagSearchAPI, action.data);\r\n    yield put({\r\n      type: HASHTAG_SEARCH_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: TOGGLE_SCROLL_REQUEST,\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: HASHTAG_SEARCH_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n//like\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}/like`);\r\n}\r\nfunction* likePost(action) {\r\n  try {\r\n    const result = yield call(likePostAPI, action.data);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n//unlike\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}/unlike`);\r\n}\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n//duplicate\r\nfunction duplicatePostAPI(data) {\r\n  return axios.patch(`/post/${data}/duplicate`);\r\n}\r\nfunction* duplicatePost(action) {\r\n  try {\r\n    const result = yield call(duplicatePostAPI, action.data);\r\n    yield put({\r\n      type: DUPLICATE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: DUPLICATE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n//editpost\r\nfunction editPostAPI(data) {\r\n  return axios.post(`/post/editPost`,data);\r\n}\r\nfunction* editPost(action) {\r\n  try {\r\n    const result = yield call(editPostAPI, action.data);\r\n    yield put({\r\n      type: EDIT_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: EDIT_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n//getuserpost\r\nfunction getUserPostAPI(data) {\r\n  return axios.post(`/post/user`, data);\r\n}\r\nfunction* getUserPost(action) {\r\n  try {\r\n    const result = yield call(getUserPostAPI, action.data);\r\n    yield put({\r\n      type: GET_USER_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: GET_USER_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n//getuserLikedpost\r\nfunction getUserLikedPostAPI(data) {\r\n  return axios.post(`/post/userLiked`, data);\r\n}\r\nfunction* getUserLikedPost(action) {\r\n  try {\r\n    const result = yield call(getUserLikedPostAPI, action.data);\r\n    yield put({\r\n      type: GET_USER_LIKED_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: GET_USER_LIKED_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchLoadPost() {\r\n  yield throttle(5000, LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\nfunction* watchDeletePost() {\r\n  yield takeLatest(DELETE_POST_REQUEST, deletePost);\r\n}\r\n\r\nfunction* watchGetHashtags() {\r\n  yield takeLatest(GET_HASHTAGS_REQUEST, getHashtags);\r\n}\r\n\r\nfunction* watchHashtagSearch() {\r\n  yield takeLatest(HASHTAG_SEARCH_REQUEST, hashtagSearch);\r\n}\r\n\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\n\r\nfunction* watchUnLikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction* watchDuplicatePost() {\r\n  yield takeLatest(DUPLICATE_POST_REQUEST, duplicatePost);\r\n}\r\n\r\nfunction* watchEditPost() {\r\n  yield takeLatest(EDIT_POST_REQUEST, editPost);\r\n}\r\nfunction* watchGetUserPost() {\r\n  yield takeLatest(GET_USER_POST_REQUEST, getUserPost);\r\n}\r\n\r\nfunction* watchGetUserLikedPost() {\r\n  yield takeLatest(GET_USER_LIKED_POST_REQUEST, getUserLikedPost);\r\n}\r\n\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchLoadPost),\r\n    fork(watchDeletePost),\r\n    fork(watchGetHashtags),\r\n    fork(watchHashtagSearch),\r\n    fork(watchLikePost),\r\n    fork(watchUnLikePost),\r\n    fork(watchDuplicatePost),\r\n    fork(watchEditPost),\r\n    fork(watchGetUserPost),\r\n    fork(watchGetUserLikedPost),\r\n  ]);\r\n}\r\n","import { all, fork, call, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { \r\n  LOG_IN_REQUEST, LOG_IN_FAILURE, LOG_IN_SUCCESS, \r\n  LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, \r\n  SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS,\r\n  LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, } from \"@/reducers/user\";\r\n\r\n\r\n//load user\r\nfunction loadUserAPI(data) {\r\n  return axios.get(`/user/user`);\r\n}\r\n\r\nfunction* loadUser(action) {\r\n  try {\r\n    const result = yield call(loadUserAPI, action.data);\r\n    // console.log('loadUserData', result.data);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n//login\r\nfunction loginAPI(data) {\r\n  return axios.post(\"/user/login\", data);\r\n}\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(loginAPI, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n//logout\r\nfunction logoutAPI() {\r\n  return axios.get(\"/user/logout\");\r\n}\r\nfunction* logOut() {\r\n  try {\r\n    const result = yield call(logoutAPI);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n//signup\r\nfunction signupAPI(data) { // is not gnerator\r\n  console.log(\"data\", data)\r\n  return axios.post(\"/user/signup\", data);\r\n}\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signupAPI, action.data);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err)\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga(){\r\n  yield all([\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n    fork(watchLoadUser),\r\n  ])\r\n}","import {createWrapper} from 'next-redux-wrapper';\r\nimport {applyMiddleware, createStore, compose } from 'redux';\r\nimport reducer from '../reducers'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from '@redux-saga/core';\r\nimport rootSaga from '@/sagas'\r\n\r\n    \r\nconst loggerMiddleware = ({ dispatch, getState}) => (next) => (action) => {\r\n  // if(typeof action ==='function'){\r\n  //   return action(dispatch, getState, extraArgument)\r\n  // }\r\n  // console.log(action);\r\n  return next(action);\r\n}\r\n\r\nconst configureStore =() => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware, loggerMiddleware];\r\n  const enhancer = (process.env.NODE_ENV === 'production')\r\n    ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\r\n\r\n  const store = createStore(reducer, enhancer);\r\n  store.sagaTask = sagaMiddleware.run(rootSaga)\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;"],"names":["HYDRATE","combineReducers","user","post","rootReducer","state","action","type","payload","combinedReducer","produce","initialState","postArray","addPostLoading","addPostDone","addPostError","loadPostLoading","loadPostDone","loadPostError","deletePostLoading","deletePostDone","deletePostError","getHashTagsLoading","getHashTagsDone","getHashTagsError","hashtagSearchLoading","hashtagSearchDone","hashtagSearchError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","duplicatePostLoading","duplicatePostDone","duplicatePostError","editPostLoading","editPostDone","editPostError","getUserPostLoading","getUserPostDone","getUserPostError","getUserLikedPostLoading","getUserLikedPostDone","getUserLikedPostError","onInfiniteScroll","isEdit","hashtags","hasMorePost","RELOAD_POST_REQUEST","TOGGLE_SCROLL_REQUEST","TOGGLE_ISEDIT_REQUEST","TOGGLE_ADD_POST_DONE_REQUEST","TOGGLE_EDIT_POST_DONE_REQUEST","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","GET_HASHTAGS_REQUEST","GET_HASHTAGS_SUCCESS","GET_HASHTAGS_FAILURE","HASHTAG_SEARCH_REQUEST","HASHTAG_SEARCH_SUCCESS","HASHTAG_SEARCH_FAILURE","DUPLICATE_POST_REQUEST","DUPLICATE_POST_SUCCESS","DUPLICATE_POST_FAILURE","EDIT_POST_REQUEST","EDIT_POST_SUCCESS","EDIT_POST_FAILURE","GET_USER_POST_REQUEST","GET_USER_POST_SUCCESS","GET_USER_POST_FAILURE","GET_USER_LIKED_POST_REQUEST","GET_USER_LIKED_POST_SUCCESS","GET_USER_LIKED_POST_FAILURE","POST_SORT_REQUEST","addPost","data","loadPost","gethashtagsRequestAction","gethashtagsSuccessAction","gethashtagsFailureAction","reducer","draft","concat","length","error","unshift","filter","v","id","PostId","editedPost","find","postId","editedPostindex","indexOf","postInfo","loadUserLoading","loadUserDone","loadUserError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","signUpData","loginData","posts","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","TOGGLE_SIGNUP_DONE","TOGGLE_LOGIN_DONE","loadUser","loginRequestAction","loginSuccessAction","loginFailureAction","logoutRequestAction","logoutSuccessAction","logoutFailureAction","signupRequestAction","signupSuccessAction","signupFailureAction","all","fork","postSaga","userSaga","axios","defaults","baseURL","withCredentials","rootSaga","call","put","takeLatest","throttle","EDIT_POST_WITH_IMAGES_SUCCESS","EDIT_POST_WITH_IMAGES_FAILURE","EDIT_POST_WITH_IMAGES_REQUEST","addPostAPI","console","log","image","result","err","response","deletePostAPI","deletePost","loadPostAPI","get","getHashtagsAPI","getHashtags","hashtagSearchAPI","hashtagSearch","likePostAPI","patch","likePost","unlikePostAPI","delete","unlikePost","duplicatePostAPI","duplicatePost","editPostAPI","editPost","getUserPostAPI","getUserPost","getUserLikedPostAPI","getUserLikedPost","watchAddPost","watchLoadPost","watchDeletePost","watchGetHashtags","watchHashtagSearch","watchLikePost","watchUnLikePost","watchDuplicatePost","watchEditPost","watchGetUserPost","watchGetUserLikedPost","loadUserAPI","loginAPI","logIn","logoutAPI","logOut","signupAPI","signUp","watchLoadUser","watchLogIn","watchLogOut","watchSignUp","createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","createSagaMiddleware","loggerMiddleware","dispatch","getState","next","configureStore","sagaMiddleware","middlewares","enhancer","process","store","sagaTask","run","wrapper","debug"],"sourceRoot":""}